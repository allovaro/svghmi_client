{"version":3,"sources":["store/actions/types.js","config/constant.js","store/actions/auth.js","services/auth.service.js","components/navBar/navBar.js","components/footer/footer.js","components/app-info/app-info.js","components/dropfiles/dropfiles.js","components/checkBoxItem/checkBoxItem.js","components/inputFieldItem/inputFieldItem.js","components/controls/controls.js","components/error/error.js","components/svghmi-preferences/svghmi-preferences.js","components/pages/main.js","components/loginComponent/loginComponent.js","components/pages/login.js","components/pricingElement/pricingElement.js","components/pricingTable/pricingTable.js","components/profileComponent/profileComponent.js","components/pages/profile.js","components/messageTemplate/messageTemplate.js","components/paymentResult/paymentResult.js","components/notFoundPage/notFoundPage.js","components/commonMessage/commonMessage.js","components/forgotPassword/forgotPassword.js","components/resetPasswordForm/resetPasswordForm.js","components/pages/confirmationPage.js","components/app/app.js","store/reducers/auth.js","store/reducers/message.js","store/reducers/index.js","store/index.js","index.js"],"names":["REGISTER_SUCCESS","REGISTER_FAIL","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","SET_MESSAGE","CLEAR_MESSAGE","API_SERVER","CONFIG_DEFAULT","svgo","name","params","attrs","optimization","delRefs","moveGradients","addDefaults","spaceToComma","connectBgColor","polyToPath","bgColorId","addFlipInterface","registerAction","username","email","password","dispatch","fetch","method","headers","body","JSON","stringify","then","response","json","data","error","Error","cause","register","type","payload","Promise","resolve","message","msg","reject","loginAction","access_token","localStorage","setItem","user","level","expires_in","login","token","changeNameAction","changeName","logoutAction","removeItem","Navbar","useSelector","state","auth","isLoggedIn","useDispatch","navigate","useNavigate","SignUp","className","to","LogOut","onClick","activestyle","color","Footer","href","AppInfo","Dropfiles","props","id","files","setFiles","onUploaded","useState","showArrow","setShowArror","onDelete","newFiles","filter","x","length","accept","label","onChange","incommingFiles","value","maxFiles","maxFileSize","url","onUploadFinish","map","file","preview","CheckBoxItem","checked","section","style","display","htmlFor","width","height","viewBox","points","InputFieldItem","labels","header","e","target","replace","split","Controls","downloadId","optimized","onOptimize","uploaded","loader","onDownload","element","document","createElement","download","appendChild","click","Err","console","spanClass","spanText","btnClass","text","SvghmiPreferences","config","onConfigChanged","ShowColorControl","removeIds","forEach","elem","str","slice","delGradientTransform","includes","Main","setState","optimizeFiles","conf","ids","optimizeConf","options","clientId","status","prevState","uuidv4","join","prev","newConf","push","res","mode","log","this","Component","LoginForm","email_signup","fullname","createpassword","repeatpassword","setLogin","isValidEmail","test","isPassIdentical","isSignupFormValid","onHandleChange","emailSignUpClass","emailLoginClass","submitClass","repeatClass","errorMessage","onSubmit","preventDefault","catch","disabled","placeholder","LoginComponent","newMode","toggleMode","bind","Login","PricingElement","month","price","onPurchase","PricingTable","ProfileComponent","userName","setUserName","nameMsg","setNameMsg","useEffect","src","alt","amount","ProfilePage","MessageTemplate","messageClass","is404","children","PaymentResult","iconClass","bgColorClass","HeaderText","NotFoundPage","CommonMessage","useParams","ForgotPassword","setEmail","errorMsg","setErrorMsg","requestReset","ResetPasswordForm","pass1","setPass1","pass2","setPass2","ConfirmationPage","setError","err","ReactGA","initialize","App","pageview","window","location","pathname","search","exact","path","parse","getItem","initialState","combineReducers","action","middleware","thunk","store","createStore","rootReducer","applyMiddleware","title","ReactDOM","render","StrictMode","getElementById"],"mappings":"urBAAaA,EAAmB,mBACnBC,EAAgB,gBAChBC,EAAgB,gBAChBC,EAAa,aACbC,EAAS,SAITC,EAAc,cACdC,EAAgB,gBCLhBC,EAAa,4CAIbC,EAAiB,CAC1BC,KAAM,CACF,sBACA,iBACA,gBACA,sBACA,gBACA,mBACA,iBACA,mBACA,YACA,wBACA,mBACA,CACIC,KAAM,cACNC,OAAQ,CACJC,MAAO,QAInBC,aAAc,CACVC,SAAS,EACTC,eAAe,EACfC,aAAa,EACbC,cAAc,EACdC,gBAAgB,EAChBC,YAAY,EACZC,UAAW,CAAC,WACZC,kBAAkB,ICxBbC,EAAiB,SAACC,EAAUC,EAAOC,GAAlB,OAA+B,SAACC,GAC5D,OCVsB,SAAChB,EAAMc,EAAOC,GACpC,OAAOE,MAAM,GAAD,OAAIpB,EAAJ,mBAAiC,CAC3CqB,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnBR,QACAC,WACAf,WAGHuB,MAAK,SAACC,GAAD,OAAeA,EAASC,MAAxB,IACLF,MAAK,SAACG,GACL,GAAIA,EAAKC,MACP,MAAM,IAAIC,MAAM,mBAAoB,CAACC,MAAOH,IAE9C,OAAOA,CACR,GACF,CDTQI,CAASjB,EAAUC,EAAOC,GAAUQ,MACzC,SAACC,GAWC,OAVAR,EAAS,CACPe,KAAMzC,IAGR0B,EAAS,CACPe,KAAMpC,EACNqC,QAAS,wBAIJC,QAAQC,SAChB,IACD,SAACP,GACC,IAAMQ,EAAWR,EAAME,OAASF,EAAME,MAAMO,IAC5CT,EAAME,MAAMO,IAAM,GAWlB,OATApB,EAAS,CACPe,KAAMxC,IAGRyB,EAAS,CACPe,KAAMpC,EACNqC,QAASG,IAGJF,QAAQI,QAChB,GAEJ,CA/B6B,EAiCjBC,EAAc,SAACzB,EAAUE,GAAX,OAAwB,SAACC,GAClD,OCtBmB,SAACF,EAAOC,GAC3B,OAAOE,MAAM,GAAD,OAAIpB,EAAJ,gBAA8B,CACxCqB,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnBR,QACAC,eAGHQ,MAAK,SAACC,GAAD,OAAeA,EAASC,MAAxB,IACLF,MAAK,SAACG,GACL,GAAIA,EAAKC,MACP,MAAM,IAAIC,MAAM,mBAAoB,CAACC,MAAOH,IAS9C,OAPIA,EAAKa,eACPC,aAAaC,QAAQ,OAAQpB,KAAKC,UAAUI,EAAK1B,OACjDwC,aAAaC,QAAQ,QAASpB,KAAKC,UAAUI,EAAKgB,OAClDF,aAAaC,QAAQ,QAASpB,KAAKC,UAAUI,EAAKa,eAClDC,aAAaC,QAAQ,QAASpB,KAAKC,UAAUI,EAAKiB,QAClDH,aAAaC,QAAQ,aAAcpB,KAAKC,UAAUI,EAAKkB,cAElDlB,CACR,GACF,CDHQmB,CAAMhC,EAAUE,GAAUQ,MAC/B,SAACG,GAWC,OAVAV,EAAS,CACPe,KAAMvC,EACNwC,QAAS,CACPhC,KAAM0B,EAAK1B,KACXc,MAAOY,EAAKgB,KACZC,MAAOjB,EAAKiB,MACZG,MAAOpB,EAAKa,aACZK,WAAYlB,EAAKkB,cAGdX,QAAQC,SAChB,IACD,SAACP,GACC,IAAMQ,EAAWR,EAAME,OAASF,EAAME,MAAMO,IAC5CT,EAAME,MAAMO,IAAM,GAUlB,OATApB,EAAS,CACPe,KAAMtC,IAGRuB,EAAS,CACPe,KAAMpC,EACNqC,QAASG,IAGJF,QAAQI,QAChB,GAEJ,CA9B0B,EAgCdU,EAAmB,SAAC/C,EAAM8C,GAAP,OAAiB,SAAC9B,GAChD,OC3BwB,SAAChB,EAAM8C,GAC/B,OAAO7B,MAAM,GAAD,OAAIpB,EAAJ,kCAAgD,CAC1DqB,OAAQ,OACRC,QAAS,CACP,eAAgB,mBAChB,cAAgB,UAAhB,OAA2B2B,IAE7B1B,KAAMC,KAAKC,UAAU,CACnBtB,WAGHuB,MAAK,SAACC,GAAD,OAAeA,EAASC,MAAxB,IACLF,MAAK,SAACG,GACL,GAAIA,EAAKC,MACP,MAAM,IAAIC,MAAM,mBAAoB,CAACC,MAAOH,IAE9Cc,aAAaC,QAAQ,OAAQpB,KAAKC,UAAUtB,GAC7C,GACF,CDSQgD,CAAWhD,EAAM8C,GAAOvB,MAC7B,SAACG,GAOC,OANAV,EAAS,CACPe,KF5EoB,eE6EpBC,QAAS,CACPhC,UAGGiC,QAAQC,SAChB,IACD,SAACP,GACC,IAAMQ,EAAWR,EAAME,OAASF,EAAME,MAAMO,IAC5CT,EAAME,MAAMO,IAAM,GAUlB,OATApB,EAAS,CACPe,KFtF0B,uBEyF5Bf,EAAS,CACPe,KAAMpC,EACNqC,QAASG,IAGJF,QAAQI,QAChB,GAEJ,CA1B+B,EA4BnBY,EAAe,kBAAM,SAACjC,GCjCjCwB,aAAaU,WAAW,QACxBV,aAAaU,WAAW,SACxBV,aAAaU,WAAW,SDkCxBlC,EAAS,CACPe,KAAMrC,GAET,CAN2B,E,eE1DbyD,EAxCA,WACX,IAAQnD,EAASoD,aAAY,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAA1BtD,KACAuD,EAAeH,aAAY,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAhCC,WAEFvC,EAAWwC,cACXC,EAAWC,cAEXC,EAAU,kBACZ,qBAAKC,UAAU,UAAf,SACI,cAAC,IAAD,CAAMA,UAAU,eAAeC,GAAG,UAAlC,sBAFQ,EAKVC,EAAS,kBACX,wBAAQF,UAAU,uBAAuB7B,KAAK,SAC1CgC,QAAS,WACL/C,EAASiC,KACTQ,EAAS,IACZ,EAJL,oBADW,EASf,OACI,mCACG,sBAAKG,UAAU,YAAf,UACC,cAAC,IAAD,CAAMA,UAAU,WAAWC,GAAG,IAA9B,oBAGA,sBAAKD,UAAU,WAAf,UACI,cAAC,IAAD,CAAMA,UAAU,WACdC,GAAKN,EAAa,WAAY,SAC9BS,YAAa,CAAEC,MAAO,SAFxB,SAIKV,EAAavD,EAAO,WAExBuD,EAAa,cAACO,EAAD,IAAa,cAACH,EAAD,WAK1C,E,MCKcO,MAjDf,WACI,OACI,yBAAQN,UAAU,qBAAlB,UAEI,sBAAKA,UAAU,cAAf,UAEI,wCAAU,2CAEV,oBAAGA,UAAU,eAAb,UACI,mBAAGO,KAAK,IAAIP,UAAU,SAAtB,kBACA,mBAAGO,KAAK,IAAR,qBACA,mBAAGA,KAAK,IAAR,sBAGJ,mBAAGP,UAAU,sBAAb,qCAGJ,sBAAKA,UAAU,gBAAf,UAEI,gCACI,mBAAGA,UAAU,0BACb,gEAAkC,6FAGtC,gCACI,mBAAGA,UAAU,mBACb,4BAAG,mBAAGO,KAAK,iCAAR,6CAIX,sBAAKP,UAAU,eAAf,UAEI,oBAAGA,UAAU,uBAAb,UACI,qDADJ,iIAKA,sBAAKA,UAAU,eAAf,UACI,mBAAGO,KAAK,IAAR,SAAY,mBAAGP,UAAU,qBACzB,mBAAGO,KAAK,IAAR,SAAY,mBAAGP,UAAU,sBACzB,mBAAGO,KAAK,8BAAR,SAAsC,mBAAGP,UAAU,4BAOtE,EC9BcQ,G,MAjBC,WACZ,OACI,sBAAKR,UAAU,WAAf,UACI,qFACA,oBAAGA,UAAU,YAAb,mGAA+G,uCAA/G,2DACA,+BACI,oFACA,kFACA,oDACA,qDACA,+EAEJ,mBAAGA,UAAU,YAAb,8FAGX,G,qBCuCcS,MAjDf,SAAmBC,GACf,IAAQC,EAAoCD,EAApCC,GAAIC,EAAgCF,EAAhCE,MAAOC,EAAyBH,EAAzBG,SAAUC,EAAeJ,EAAfI,WAC7B,EAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KAEQlC,EAAUS,aAAY,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAA3BX,MAWFmC,EAAW,SAACP,GACd,IAAMQ,EAAWP,EAAMQ,QAAO,SAACC,GAAD,OAAOA,EAAEV,KAAOA,CAAhB,IACN,IAApBQ,EAASG,QACTL,GAAa,GAEjBJ,EAASM,EACZ,EAOD,OACI,sBAAKnB,UAAU,YAAf,UACI,oBAAIA,UAAU,kBAAd,oCACCgB,EAAY,qBAAKhB,UAAU,iBAAwB,KACpD,cAAC,IAAD,CACIuB,OAAO,OACPC,MAAM,2BACNC,SA7BQ,SAACC,GACa,IAA1BA,EAAeJ,QAInBT,EAASa,GACTT,GAAa,IAJTA,GAAa,EAKpB,EAuBWU,MAAOf,EACPgB,SAAoB,YAAV7C,EAAsB,IAAM,EACtC8C,YAAuB,YAAV9C,EAAsB,QAAU,OAC7C+C,IAAG,UAAK7F,EAAL,mCAA0C0E,GAC7CoB,eAjBW,SAACnB,GACpBE,IACAG,GAAa,EAChB,EAMO,SASKL,EAAMoB,KAAI,SAACC,GAAD,OACP,cAAC,IAAD,yBAAUf,SAAUA,GAAce,GAAlC,IAAwCC,SAAO,IADxC,QAM1B,ECxBcC,G,MA5BM,SAACzB,GAClB,IAAQ0B,EAAyC1B,EAAzC0B,QAASjC,EAAgCO,EAAhCP,QAASQ,EAAuBD,EAAvBC,GAAI0B,EAAmB3B,EAAnB2B,QAASb,EAAUd,EAAVc,MAMvC,OACI,sBAAKxB,UAAU,WAAf,UACI,uBACIA,UAAU,UACVW,GAAIA,EACJyB,QAASA,EACTX,SAVI,WACZtB,EAAQkC,EAAS1B,GAAKyB,EACzB,EASWjE,KAAK,WACLmE,MAAO,CAACC,QAAS,UACrB,wBAAOvC,UAAU,MAAKwC,QAAS7B,EAA/B,UACI,+BACI,qBAAK8B,MAAM,OAAOC,OAAO,OAAOC,QAAQ,YAAxC,SACI,0BAAUC,OAAO,2BAGzB,+BAAOpB,SAItB,GCTcqB,G,MAjBQ,SAACnC,GACpB,IAAQoC,EAA0CpC,EAA1CoC,OAAQrB,EAAkCf,EAAlCe,SAAUd,EAAwBD,EAAxBC,GAAI0B,EAAoB3B,EAApB2B,QAASU,EAAWrC,EAAXqC,OAOvC,OACI,wBAAOP,QAAQ,MAAMxC,UAAU,MAA/B,UACI,uBAAO7B,KAAK,OAAOwC,GAAG,MAAMgB,MAAOmB,EAAQrB,SAPhC,SAACuB,GAChB,IAAMrB,EAAQqB,EAAEC,OAAOtB,MAAMuB,QAAQ,IAAK,IAAIC,MAAM,KACpD1B,EAASY,EAAS1B,EAAIgB,EACzB,IAKW,sBAAM3B,UAAU,QAAhB,SAAyB+C,IACzB,sBAAM/C,UAAU,eAG/B,GCkCcoD,G,MA/CE,SAAC1C,GACd,IAAQ2C,EAAwD3C,EAAxD2C,WAAYC,EAA4C5C,EAA5C4C,UAAWC,EAAiC7C,EAAjC6C,WAAYC,EAAqB9C,EAArB8C,SAAUC,EAAW/C,EAAX+C,OAG/CC,EAAU,iDAAG,8FACf,KACUC,EAAUC,SAASC,cAAc,MAC/BtD,KAAR,UAAkBtE,EAAlB,+BAAmDoH,GACnDM,EAAQG,SAAW,aACnBF,SAASpG,KAAKuG,YAAYJ,GAC1BA,EAAQK,OAGX,CAFC,MAAOC,GACLC,QAAQnG,MAAM,2CACjB,CATc,2CAAH,qDAaVoC,EAAO,iDAAG,wFACRqD,IAAaF,EACbC,IACOD,GACPI,IAJQ,2CAAH,qDAQTS,EAAYV,EAAS,SAAW,UAChCW,EAAWd,EAAY,WAAa,UACpCe,EAAW,UASf,OARIZ,IACAW,EAAW,IAEVZ,GAAaF,IACde,GAAY,eACZD,EAAW,iBAIX,mCACI,wBACIpE,UAAWqE,EACXlE,QAASA,EAFb,SAGQ,sBAAMH,UAAWmE,EAAjB,SAA6BC,OAIhD,GCvCcpG,G,MARD,SAAC0C,GACX,OACI,qBAAKV,UAAU,gBAAf,SACI,sBAAMA,UAAU,aAAhB,SAA8BU,EAAM4D,QAG/C,GCwLcC,G,MAzLW,SAAC7D,GACvB,IAAQ8D,EAAmC9D,EAAnC8D,OAAQC,EAA2B/D,EAA3B+D,gBAAiB1G,EAAU2C,EAAV3C,MAE3B2G,EAAmBF,EAAOjI,aAAaK,eACzC,cAAC,EAAD,CACIyF,QAAQ,eACR1B,GAAG,YACHoC,OAAO,kCACPD,OAAQ0B,EAAOjI,aAAaO,UAC5B2E,SAAUgD,IACZ,KAEFE,EAAY,GAQhB,OAPAH,EAAOrI,KAAKyI,SAAQ,SAAAC,GAChB,GAAkB,gBAAdA,EAAKzI,KAAwB,CAC7B,IAAM0I,EAAMD,EAAKxI,OAAOC,MACxBqI,EAAYG,EAAIC,MAAM,EAAGD,EAAIxD,OAAS,EACzC,CACJ,IAGG,sBAAKtB,UAAU,qBAAf,UACI,cAAC,EAAD,CACIuD,WAAY7C,EAAM6C,WAClBF,WAAY3C,EAAM2C,WAClBI,OAAQ/C,EAAM+C,OACdD,SAAU9C,EAAM8C,SAChBF,UAAW5C,EAAM4C,YACpBvF,EAAQ,cAAC,EAAD,CAAOuG,KAAK,6DAAgE,KACrF,sBAAKtE,UAAU,mBAAf,UACI,uBAAOW,GAAG,eAAeX,UAAU,SAAS7B,KAAK,aACjD,uBAAOqE,QAAQ,eAAexC,UAAU,aAAxC,qBACA,qBAAKA,UAAU,sBAAf,SACI,sBAAKA,UAAU,gBAAf,UACI,cAAC,EAAD,CACIW,GAAG,cACHa,MAAM,oCACNa,QAAQ,eACRD,QAASoC,EAAOjI,aAAaG,YAC7ByD,QAASsE,IACb,cAAC,EAAD,CACI9D,GAAG,uBACHa,MAAM,oEACNa,QAAQ,eACRD,QAASoC,EAAOjI,aAAayI,qBAC7B7E,QAASsE,IACb,cAAC,EAAD,CACI9D,GAAG,eACHa,MAAM,wEACNa,QAAQ,eACRD,QAASoC,EAAOjI,aAAaI,aAC7BwD,QAASsE,IACb,cAAC,EAAD,CACI9D,GAAG,UACHa,MAAM,0CACNa,QAAQ,eACRD,QAASoC,EAAOjI,aAAaC,QAC7B2D,QAASsE,IACb,cAAC,EAAD,CACI9D,GAAG,gBACHa,MAAM,4BACNa,QAAQ,eACRD,QAASoC,EAAOjI,aAAaE,cAC7B0D,QAASsE,IACb,cAAC,EAAD,CACI9D,GAAG,mBACHa,MAAM,iCACNa,QAAQ,eACRD,QAASoC,EAAOjI,aAAaQ,iBAC7BoD,QAASsE,IACb,cAAC,EAAD,CACI9D,GAAG,qBACHa,MAAM,gBACNa,QAAQ,OACRD,QAASoC,EAAOrI,KAAK8I,SAAS,sBAC9B9E,QAASsE,IACb,cAAC,EAAD,CACI9D,GAAG,aACHa,MAAM,eACNa,QAAQ,eACRD,QAASoC,EAAOjI,aAAaM,WAC7BsD,QAASsE,IACb,cAAC,EAAD,CACI9D,GAAG,gBACHa,MAAM,6DACNa,QAAQ,OACRD,QAASoC,EAAOrI,KAAK8I,SAAS,iBAC9B9E,QAASsE,IACb,cAAC,EAAD,CACI9D,GAAG,mBACHa,MAAM,uDACNa,QAAQ,OACRD,QAASoC,EAAOrI,KAAK8I,SAAS,oBAC9B9E,QAASsE,IACb,cAAC,EAAD,CACI9D,GAAG,iBACHa,MAAM,oDACNa,QAAQ,eACRD,QAASoC,EAAOjI,aAAaK,eAC7BuD,QAASsE,IACZC,EACD,cAAC,EAAD,CACIrC,QAAQ,OACR1B,GAAG,cACHoC,OAAO,4CACPD,OAAQ6B,EACRlD,SAAUgD,YAI1B,sBAAKzE,UAAU,mBAAf,UACI,uBAAOW,GAAG,eAAeX,UAAU,SAAS7B,KAAK,aACjD,uBAAOqE,QAAQ,eAAexC,UAAU,aAAxC,0BACA,qBAAKA,UAAU,sBAAf,SACI,sBAAKA,UAAU,gBAAf,UACI,sBAAKA,UAAU,cAAf,UACI,oDACA,oBAAGA,UAAU,gBAAb,qFACgB,gEADhB,+BAE8B,uDAF9B,+BAEuF,2CAFvF,wIAOJ,sBAAKA,UAAU,cAAf,UACI,oBAAIA,UAAU,gBAAd,sCACA,oBAAGA,UAAU,gBAAb,kDAAkE,kDAAlE,iCACQ,8CADR,8JAIJ,sBAAKA,UAAU,cAAf,UACI,oBAAIA,UAAU,gBAAd,sCACA,oBAAGA,UAAU,gBAAb,8DAA8E,kDAA9E,0CACY,8CADZ,+CAGJ,sBAAKA,UAAU,cAAf,UACI,qBAAIA,UAAU,gBAAd,oBAAqC,qCAArC,QAAqD,2CAArD,mBACA,mBAAGA,UAAU,gBAAb,kMAEJ,sBAAKA,UAAU,cAAf,UACI,oBAAIA,UAAU,gBAAd,sCACA,oBAAGA,UAAU,gBAAb,iDAAiE,qCAAjE,kBAGJ,sBAAKA,UAAU,cAAf,UACI,oBAAIA,UAAU,gBAAd,gCACA,mBAAGA,UAAU,gBAAb,0FAGJ,sBAAKA,UAAU,cAAf,UACI,oBAAIA,UAAU,gBAAd,mCACA,mBAAGA,UAAU,gBAAb,8GAGJ,sBAAKA,UAAU,cAAf,UACI,oBAAIA,UAAU,gBAAd,kCACA,mBAAGA,UAAU,gBAAb,sHAGJ,sBAAKA,UAAU,cAAf,UACI,oBAAIA,UAAU,gBAAd,wEACA,mBAAGA,UAAU,gBAAb,6DAGJ,sBAAKA,UAAU,cAAf,UACI,oBAAIA,UAAU,gBAAd,qCACA,mBAAGA,UAAU,gBAAb,yFAGJ,sBAAKA,UAAU,cAAf,UACI,oBAAIA,UAAU,gBAAd,0CACA,oBAAGA,UAAU,gBAAb,2KAA2L,wCAA3L,wGAA8S,wCAA9S,+KAAwe,oEAAxe,yDAAwkB,2CAAxkB,KAA2lB,gDAA3lB,KAAmnB,gDAAnnB,kJAEJ,sBAAKA,UAAU,cAAf,UACI,oBAAIA,UAAU,gBAAd,4CACA,mBAAGA,UAAU,gBAAb,8LAQ3B,GCjLKkF,G,wDACF,WAAYxE,GAAQ,IAAD,8BACf,cAAMA,IA8BVG,SAAW,SAACD,GACR,EAAKuE,SAAS,CAAEvE,SACnB,EAjCkB,EAmCnBwE,cAnCmB,iDAmCH,WAAOC,GAAP,8FACZ,EAAKF,SAAS,CACVvE,MAAO,GACP6C,QAAQ,IAGN6B,EAAM,EAAK7F,MAAM8F,aAAahJ,aAAaO,UAAUsE,QAAO,SAACyD,GAAD,MAAmB,KAATA,CAAV,KAC1DU,EAAiB,EAAK9F,MAAtB8F,cACKhJ,aAAaO,UAAYwI,EACnB,IAAfA,EAAIhE,QAA2B,KAAXgE,EAAI,KACxBC,EAAahJ,aAAaK,gBAAiB,GAEzC4I,EAAU,CACZlI,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU6H,IAjBb,kBAqBelI,MAAM,GAAD,OAAIpB,EAAJ,+BAAqC,EAAKwD,MAAMgG,UAAYD,GArBhF,cAqBF5H,EArBE,iBAsBFA,EAASC,OAtBP,QAuBJD,EAAS8H,QACT,EAAKP,UAAS,SAACQ,GAAD,MAAgB,CAC1BrC,WAAW,EACXE,UAAU,EACVH,WAAYsC,EAAUF,SACtBA,SAAUG,cAASzC,MAAM,KAAK0C,KAAK,IACnCpC,QAAQ,EACR1F,OAAO,EANG,IAxBV,kDAkCRmG,QAAQnG,MAAM,2BACd,EAAKoH,UAAS,SAACQ,GAAD,MAAgB,CAC1BrC,WAAW,EACXE,UAAU,EACVH,WAAYsC,EAAUF,SACtBA,SAAUG,cAASzC,MAAM,KAAK0C,KAAK,IACnCpC,QAAQ,EACR1F,OAAO,EANG,IAnCN,0DAnCG,wDAiFnB0G,gBAAkB,SAACpC,EAAS1B,EAAIgB,GAQ5B,GAPgB,iBAAZU,GACA,EAAK8C,UAAS,SAACW,GACX,IAAMC,EAAO,eAAQD,EAAKP,cAE1B,OADAQ,EAAQ1D,GAAS1B,GAAMgB,EAChB,CAAE4D,aAAcQ,EAC1B,IAEW,SAAZ1D,EAAoB,CACpB,GAAW,gBAAP1B,EAiBA,YAhBA,EAAKwE,UAAS,SAACW,GACX,IAAIC,EAAO,eAAQD,EAAKP,cAaxB,OAZAQ,EAAQ5J,KAAO4J,EAAQ5J,KAAK6F,KAAI,SAAC6C,GAC7B,MAAkB,gBAAdA,EAAKzI,KACE,CACHA,KAAM,cACNC,OAAQ,CACJC,MAAM,IAAD,OAAMqF,EAAN,OAIVkD,CACV,IACDkB,EAAQ5J,KAAO4J,EAAQ5J,KAAKiF,QAAO,SAAAyD,GAAI,OAAIA,IAASlE,CAAb,IAChC,CAAE4E,aAAcQ,EAC1B,IAGL,EAAKZ,UAAS,SAACW,GACX,IAAIC,EAAO,eAAQD,EAAKP,cAMxB,OALIQ,EAAQ5J,KAAK8I,SAAStE,GACtBoF,EAAQ5J,KAAO4J,EAAQ5J,KAAKiF,QAAO,SAAAyD,GAAI,OAAIA,IAASlE,CAAb,IAEvCoF,EAAQ5J,KAAK6J,KAAKrF,GAEf,CAAE4E,aAAcQ,EAC1B,GACJ,CACJ,EArHG,EAAKtG,MAAQ,CACTgG,SAAUG,cAASzC,MAAM,KAAK0C,KAAK,IACnCxC,WAAY,GACZzC,MAAO,GACP2E,aAAcrJ,EACdoH,WAAW,EACXE,UAAU,EACVC,QAAQ,EACR1F,OAAO,GAVI,CAYlB,C,sGAED,yHAE0BV,MAAM,oCAFhC,cAEc4I,EAFd,gBAG2BA,EAAIpI,OAH/B,cAGcC,EAHd,gBAIcT,MAAM,GAAD,OAAIpB,EAAJ,oBAAkC,CACzCqB,OAAQ,OACR4I,KAAM,OACN3I,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAUI,KAVjC,yDAaQoG,QAAQiC,IAAR,MAbR,0D,0EA2GA,WAAU,IAAD,OACL,OACI,qCACI,cAAC,EAAD,IACA,wBAAQnG,UAAU,uBAAlB,SACI,sBAAKA,UAAU,yBAAf,oBACW,sBAAMA,UAAU,SAAhB,yBAGf,cAAC,EAAD,IACA,cAAC,EAAD,CACIY,MAAOwF,KAAK3G,MAAMmB,MAClBC,SAAUuF,KAAKvF,SACfC,WAAY,kBAAO,EAAKqE,SAAS,CAAE7B,WAAW,EAAOE,UAAU,GAAnD,EACZ7C,GAAIyF,KAAK3G,MAAMgG,WACnB,cAAC,EAAD,CACI1H,MAAOqI,KAAK3G,MAAM1B,MAClBwF,WAAY6C,KAAKhB,cACjB/B,WAAY+C,KAAK3G,MAAM4D,WACvBI,OAAQ2C,KAAK3G,MAAMgE,OACnBD,SAAU4C,KAAK3G,MAAM+D,SACrBF,UAAW8C,KAAK3G,MAAM6D,UACtBkB,OAAQ4B,KAAK3G,MAAM8F,aACnBd,gBAAiB2B,KAAK3B,kBAC1B,cAAC,EAAD,MAGX,K,GArJc4B,cAwJJnB,I,cC7Jf,SAASoB,EAAU5F,GACf,IAAQnC,EAAYiB,aAAY,SAAAC,GAAK,OAAIA,EAAMlB,OAAV,IAA7BA,QACR,EAA4BwC,mBAAS,CACjCwF,aAAc,GACdpJ,SAAU,GACVqJ,SAAU,GACVtJ,MAAO,GACPuJ,eAAgB,GAChBC,eAAgB,KANpB,mBAAQzH,EAAR,KAAe0H,EAAf,KASM9G,EAAWC,cACX1C,EAAWwC,cAGXgH,EAAe,SAAC1J,GACpB,MAAO,eAAe2J,KAAK3J,EAC5B,EAEK4J,EAAkB,WACpB,OAAO7H,EAAMwH,iBAAmBxH,EAAMyH,cACzC,EASKK,EAAoB,WACtB,SAAIH,EAAa3H,EAAMsH,eACvBtH,EAAMuH,UACNM,IAIH,EAGKE,EAAiB,SAAChE,GACpB,MAAsBA,EAAEC,OAAhBtC,EAAR,EAAQA,GAAIgB,EAAZ,EAAYA,MACZgF,EAAS,2BAAI1H,GAAL,kBACH0B,EAAKgB,IAEb,EAgCKsF,EAAmBL,EAAa3H,EAAMsH,cAAgB,oBAAsB,iCAC5EW,EAAkBN,EAAa3H,EAAM/B,OAAS,oBAAsB,iCACtEiK,EAAc,gDACC,WAAfzG,EAAMwF,MAAsBa,OAEN,UAAfrG,EAAMwF,MA1DTU,EAAa3H,EAAM/B,QAAU+B,EAAM9B,UAA+B,KAAnB8B,EAAM9B,YAyDzDgK,GAAe,0BAKnB,IAAMC,EAAcN,IAAoB,oBAAsB,iCACxDO,EAAe9I,EAAU,oBAAIyB,UAAU,gBAAd,SAA+BzB,IAAgB,KAE9E,OACI,uBAAM+I,SAvCO,SAACtE,GACdA,EAAEuE,iBACiB,WAAf7G,EAAMwF,MAAqBa,IAC3B3J,EAASJ,EACLiC,EAAMuH,SACNvH,EAAMsH,aACNtH,EAAMwH,iBACT9I,MAAK,WACFkC,EAAS,cACZ,IACA2H,OAAM,WACHtD,QAAQnG,MAAM,0BACjB,IAEDX,EAASsB,EAAYO,EAAM/B,MAAO+B,EAAM9B,WACvCQ,MAAK,WACFkC,EAAS,IACZ,IACA2H,OAAM,WACHb,EAAS,2BAAI1H,GAAL,IACJ/B,MAAO,GACPC,SAAU,KAEjB,GAER,EAcG,UACI,sBAAK6C,UAAU,4BAAf,UACI,sBAAKA,UAAU,+BAAf,UACI,uBAAOA,UAAWkH,EAAiB/I,KAAK,OAAOwC,GAAG,QAAQa,MAAM,QAAQiG,SAAyB,UAAf/G,EAAMwF,KAAkBvE,MAAO1C,EAAM/B,MAAOuE,SAAUuF,EAAgBU,YAAY,UACpK,uBAAO1H,UAAU,oBAAoB7B,KAAK,WAAWwC,GAAG,WAAWa,MAAM,WAAWiG,SAAyB,UAAf/G,EAAMwF,KAAkBvE,MAAO1C,EAAM9B,SAAUsE,SAAUuF,EAAgBU,YAAY,gBAEvL,sBAAK1H,UAAU,gCAAf,UACI,uBAAOA,UAAU,oBAAoB7B,KAAK,OAAOwC,GAAG,WAAWa,MAAM,YAAYiG,SAAyB,WAAf/G,EAAMwF,KAAmBvE,MAAO1C,EAAMuH,SAAU/E,SAAUuF,EAAgBU,YAAY,cACjL,uBAAO1H,UAAWiH,EAAkB9I,KAAK,QAAQwC,GAAG,eAAea,MAAM,QAAQiG,SAAyB,WAAf/G,EAAMwF,KAAmBvE,MAAO1C,EAAMsH,aAAc9E,SAAUuF,EAAgBU,YAAY,UACrL,uBAAO1H,UAAU,oBAAoB7B,KAAK,WAAWwC,GAAG,iBAAiBa,MAAM,WAAWiG,SAAyB,WAAf/G,EAAMwF,KAAmBvE,MAAO1C,EAAMwH,eAAgBhF,SAAUuF,EAAgBU,YAAY,aAChM,uBAAO1H,UAAWoH,EAAajJ,KAAK,WAAWwC,GAAG,iBAAiBa,MAAM,kBAAkBiG,SAAyB,WAAf/G,EAAMwF,KAAmBvE,MAAO1C,EAAMyH,eAAgBjF,SAAUuF,EAAgBU,YAAY,0BAGzM,wBAAQ1H,UAAWmH,EAAahJ,KAAK,SAArC,SAA8D,UAAfuC,EAAMwF,KAAmB,SAAW,YACjFmB,EACe,UAAf3G,EAAMwF,KAAmB,wBAAQlG,UAAU,gBAAgBG,QA1DpD,WACbN,EAAS,mBACZ,EAwDkC,8BAAkF,OAGxH,C,IAmCc8H,E,kDAhCX,WAAYjH,GAAQ,IAAD,8BACf,cAAMA,IACDjB,MAAQ,CACTyG,KAAM,EAAKxF,MAAMwF,MAHN,CAKlB,C,8CAED,WACI,IAAI0B,EAA8B,UAApBxB,KAAK3G,MAAMyG,KAAmB,SAAW,QACvDE,KAAKjB,SAAS,CAAEe,KAAM0B,GACzB,G,oBAED,WACI,OACI,sBAAK5H,UAAS,4CA/Hb,SA+HD,UACI,qBAAKA,UAAS,oDAA+CoG,KAAK3G,MAAMyG,QACxE,0BAASlG,UAAS,oCAA+BoG,KAAK3G,MAAMyG,MAA5D,UACI,yBAAQlG,UAAU,qBAAlB,UACI,6BAAyB,UAApBoG,KAAK3G,MAAMyG,KAAmB,gBAAkB,YACrD,sBAAKlG,UAAU,2BAAf,UACI,iCAA2B,UAApBoG,KAAK3G,MAAMyG,KAAmB,QAAW,UAAhD,yCACA,uBAAOlG,UAAU,kBAAkBW,GAAG,eAAexC,KAAK,WAAWgC,QAASiG,KAAKyB,WAAWC,KAAK1B,QACnG,uBAAO5D,QAAQ,uBAGvB,cAAC8D,EAAD,CAAWJ,KAAME,KAAK3G,MAAMyG,YAI3C,K,GA9BwBG,aC5Gd0B,EARD,SAACrH,GACX,OACI,cAAC,EAAD,CACIwF,KAAMxF,EAAMwF,MAGvB,E,MCiBc8B,MAvBf,SAAwBtH,GACpB,OACI,sBAAKV,UAAU,gBAAf,UACI,qBAAKA,UAAU,uBAAf,SACI,+BAAKU,EAAMuH,MAAX,cAGJ,qBAAKjI,UAAU,wBAAf,SACI,+BACI,+BAAI,yCAAJ,sBACA,+BAAI,yCAAJ,oBACA,+BAAI,iCAASU,EAAMuH,QAAnB,4BAIR,sBAAKjI,UAAU,uBAAf,UACI,+BAAI,oCAAaU,EAAMwH,SACvB,wBAAQ/H,QAAS,kBAAMO,EAAMyH,WAAWzH,EAAMwH,MAAOxH,EAAMuH,MAA1C,EAAjB,2BAIf,E,MCPcG,MAZf,SAAsB1H,GAClB,OACI,qBAAKV,UAAU,yBAAf,SACI,sBAAKA,UAAU,oBAAf,UACI,cAAC,EAAD,CAAgBiI,MAAM,IAAIC,MAAM,KAAKC,WAAYzH,EAAMyH,aACvD,cAAC,EAAD,CAAgBF,MAAM,IAAIC,MAAM,KAAKC,WAAYzH,EAAMyH,aACvD,cAAC,EAAD,CAAgBF,MAAM,IAAIC,MAAM,KAAKC,WAAYzH,EAAMyH,iBAItE,E,MCqEcE,MAzEf,WACI,MAAkD7I,aAAY,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAA3DxC,EAAR,EAAQA,MAAOd,EAAf,EAAeA,KAAMuD,EAArB,EAAqBA,WAAYZ,EAAjC,EAAiCA,MAAOG,EAAxC,EAAwCA,MACxC,EAAgC6B,mBAAS3E,GAAzC,mBAAOkM,EAAP,KAAiBC,EAAjB,KACA,EAA8BxH,mBAAS,IAAvC,mBAAOyH,EAAP,KAAgBC,EAAhB,KACM5I,EAAWC,cACX1C,EAAWwC,cAkCjB,OAhCA8I,qBAAU,WACD/I,GACDE,EAAS,IAEhB,IA6BG,qCACI,sBAAKG,UAAU,kBAAf,UACI,sBAAKA,UAAU,eAAf,UACI,qBAAKA,UAAU,uBAAuB2I,IAAI,0BAA0BC,IAAI,0BACxE,oBAAI5I,UAAU,gBAAd,SAA+B5D,IAC/B,qBAAI4D,UAAU,gBAAd,sBAAuC,sBAAMA,UAAqB,UAAVjB,EAAoB,gBAAkB,cAAvD,SAAwEA,UAGnH,sBAAKiB,UAAU,gBAAf,UACI,uBAAMA,UAAU,cAAhB,UACI,uBAAOwC,QAAQ,aAAf,oBACA,oBAAI7B,GAAG,aAAP,SAAqBzD,OAEzB,uBAAM8C,UAAU,cAAcsH,SApCzB,SAACtE,GAClBA,EAAEuE,iBACFnK,EAAS+B,EACLmJ,EACApJ,IACHvB,MAAK,WACF8K,EAAW,eACd,IACAjB,OAAM,SAACxE,GACJkB,QAAQnG,MAAM,2BACd0K,EAAW,8BACd,GACJ,EAwBe,UACI,uBAAOjG,QAAQ,OAAf,mBACA,uBAAOrE,KAAK,OAAOwC,GAAG,OAAOvE,KAAK,OAAOuF,MAAO2G,EAAU7G,SA1CzD,SAACuB,GAClBuF,EAAYvF,EAAEC,OAAOtB,MACxB,IAyCmB,wBAAQxD,KAAK,SAAb,4BAEHqK,EAAU,4BAAIA,IAAe,KAC9B,uBAAMlB,SA5BG,SAACtE,GACtBkB,QAAQiC,IAAInD,EAAEC,OAAOtB,MACxB,EA0Be,UACI,uBAAOa,QAAQ,OAAf,uBACA,uBAAOrE,KAAK,WAAWwC,GAAG,WAAWvE,KAAK,aAC1C,uBAAO+B,KAAK,WAAWwC,GAAG,kBAAkBvE,KAAK,aACjD,wBAAQ+B,KAAK,SAAb,sCAKZ,cAAC,EAAD,CAAcgK,WAjCH,SAACU,GAChB3E,QAAQiC,IAAI0C,EACf,MAkCJ,EClEcC,MAXf,WAEI,OACI,qCACI,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,MAGX,E,MCsCcC,OAjDf,SAAyBrI,GACrB,IAAMsI,EAAetI,EAAMuI,MAAQ,QAAU,wBAC7C,OACI,qCACI,qBAAKjJ,UAAU,SACf,qBAAKA,UAAU,+BACf,qBAAKA,UAAU,+BACf,qBAAKA,UAAU,+BAEf,qBAAKA,UAAU,eACf,qBAAKA,UAAU,eACf,qBAAKA,UAAU,eACf,qBAAKA,UAAU,eACf,qBAAKA,UAAU,eAEf,qBAAKA,UAAWgJ,EAAhB,SACKtI,EAAMwI,WAGX,sBAAKlJ,UAAU,YAAf,UACI,qBAAKA,UAAU,wBACf,qBAAKA,UAAU,oBACf,qBAAKA,UAAU,2BACf,qBAAKA,UAAU,yBACf,qBAAKA,UAAU,yBACf,qBAAKA,UAAU,0BACf,qBAAKA,UAAU,0BACf,qBAAKA,UAAU,8BACf,qBAAKA,UAAU,+BACf,qBAAKA,UAAU,wBACf,qBAAKA,UAAU,yBACf,qBAAKA,UAAU,yBACf,qBAAKA,UAAU,0BACf,qBAAKA,UAAU,0BACf,qBAAKA,UAAU,2BAEf,qBAAKA,UAAU,kBAAf,SACI,wBAAQW,GAAG,OAAO+B,OAAO,QAAQD,MAAM,YAE3C,sBAAKzC,UAAU,kBAAf,UACI,wBAAQW,GAAG,QAAQ8B,MAAM,OAAOC,OAAO,SACvC,qBAAK1C,UAAU,iCACf,qBAAKA,UAAU,yCAKlC,E,MCdcmJ,OA9Bf,SAAuBzI,GACnB,IAAI0I,EAAY,GACZC,EAAe,iBACfC,EAAa,GAWjB,MAVmB,YAAf5I,EAAMvC,OACNiL,EAAY,cACZC,GAAgB,qBAChBC,EAAa,qBAEE,SAAf5I,EAAMvC,OACNiL,EAAY,cACZC,GAAgB,kBAChBC,EAAa,kBAGb,cAAC,GAAD,UACI,sBAAKtJ,UAAU,UAAf,UACA,qBAAKA,UAAWqJ,EAAhB,SACG,qBAAKrJ,UAAU,gBAAf,SAA+B,mBAAGA,UAAWoJ,EAAW,cAAY,aAEvE,sBAAKpJ,UAAU,kBAAf,UACG,6BAAKsJ,IACL,kJACA,cAAC,IAAD,CAAMrJ,GAAG,IAAT,+BAKd,E,MCbcsJ,OAhBf,SAAsB7I,GAClB,IAAMb,EAAWC,cAKjB,OACI,eAAC,GAAD,CAAiBmJ,OAAK,EAAtB,UACI,qBAAKjJ,UAAU,eAAf,iBACA,qBAAKA,UAAU,kBAAf,qBACA,qBAAKA,UAAU,qBAAf,8DACA,wBAAQA,UAAU,sCAAsCG,QAThD,WACZN,EAAS,IACZ,EAOO,oBAGX,E,MCOc2J,OApBf,SAAuB9I,GACnB,IAAMrE,EAASoN,cAEf,OACI,cAAC,GAAD,UACI,sBAAKzJ,UAAU,oBAAf,UACA,qBAAKA,UAAU,iBAAf,SACG,qBAAKA,UAAU,gBAAf,SAA+B,mBAAGA,UAAU,cAAc,cAAY,aAEzE,sBAAKA,UAAU,kBAAf,UACK3D,EAAOa,MAAQ,6BAAKb,EAAOa,QAAc,KAC1C,6BAAKwD,EAAMqC,SACX,4BAAIrC,EAAMnC,UACV,cAAC,IAAD,CAAM0B,GAAG,IAAT,+BAKf,E,MCqDcyJ,OArEf,WACI,MAA0B3I,mBAAS,IAAnC,mBAAO7D,EAAP,KAAcyM,EAAd,KACA,EAAgC5I,mBAAS,IAAzC,mBAAO6I,EAAP,KAAiBC,EAAjB,KAEMhK,EAAWC,cA6CbqH,EAAc,+CAGlB,OA7CqB,SAACjK,GAClB,MAAO,eAAe2J,KAAK3J,EAC1B,CAyCA0J,CAAa1J,KAAQiK,GAAe,0BAGrC,eAAC,GAAD,WACI,yBAASnH,UAAS,kCAAlB,SACI,uBAAMsH,SAnBD,SAACtE,GACdA,EAAEuE,iBApBe,SAACrK,GAClB,OAAOG,MAAM,GAAD,OAAIpB,EAAJ,yBAAuC,CAC/CqB,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnBR,YAGHS,MAAK,SAACC,GAAD,OAAeA,EAASC,MAAxB,IACLF,MAAK,SAACG,GACL,GAAIA,EAAKC,MACP,MAAM,IAAIC,MAAM,mBAAoB,CAACC,MAAOH,IAE9C,OAAOA,CACR,GACN,CAIGgM,CAAa5M,GACZS,MAAK,WACFkC,EAAS,qBAAD,OAAsB3C,GACjC,IACAsK,OAAM,SAACzJ,GACJ,IAAMQ,EAAWR,EAAME,OAASF,EAAME,MAAMO,IACxCT,EAAME,MAAMO,IAAM,GACtBqL,EAAYtL,GACZoL,EAAS,GACZ,GACJ,EAOW,UACI,oBAAI3J,UAAU,qBAAd,mCACA,qBAAKA,UAAU,+BAAf,SACI,uBAAOA,UAAU,oBAAoB7B,KAAK,OAAOwC,GAAG,QAAQa,MAAM,QAAQG,MAAOzE,EAAOuE,SA9C3F,SAACuB,GACd,IAAQrB,EAAUqB,EAAEC,OAAZtB,MACRgI,EAAShI,EACZ,EA2C+H+F,YAAY,sBAE5H,wBAAQ1H,UAAWmH,EAAahJ,KAAK,SAArC,iCAGPyL,EAAW,oBAAI5J,UAAU,gBAAd,SAAgC4J,IAAiB,OAGxE,E,MCkBcG,OAjFf,WACI,IAAM1N,EAASoN,cACf,EAAgC1I,mBAAS,IAAzC,mBAAO6I,EAAP,KAAiBC,EAAjB,KACA,EAA0B9I,mBAAS,IAAnC,mBAAOiJ,EAAP,KAAcC,EAAd,KACA,EAA0BlJ,mBAAS,IAAnC,mBAAOmJ,EAAP,KAAcC,EAAd,KAEMtK,EAAWC,cACX1C,EAAWwC,cAuDXwH,EAHK4C,IAAUE,EAGmB,oBAAsB,iCAE9D,OACI,eAAC,GAAD,WACI,yBAASlK,UAAS,kCAAlB,SACI,uBAAMsH,SA3BD,SAACtE,GACdA,EAAEuE,iBApBKlK,MAAM,GAAD,OAAIpB,EAAJ,iCAAuCI,EAAO6C,OAAS,CAC/D5B,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnBiD,GAAItE,EAAOsE,GACXxD,SAAU6M,MAGbrM,MAAK,SAACC,GAAD,OAAeA,EAASC,MAAxB,IACLF,MAAK,SAACG,GACL,GAAIA,EAAKC,MACP,MAAM,IAAIC,MAAM,mBAAoB,CAACC,MAAOH,IAE9C,OAAOA,CACR,IAMFH,MAAK,WACFP,EAASiC,KACTQ,EAAS,8BACZ,IACA2H,OAAM,SAACzJ,GACJ,IAAMQ,EAAWR,EAAME,OAASF,EAAME,MAAMO,IACxCT,EAAME,MAAMO,IAAM,GACtB0F,QAAQiC,IAAI5H,GACI,KAAZA,GAAgBsL,EAAY,wBAChCA,EAAYtL,GACZ0L,EAAS,IACTE,EAAS,GACZ,GACJ,EAWW,UACI,oBAAInK,UAAU,qBAAd,8BACA,sBAAKA,UAAU,+BAAf,UACI,uBAAOA,UAAU,oBAAoB7B,KAAK,WAAWwC,GAAG,WAAWa,MAAM,WAAWG,MAAOqI,EAAOvI,SA5DpG,SAACuB,GACf,IAAQrB,EAAUqB,EAAEC,OAAZtB,MACRsI,EAAStI,EACZ,EAyD0I+F,YAAY,aACnI,uBAAO1H,UAAWoH,EAAajJ,KAAK,WAAWwC,GAAG,iBAAiBa,MAAM,kBAAkBG,MAAOuI,EAAOzI,SAxD3G,SAACuB,GACf,IAAQrB,EAAUqB,EAAEC,OAAZtB,MACRwI,EAASxI,EACZ,EAqDiJ+F,YAAY,uBAE9I,wBAAQ1H,UAAU,oCAAoC7B,KAAK,SAA3D,+BAGPyL,EAAW,oBAAI5J,UAAU,gBAAd,SAAgC4J,IAAiB,OAGxE,EC9CcQ,OAtCf,SAA0B1J,GACtB,IAAMrE,EAASoN,cACf,EAA0B1I,mBAAS,IAAnC,mBAAOhD,EAAP,KAAcsM,EAAd,KAmBA,OAjBA3B,qBAAU,WACNrL,MAAM,GAAD,OAAIpB,EAAJ,gCAAsCI,EAAOsE,IAAM,CAAC,GACxDhD,MAAK,SAACsI,GAAD,OAASA,EAAIpI,MAAb,IACLF,MAAK,SAACG,GACHoG,QAAQiC,IAAIrI,GACRA,EAAKC,MACLsM,EAASvM,EAAKU,KAEd6L,EAAS,GAEhB,IACA7C,OAAM,SAAC8C,GACJD,EAAS,gBACZ,GACJ,IAII,cAAC,GAAD,UACG,sBAAKrK,UAAU,oBAAf,UACI,qBAAKA,UAAU,iBAAf,SACI,qBAAKA,UAAU,gBAAf,SAA+B,mBAAGA,UAAU,cAAc,cAAY,aAE1E,sBAAKA,UAAU,kBAAf,UACI,6BAAK3D,EAAOa,QACVa,EAA2D,KAAnD,4BAAG,qEACZA,EAAQ,4BAAIA,IAAa,KAC1B,cAAC,IAAD,CAAMkC,GAAG,IAAT,+BAKnB,E,MCtBDsK,IAAQC,W1BnBa,gB0BmDNC,OA9Bf,WAKI,OAJA/B,qBAAU,WACN6B,IAAQG,SAASC,OAAOC,SAASC,SAAWF,OAAOC,SAASE,OAC/D,GAAE,IAGC,qBAAK9K,UAAU,MAAf,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAO+K,OAAK,EAACC,KAAK,IAAIrH,QAAS,cAAC,EAAD,MAC/B,cAAC,IAAD,CAAOoH,OAAK,EAACC,KAAK,SAASrH,QAAS,cAAC,EAAD,CAAOuC,KAAK,YAChD,cAAC,IAAD,CAAO6E,OAAK,EAACC,KAAK,UAAUrH,QAAS,cAAC,EAAD,CAAOuC,KAAK,aACjD,cAAC,IAAD,CAAO6E,OAAK,EAACC,KAAK,WAAWrH,QAAS,cAAC,EAAD,MACtC,cAAC,IAAD,CAAOoH,OAAK,EAACC,KAAK,oBAAoBrH,QAAS,cAAC,GAAD,CAAexF,KAAK,cACnE,cAAC,IAAD,CAAO4M,OAAK,EAACC,KAAK,mBAAmBrH,QAAS,cAAC,GAAD,CAAexF,KAAK,WAClE,cAAC,IAAD,CAAO4M,OAAK,EAACC,KAAK,QAAQrH,QAAS,cAAC,EAAD,MACnC,cAAC,IAAD,CAAOoH,OAAK,EAACC,KAAK,mBAAmBrH,QAAS,cAAC,GAAD,MAC9C,cAAC,IAAD,CAAOoH,OAAK,EAACC,KAAK,6BAA6BrH,QAAS,cAAC,GAAD,MACxD,cAAC,IAAD,CAAOoH,OAAK,EAACC,KAAK,cAAcrH,QAAS,cAAC,GAAD,CAAeZ,OAAO,kCAC3DxE,QAAQ,6CACZ,cAAC,IAAD,CAAOwM,OAAK,EAACC,KAAK,6BAA6BrH,QAAS,cAAC,GAAD,MACxD,cAAC,IAAD,CAAOoH,OAAK,EAACC,KAAK,2BAA2BrH,QAAS,cAAC,GAAD,CAAeZ,OAAO,0BACxExE,QAAQ,6CACZ,cAAC,IAAD,CAAOwM,OAAK,EAACC,KAAK,8BAA8BrH,QAAS,cAAC,GAAD,CAAeZ,OAAO,wBAC3ExE,QAAQ,oEACZ,cAAC,IAAD,CAAOyM,KAAK,IAAIrH,QAAS,cAAC,GAAD,UAIxC,E,0BCzCKvH,GAAOqB,KAAKwN,MAAMrM,aAAasM,QAAQ,SACvChO,GAAQO,KAAKwN,MAAMrM,aAAasM,QAAQ,UACxChM,GAAQzB,KAAKwN,MAAMrM,aAAasM,QAAQ,UACxClM,GAAavB,KAAKwN,MAAMrM,aAAasM,QAAQ,eAC7CnM,GAAQtB,KAAKwN,MAAMrM,aAAasM,QAAQ,UAExCC,GAAejM,GACjB,CAAES,YAAY,EAAMvD,QAAMc,SAAOgC,SAAOF,cAAYD,UACpD,CAAEY,YAAY,EAAOvD,KAAM,KAAMc,MAAO,KAAMgC,MAAO,KAAMF,WAAY,KAAMD,MAAO,MCdxF,IAAMoM,GAAe,CACnB5M,QAAS,ICCI6M,oBAAgB,CAC7B1L,KFaa,WAA6C,IAA/BD,EAA8B,uDAAtB0L,GAAcE,EAAQ,uCACjDlN,EAAkBkN,EAAlBlN,KAAMC,EAAYiN,EAAZjN,QAEd,OAAQD,GACN,KAAKzC,EAKL,KAAKC,EACH,OAAO,2BACF8D,GADL,IAEEE,YAAY,IAEhB,KAAK/D,EACH,OAAO,2BACF6D,GADL,IAEEE,YAAY,EACZvD,KAAMgC,EAAQhC,KACdc,MAAOkB,EAAQlB,MACfgC,MAAOd,EAAQc,MACfF,WAAYZ,EAAQY,WACpBD,MAAOX,EAAQW,QAEnB,KAAKlD,EAUL,KAAKC,EACH,OAAO,2BACF2D,GADL,IAEEE,YAAY,EACZvD,KAAM,KACNc,MAAO,KACPgC,MAAO,KACPF,WAAY,KACZD,MAAO,OAEX,QACE,OAAOU,EAEZ,EE3DClB,QDAa,WAAgD,IAA/BkB,EAA8B,uDAAtB0L,GAAcE,EAAQ,uCACpDlN,EAAkBkN,EAAlBlN,KAAMC,EAAYiN,EAAZjN,QAEd,OAAQD,GACN,KAAKpC,EACH,MAAO,CAAEwC,QAASH,GAEpB,KAAKpC,EACH,MAAO,CAAEuC,QAAS,IAEpB,QACE,OAAOkB,EAEZ,IEfK6L,GAAa,CAACC,MAEdC,GAAQC,aAAYC,GAAaC,KAAe,WAAf,EAAmBL,KCO1D1H,SAASgI,MAAT,U/BZ0B,gB+BY1B,8DACAC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUP,MAAOA,GAAjB,SACE,cAAC,IAAD,UACE,cAAC,GAAD,UAIN5H,SAASoI,eAAe,Q","file":"static/js/main.05f65f22.chunk.js","sourcesContent":["export const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\nexport const LOGOUT = \"LOGOUT\";\nexport const NAME_CHANGED = \"NAME_CHANGED\";\nexport const NAME_CHANGE_FAILED = \"NAME_CHANGE_FAILED\";\n\nexport const SET_MESSAGE = \"SET_MESSAGE\";\nexport const CLEAR_MESSAGE = \"CLEAR_MESSAGE\";\n","export const GA_ID = 'G-K7FGW03X55';\nexport const BASE_TITLE = 'SVG to SVGHMI';\n// export const API_SERVER = 'http://localhost:2800/api';\n// export const API_SERVER = 'http://192.168.7.141:2800/api';\nexport const API_SERVER = 'https://server.cirillsokolov.com:2800/api';\nexport const API_CRYPTOCLOUD = 'https://api.cryptocloud.plus/v1';\nexport const AUTH_CRYPTOCLOUD = 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpZCI6MjE0NCwiZXhwIjo4ODA2NTkxNDc3Mn0.KeYgruMO8EMj9Q_vt-jw469qtHo6OozBg8kxs1RzHHY';\nexport const SHOP_ID = 'W5iMrW2Dlt3zScY9';\nexport const CONFIG_DEFAULT = {\n    svgo: [\n        'convertStyleToAttrs',\n        'removeUnusedNS',\n        'convertColors',\n        'removeEditorsNSData',\n        'removeDoctype',\n        'removeDimensions',\n        'removeMetadata',\n        'sortDefsChildren',\n        'sortAttrs',\n        'moveGroupAttrsToElems',\n        'convertTransform',\n        {\n            name: 'removeAttrs',\n            params: {\n                attrs: '()',\n            },\n        },\n    ],\n    optimization: {\n        delRefs: true,\n        moveGradients: true,\n        addDefaults: true,\n        spaceToComma: true,\n        connectBgColor: true,\n        polyToPath: true,\n        bgColorId: ['bgColor'],\n        addFlipInterface: true,\n    }\n}","import {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n  NAME_CHANGED,\n  NAME_CHANGE_FAILED,\n  SET_MESSAGE,\n} from \"./types\";\n\nimport { register, login, logout, changeName } from '../../services/auth.service';\nexport const registerAction = (username, email, password) => (dispatch) => {\n  return register(username, email, password).then(\n    (response) => {\n      dispatch({\n        type: REGISTER_SUCCESS,\n      });\n\n      dispatch({\n        type: SET_MESSAGE,\n        payload: 'Message from nodejs',\n        // payload: response.data.message,\n      });\n\n      return Promise.resolve();\n    },\n    (error) => {\n      const message = (error.cause && error.cause.msg) ?\n      error.cause.msg : '';\n\n      dispatch({\n        type: REGISTER_FAIL,\n      });\n\n      dispatch({\n        type: SET_MESSAGE,\n        payload: message,\n      });\n\n      return Promise.reject();\n    }\n  );\n};\n\nexport const loginAction = (username, password) => (dispatch) => {\n  return login(username, password).then(\n    (data) => {\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: {\n          name: data.name,\n          email: data.user,\n          level: data.level,\n          token: data.access_token,\n          expires_in: data.expires_in,\n        },\n      });\n      return Promise.resolve();\n    },\n    (error) => {\n      const message = (error.cause && error.cause.msg) ?\n      error.cause.msg : '';\n      dispatch({\n        type: LOGIN_FAIL,\n      });\n\n      dispatch({\n        type: SET_MESSAGE,\n        payload: message,\n      });\n\n      return Promise.reject();\n    }\n  );\n};\n\nexport const changeNameAction = (name, token) => (dispatch) => {\n  return changeName(name, token).then(\n    (data) => {\n      dispatch({\n        type: NAME_CHANGED,\n        payload: {\n          name,\n        },\n      });\n      return Promise.resolve();\n    },\n    (error) => {\n      const message = (error.cause && error.cause.msg) ?\n      error.cause.msg : '';\n      dispatch({\n        type: NAME_CHANGE_FAILED,\n      });\n\n      dispatch({\n        type: SET_MESSAGE,\n        payload: message,\n      });\n\n      return Promise.reject();\n    }\n  );\n};\n\nexport const logoutAction = () => (dispatch) => {\n  logout();\n\n  dispatch({\n    type: LOGOUT,\n  });\n};\n","import { API_SERVER } from '../config/constant';\n\n\nexport const register = (name, email, password) => {\n  return fetch(`${API_SERVER}/users/register`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email,\n      password,\n      name,\n    }),\n  })\n  .then((response) => (response.json()))\n  .then((data) => {\n    if (data.error) {\n      throw new Error(\"Not 2xx response\", {cause: data});\n    }\n    return data;\n  });\n};\n\nexport const login = (email, password) => {\n  return fetch(`${API_SERVER}/users/login`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email,\n      password,\n    }),\n  })\n  .then((response) => (response.json()))\n  .then((data) => {\n    if (data.error) {\n      throw new Error(\"Not 2xx response\", {cause: data});\n    }\n    if (data.access_token) {\n      localStorage.setItem(\"name\", JSON.stringify(data.name));\n      localStorage.setItem(\"email\", JSON.stringify(data.user));\n      localStorage.setItem(\"token\", JSON.stringify(data.access_token));\n      localStorage.setItem(\"level\", JSON.stringify(data.level));\n      localStorage.setItem(\"expires_in\", JSON.stringify(data.expires_in));\n    }\n    return data;\n  })\n};\n\nexport const changeName = (name, token) => {\n  return fetch(`${API_SERVER}/users/change_credentials/name`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    },\n    body: JSON.stringify({\n      name,\n    }),\n  })\n  .then((response) => (response.json()))\n  .then((data) => {\n    if (data.error) {\n      throw new Error(\"Not 2xx response\", {cause: data});\n    }\n    localStorage.setItem(\"name\", JSON.stringify(name));\n  })\n};\n\nexport const logout = () => {\n  localStorage.removeItem(\"name\");\n  localStorage.removeItem(\"email\");\n  localStorage.removeItem(\"token\");\n};\n","import { NavLink as Link } from \"react-router-dom\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useNavigate } from \"react-router-dom\";\nimport { logoutAction } from \"../../store/actions/auth\";\n\nimport './navBar.css'\n\nconst Navbar = () => {\n    const { name } = useSelector(state => state.auth);\n    const { isLoggedIn } = useSelector(state => state.auth);\n\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n\n    const SignUp  = () => (\n        <nav className=\"nav_btn\">\n            <Link className=\"nav_btn_link\" to=\"/signup\">Sign Up</Link>\n        </nav>\n    );\n    const LogOut = () => (\n        <button className=\"nav_btn nav_btn_link\" type=\"button\"\n            onClick={()=> {\n                dispatch(logoutAction());\n                navigate('/');\n            }}>\n                Log Out\n        </button>\n    );\n    return (\n        <>\n           <nav className=\"nav_block\">\n            <Link className=\"nav_logo\" to=\"/\">\n                SVGHMI\n            </Link>\n            <div className=\"nav_menu\">\n                <Link className=\"nav_link\"\n                  to={ isLoggedIn ? '/profile': '/login' }\n                  activestyle={{ color: 'black' }}\n                >\n                    {isLoggedIn ? name : 'Log In'}\n                </Link>\n                {isLoggedIn ? <LogOut /> : <SignUp />}\n            </div>\n           </nav> \n        </>\n    );\n};\nexport default Navbar;","import './footer.css';\n\nfunction Footer() {\n    return (\n        <footer className=\"footer-distributed\">\n\n            <div className=\"footer-left\">\n\n                <h3>SVGHMI<span>.PRO</span></h3>\n\n                <p className=\"footer-links\">\n                    <a href=\"#\" className=\"link-1\">Home</a>\n                    <a href=\"#\">Pricing</a>\n                    <a href=\"#\">About</a>\n                </p>\n\n                <p className=\"footer-company-name\">SVGHMI.PRO © 2022</p>\n            </div>\n\n            <div className=\"footer-center\">\n\n                <div>\n                    <i className=\" \tfas fa-exclamation\"></i>\n                    <p>Thank you for using my project!<span>If you have questions or just want to say thank you</span></p>\n                </div>\n\n                <div>\n                    <i className=\"fa fa-envelope\"></i>\n                    <p><a href=\"mailto:cirillsokolov@proton.me\">cirillsokolov@proton.me</a></p>\n                </div>\n            </div>\n\n            <div className=\"footer-right\">\n\n                <p className=\"footer-company-about\">\n                    <span>About the project</span>\n                    Lorem ipsum dolor sit amet, consectateur adispicing elit. Fusce euismod convallis velit, eu auctor lacus vehicula sit amet.\n                </p>\n\n                <div className=\"footer-icons\">\n                    <a href=\"#\"><i className=\"fab fa-youtube\"></i></a>\n                    <a href=\"#\"><i className=\"fab fa-linkedin\"></i></a>\n                    <a href=\"https://github.com/allovaro\"><i className=\"fab fa-github\"></i></a>\n                </div>\n\n            </div>\n\n        </footer>\n    );\n}\n\nexport default Footer;\n","import \"./app-info.css\";\n\nconst AppInfo = () => {\n    return (\n        <div className=\"app-info\">\n            <h1>A simple tool for creating dynamic widgets (SVGHMI)</h1>\n            <p className=\"infoBlock\">With this tool your can easily convert your SVG files to Siemens WinCC Unified format <i>SVGHMI</i> and create dynamic widgets in just a couple of steps</p>\n            <ul>\n                <li>First of all you need some svg file for convertion</li>\n                <li>Choose or Drag'n'Drop you files into field below</li>\n                <li>Push upload button</li>\n                <li>Push Convert button</li>\n                <li>And finaly download your ready zip archive</li>\n            </ul>\n            <p className=\"infoBlock\">If you want more flexibility you can tune convertion process with some options</p>\n        </div>\n    )\n}\n\nexport default AppInfo;","import { Dropzone, FileItem } from \"@dropzone-ui/react\";\nimport { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { API_SERVER } from \"../../config/constant\";\n\nimport './dropfiles.css';\n\nfunction Dropfiles(props) {\n    const { id, files, setFiles, onUploaded } = props;\n    const [showArrow, setShowArror] = useState(false);\n\n    const { level } = useSelector(state => state.auth);\n\n    const updateFiles = (incommingFiles) => {\n        if (incommingFiles.length === 0) {\n            setShowArror(false);\n            return;\n        }\n        setFiles(incommingFiles);\n        setShowArror(true);\n    };\n\n    const onDelete = (id) => {\n        const newFiles = files.filter((x) => x.id !== id);\n        if (newFiles.length === 0) {\n            setShowArror(false);\n        }\n        setFiles(newFiles);\n    };\n\n    const uploadFinished = (files) => {\n        onUploaded();\n        setShowArror(false);\n    }\n\n    return (\n        <div className=\"dropfiles\">\n            <h3 className=\"dropfile-header\">Upload your files here</h3>\n            {showArrow ? <div className=\"arrow bounce\"></div> : null}\n            <Dropzone\n                accept=\".svg\"\n                label=\"Drop your svg files here\"\n                onChange={updateFiles}\n                value={files}\n                maxFiles={level === 'premium' ? 100 : 1}\n                maxFileSize={level === 'premium' ? 2097152 : 102400}\n                url={`${API_SERVER}/convertor/upload-files/${id}`}\n                onUploadFinish={uploadFinished} >\n                {files.map((file) => (\n                    <FileItem onDelete={onDelete} {...file} preview />\n                ))}\n            </Dropzone>\n        </div>\n    );\n}\n\nexport default Dropfiles;\n","import './checkBoxItem.css';\n\nconst CheckBoxItem = (props) => {\n    const { checked, onClick, id, section, label } = props;\n\n    const onCheck = () => {\n        onClick(section, id, !checked);\n    }\n\n    return (\n        <div className=\"cbx-item\">\n            <input\n                className=\"inp-cbx\"\n                id={id}\n                checked={checked}\n                onChange={onCheck}\n                type=\"checkbox\"\n                style={{display: \"none\"}} />\n            <label className=\"cbx\"htmlFor={id}>\n                <span>\n                    <svg width=\"12px\" height=\"10px\" viewBox=\"0 0 12 10\">\n                        <polyline points=\"1.5 6 4.5 9 10.5 1\"></polyline>\n                    </svg>\n                </span>\n                <span>{label}</span>\n            </label>\n        </div>\n    )\n}\n\nexport default CheckBoxItem;","import './inputFieldItem.css';\n\nconst InputFieldItem = (props) => {\n    const { labels, onChange, id, section, header } = props;\n\n    const onIdChange = (e) => {\n        const value = e.target.value.replace(' ', '').split(',');\n        onChange(section, id, value);\n    }\n\n    return (\n        <label htmlFor=\"inp\" className=\"inp\">\n            <input type=\"text\" id=\"inp\" value={labels} onChange={onIdChange} />\n                <span className=\"label\">{header}</span>\n                <span className=\"focus-bg\"></span>\n        </label>\n    )\n}\n\nexport default InputFieldItem;","import { API_SERVER } from \"../../config/constant\";\n\nimport './controls.css';\n\nconst Controls = (props) => {\n    const { downloadId, optimized, onOptimize, uploaded, loader } = props;\n \n    // Create link and download zip file\n    const onDownload = async () => {\n        try {\n            const element = document.createElement(\"a\");\n            element.href = `${API_SERVER}/convertor/download/${downloadId}`;\n            element.download = 'svghmi.zip'\n            document.body.appendChild(element); // Required for this to work in FireFox\n            element.click(); // simulate link click\n        } catch (Err) {\n            console.error('Something went wrong with downloading...');\n        }\n        \n    }\n\n    const onClick = async () => {\n        if (uploaded && !optimized) {\n            onOptimize();\n        } else if (optimized) {\n            onDownload();\n        }\n    }\n\n    let spanClass = loader ? 'loader' : 'btnText';\n    let spanText = optimized ? 'Download' : 'Convert';\n    let btnClass = 'btnCtrl';\n    if (loader) {\n        spanText = '';\n    }\n    if (!uploaded && !optimized) {\n        btnClass += ' btnDisabled';\n        spanText = 'Upload before';\n    }\n\n    return (\n        <>\n            <button \n                className={btnClass}\n                onClick={onClick}>\n                    <span className={spanClass}>{spanText}</span>\n            </button>\n        </>\n    );\n}\n\nexport default Controls;\n","import './error.css';\n\nconst Error = (props) => {\n    return (\n        <div className=\"error-message\">\n            <span className=\"error-text\">{props.text}</span>\n        </div>\n    )\n}\n\nexport default Error;\n","import CheckBoxItem from \"../checkBoxItem/checkBoxItem\";\nimport InputFieldItem from \"../inputFieldItem/inputFieldItem\";\nimport Controls from \"../controls/controls\";\nimport Error from \"../error/error\";\n\nimport './svghmi-preferences.css';\n\nconst SvghmiPreferences = (props) => {\n    const { config, onConfigChanged, error } = props;\n\n    const ShowColorControl = config.optimization.connectBgColor ? \n        <InputFieldItem\n            section=\"optimization\"\n            id=\"bgColorId\"\n            header=\"Element's IDs (comma separated)\"\n            labels={config.optimization.bgColorId}\n            onChange={onConfigChanged} />\n        : null;\n    \n    let removeIds = '';\n    config.svgo.forEach(elem => {\n        if (elem.name === 'removeAttrs') {\n            const str = elem.params.attrs;\n            removeIds = str.slice(1, str.length - 1);\n        }\n    });\n\n    return (\n        <div className='svghmi-preferences'>\n            <Controls\n                onOptimize={props.onOptimize}\n                downloadId={props.downloadId}\n                loader={props.loader}\n                uploaded={props.uploaded}\n                optimized={props.optimized} />\n            {error ? <Error text=\"=( Sorry, something went wrong, try another svg files...\" /> : null}\n            <div className=\"wrap-collabsible\">\n                <input id=\"collapsible1\" className=\"toggle\" type=\"checkbox\" />\n                <label htmlFor=\"collapsible1\" className=\"lbl-toggle\">Options</label>\n                <div className=\"collapsible-content\">\n                    <div className=\"content-inner\">\n                        <CheckBoxItem\n                            id=\"addDefaults\"\n                            label=\"Add default values into Gradients\"\n                            section=\"optimization\"\n                            checked={config.optimization.addDefaults}\n                            onClick={onConfigChanged} />\n                        <CheckBoxItem\n                            id=\"delGradientTransform\"\n                            label=\"Remove <gradientTransform> attribute and recalculate x(cx), y(cy)\"\n                            section=\"optimization\"\n                            checked={config.optimization.delGradientTransform}\n                            onClick={onConfigChanged} />\n                        <CheckBoxItem\n                            id=\"spaceToComma\"\n                            label=\"Change whitespaces to comma delimiter in gradientTransform attributes\"\n                            section=\"optimization\"\n                            checked={config.optimization.spaceToComma}\n                            onClick={onConfigChanged} />\n                        <CheckBoxItem\n                            id=\"delRefs\"\n                            label=\"Delete href and xlink:href in gradients\"\n                            section=\"optimization\"\n                            checked={config.optimization.delRefs}\n                            onClick={onConfigChanged} />\n                        <CheckBoxItem\n                            id=\"moveGradients\"\n                            label=\"Move gradients to <defs/>\"\n                            section=\"optimization\"\n                            checked={config.optimization.moveGradients}\n                            onClick={onConfigChanged} />\n                        <CheckBoxItem\n                            id=\"addFlipInterface\"\n                            label=\"Add Flip interface into SVGHMI\"\n                            section=\"optimization\"\n                            checked={config.optimization.addFlipInterface}\n                            onClick={onConfigChanged} />\n                        <CheckBoxItem\n                            id=\"convertShapeToPath\"\n                            label=\"Shape to Path\"\n                            section=\"svgo\"\n                            checked={config.svgo.includes(\"convertShapeToPath\")}\n                            onClick={onConfigChanged} />\n                        <CheckBoxItem\n                            id=\"polyToPath\"\n                            label=\"Poly to Path\"\n                            section=\"optimization\"\n                            checked={config.optimization.polyToPath}\n                            onClick={onConfigChanged} />\n                        <CheckBoxItem\n                            id=\"convertColors\"\n                            label=\"convert colors from rgb() to #rrggbb, from #rrggbb to #rgb\"\n                            section=\"svgo\"\n                            checked={config.svgo.includes(\"convertColors\")}\n                            onClick={onConfigChanged} />\n                        <CheckBoxItem\n                            id=\"removeDimensions\"\n                            label=\"Remove Width/Height and add viewBox if it's missing \"\n                            section=\"svgo\"\n                            checked={config.svgo.includes(\"removeDimensions\")}\n                            onClick={onConfigChanged} />\n                        <CheckBoxItem\n                            id=\"connectBgColor\"\n                            label=\"Attach bgColorXX to BasicColor interface property\"\n                            section=\"optimization\"\n                            checked={config.optimization.connectBgColor}\n                            onClick={onConfigChanged} />\n                        {ShowColorControl}\n                        <InputFieldItem\n                            section=\"svgo\"\n                            id=\"removeAttrs\"\n                            header=\"Remove user defined Ids (comma separated)\"\n                            labels={removeIds}\n                            onChange={onConfigChanged} />\n                    </div>\n                </div>\n            </div>\n            <div className=\"wrap-collabsible\">\n                <input id=\"collapsible2\" className=\"toggle\" type=\"checkbox\" />\n                <label htmlFor=\"collapsible2\" className=\"lbl-toggle\">Options Help</label>\n                <div className=\"collapsible-content\">\n                    <div className=\"content-inner\">\n                        <div className=\"option-text\">\n                            <h4>Add default values</h4>\n                            <p className=\"paragraphDesc\">Linear and Radial gradients can be without some attributes.\n                                For example <i>\"stop-color\" and \"stop-opacity\"</i>,\n                                for LinearGradient can be <i>\"x1\", \"x2\", \"y1\", \"y2\"</i>, for RadialGradient can be <i>\"cx\", \"cy\"</i>.\n                                When this option is activated program adds default value for \"stop-color\" it will be black color,\n                                for \"stop-opacity\" is null.\n                            </p>\n                        </div>\n                        <div className=\"option-text\">\n                            <h4 className=\"option-header\">Remove gradientTransform</h4>\n                            <p className=\"paragraphDesc\">Some Vector Graphics Editors can add <i>gradientTransform</i> attributes to Gradients,\n                                and <i>WinCC Unified</i> don't \"understand\" it and displays it as black.\n                                This option try to recalculate transformed coordinates to x and y. Sometimes it can break gradient.</p>\n                        </div>\n                        <div className=\"option-text\">\n                            <h4 className=\"option-header\">Space to comma delimiter</h4>\n                            <p className=\"paragraphDesc\">This option change space separated parameters in <i>gradientTransform</i> attributes to comma separated\n                                because <i>WinCC Unified</i> don't \"understand\" it and breaks it.</p>\n                        </div>\n                        <div className=\"option-text\">\n                            <h4 className=\"option-header\">Delete <i>href</i> and <i>xlink:href</i> in gradients</h4>\n                            <p className=\"paragraphDesc\">Some gradients can link to other gradients. And WinCC doesn't \"understand\" such gradients. and displays it as black. Thus these attributes must be removed to display correctly.</p>\n                        </div>\n                        <div className=\"option-text\">\n                            <h4 className=\"option-header\">Move Gradients to \"defs\"</h4>\n                            <p className=\"paragraphDesc\">Moving all gradients in document to <i>defs</i> element.</p>\n                        </div>\n\n                        <div className=\"option-text\">\n                            <h4 className=\"option-header\">Add Flip interface</h4>\n                            <p className=\"paragraphDesc\">Optionally you can add a flip property to mirror the widget horizontally.</p>\n                        </div>\n\n                        <div className=\"option-text\">\n                            <h4 className=\"option-header\">Convert Shape to Path</h4>\n                            <p className=\"paragraphDesc\">Optionally you can convert all shapes like (rectangle, circle ellipse, etc.) to path element.</p>\n                        </div>\n\n                        <div className=\"option-text\">\n                            <h4 className=\"option-header\">Convert Poly to Path</h4>\n                            <p className=\"paragraphDesc\">WinCC doesn't \"understand\" polyline and polygon, so by default it will be converted to path element.</p>\n                        </div>\n\n                        <div className=\"option-text\">\n                            <h4 className=\"option-header\">Convert colors from rgb() to #rrggbb, from #rrggbb to #rgb</h4>\n                            <p className=\"paragraphDesc\">Optionally you can unify colors to one type.</p>\n                        </div>\n\n                        <div className=\"option-text\">\n                            <h4 className=\"option-header\">Remove Width and Height</h4>\n                            <p className=\"paragraphDesc\">Remove from svg attributes width and height for better display in WinCC.</p>\n                        </div>\n\n                        <div className=\"option-text\">\n                            <h4 className=\"option-header\">Attach bgColor to BasicColor</h4>\n                            <p className=\"paragraphDesc\">You can specify the ids of the elements you want to change the color from the WinCC poperties. By default, the application searches for all IDs with the name <i>bgColor</i> and binds the fill attribute of svg element to the property with name BasicColor. All ids that have <i>bgColor</i> in the name will be bind to BasicColor. Separated by commas, you can specify several ID names to which you want to assign color change properties. For example, the string <i>bgColor,AlternateColor,AnotherColor</i> will result in the creation of three property fields <i>BasicColor</i>, <i>AlternateColor1</i>, <i>AlternateColor2</i>. If the elements with the specified IDs are not found in the svg document, then the property field associated with it will not be added.</p>\n                        </div>\n                        <div className=\"option-text\">\n                            <h4 className=\"option-header\">Delete user defined attributes</h4>\n                            <p className=\"paragraphDesc\">Optionaly you can delete from svg attributes what you want. Because some vector editors can add there custom attributes. And WinCC will throw the error if find it.</p>\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default SvghmiPreferences;\n","import { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport Navbar from '../navBar/navBar';\nimport Footer from '../footer/footer';\nimport AppInfo from '../app-info/app-info';\nimport Dropfiles from '../dropfiles/dropfiles';\nimport SvghmiPreferences from '../svghmi-preferences/svghmi-preferences';\n\nimport { API_SERVER, CONFIG_DEFAULT } from './../../config/constant';\n\nimport '../app/baner.css';\n\n\nclass Main extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            clientId: uuidv4().split('-').join(''),\n            downloadId: '',\n            files: [],\n            optimizeConf: CONFIG_DEFAULT,\n            optimized: false,\n            uploaded: false,\n            loader: false,\n            error: false,\n        }\n    }\n\n    async componentDidMount() {\n        try {\n            const res = await fetch('https://geolocation-db.com/json/');\n            const data = await res.json();\n            await fetch(`${API_SERVER}/users/user_from`, {\n                method: 'POST',\n                mode: 'cors',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(data),\n            })\n        } catch (Err) {\n            console.log(Err)\n        }\n    }\n\n    setFiles = (files) => {\n        this.setState({ files });\n    }\n\n    optimizeFiles = async (conf) => {\n        this.setState({\n            files: [],\n            loader: true,\n        });\n        // remove empty bgColor ids\n        const ids = this.state.optimizeConf.optimization.bgColorId.filter((elem) => elem !== '');\n        const { optimizeConf } = this.state;\n        optimizeConf.optimization.bgColorId = ids;\n        if (ids.length === 1 && ids[0] === '') {\n            optimizeConf.optimization.connectBgColor = false;\n        }\n        const options = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(optimizeConf),\n        };\n\n        try {\n            const response = await fetch(`${API_SERVER}/convertor/optimize/${this.state.clientId}`, options);\n            await response.json()\n            if (response.status) {\n                this.setState((prevState) => ({\n                    optimized: true,\n                    uploaded: false,\n                    downloadId: prevState.clientId,\n                    clientId: uuidv4().split('-').join(''),\n                    loader: false,\n                    error: false,\n                }));\n            }\n        } catch (Err) {\n            console.error('Something went wrong...');\n            this.setState((prevState) => ({\n                optimized: false,\n                uploaded: false,\n                downloadId: prevState.clientId,\n                clientId: uuidv4().split('-').join(''),\n                loader: false,\n                error: true,\n            }));\n        }\n    }\n\n    onConfigChanged = (section, id, value) => {\n        if (section === 'optimization') {\n            this.setState((prev) => {\n                const newConf = { ...prev.optimizeConf };\n                newConf[section][id] = value;\n                return { optimizeConf: newConf };\n            });\n        }\n        if (section === 'svgo') {\n            if (id === 'removeAttrs') {\n                this.setState((prev) => {\n                    let newConf = { ...prev.optimizeConf };\n                    newConf.svgo = newConf.svgo.map((elem) => {\n                        if (elem.name === 'removeAttrs') {\n                            return {\n                                name: 'removeAttrs',\n                                params: {\n                                    attrs: `(${value})`,\n                                },\n                            };\n                        }\n                        return elem;\n                    })\n                    newConf.svgo = newConf.svgo.filter(elem => elem !== id);\n                    return { optimizeConf: newConf };\n                });\n                return;\n            }\n            this.setState((prev) => {\n                let newConf = { ...prev.optimizeConf };\n                if (newConf.svgo.includes(id)) {\n                    newConf.svgo = newConf.svgo.filter(elem => elem !== id);\n                } else {\n                    newConf.svgo.push(id);\n                }\n                return { optimizeConf: newConf };\n            });\n        }\n    }\n\n    render() {\n        return (\n            <>\n                <Navbar />\n                <header className=\"color-full clear-fix\">\n                    <div className=\"text_color_full block3\">\n                        SVG to <span className='svghmi'>SVGHMI</span>\n                    </div>\n                </header>\n                <AppInfo />\n                <Dropfiles\n                    files={this.state.files}\n                    setFiles={this.setFiles}\n                    onUploaded={() => (this.setState({ optimized: false, uploaded: true }))}\n                    id={this.state.clientId} />\n                <SvghmiPreferences\n                    error={this.state.error}\n                    onOptimize={this.optimizeFiles}\n                    downloadId={this.state.downloadId}\n                    loader={this.state.loader}\n                    uploaded={this.state.uploaded}\n                    optimized={this.state.optimized}\n                    config={this.state.optimizeConf}\n                    onConfigChanged={this.onConfigChanged} />\n                <Footer />\n            </>\n        );\n    }\n}\n\nexport default Main;\n","import { Component, useState } from 'react';\nimport { useNavigate } from \"react-router-dom\";\nimport { useDispatch, useSelector } from 'react-redux'\nimport { registerAction, loginAction } from '../../store/actions/auth';\nimport './loginComponent.css';\n\nconst mode = 'login';\n\nfunction LoginForm(props) {\n    const { message } = useSelector(state => state.message);\n    const [ login, setLogin ] = useState({\n        email_signup: '',\n        password: '',\n        fullname: '',\n        email: '',\n        createpassword: '',\n        repeatpassword: '',\n    });\n    \n    const navigate = useNavigate();\n    const dispatch = useDispatch();\n  \n    // Validation functions\n    const isValidEmail = (email) => {\n      return /\\S+@\\S+\\.\\S+/.test(email);\n    }\n\n    const isPassIdentical = () =>  {\n        return login.createpassword === login.repeatpassword;\n    }\n\n    const isLoginFormValid = () => {\n        if (isValidEmail(login.email) && login.password && login.password !== '') {\n            return true;\n        }\n        return false;\n    }\n\n    const isSignupFormValid = () => {\n        if (isValidEmail(login.email_signup) && \n        login.fullname &&\n        isPassIdentical()) {\n            return true;\n        }\n        return false;\n    }\n\n    // Save credentials in state\n    const onHandleChange = (e) => {\n        const { id, value } = e.target;\n        setLogin({...login, \n            [id]: value,\n        })\n    }\n\n    const onForgot = () => {\n        navigate(`/forgot_password`);\n    }\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n        if (props.mode === 'signup' && isSignupFormValid()) {\n            dispatch(registerAction(\n                login.fullname,\n                login.email_signup,\n                login.createpassword))\n            .then(() => {\n                navigate(`/email_sent`);\n            })\n            .catch(() => {\n                console.error('something goes wrong...');\n            });\n        } else {\n            dispatch(loginAction(login.email, login.password))\n            .then(() => {\n                navigate('/');\n            })\n            .catch(() => {\n                setLogin({...login, \n                    email: '',\n                    password: '',\n                });\n            });\n        }\n    }\n    const emailSignUpClass = isValidEmail(login.email_signup) ? 'form-group__input' : 'form-group__input error__input';\n    const emailLoginClass = isValidEmail(login.email) ? 'form-group__input' : 'form-group__input error__input';\n    let submitClass = 'buttonLogin button-login--primary full-width';\n    if (props.mode === 'signup' && !isSignupFormValid()) {\n        submitClass += ' button-login-disabled';\n    } else if (props.mode === 'login' && !isLoginFormValid()) {\n        submitClass += ' button-login-disabled';\n    }\n\n    const repeatClass = isPassIdentical() ? 'form-group__input' : 'form-group__input error__input';\n    const errorMessage = message ? <h5 className=\"login-message\">{message}</h5> : null;\n\n    return (\n        <form onSubmit={onSubmit}>\n            <div className=\"form-block__input-wrapper\">\n                <div className=\"form-group form-group--login\">                  \n                    <input className={emailLoginClass} type=\"text\" id=\"email\" label=\"email\" disabled={props.mode !== 'login'} value={login.email} onChange={onHandleChange} placeholder='email'/>\n                    <input className=\"form-group__input\" type=\"password\" id=\"password\" label=\"password\" disabled={props.mode !== 'login'} value={login.password} onChange={onHandleChange} placeholder='password' />\n                </div>\n                <div className=\"form-group form-group--signup\">\n                    <input className=\"form-group__input\" type=\"text\" id=\"fullname\" label=\"full name\" disabled={props.mode !== 'signup'} value={login.fullname} onChange={onHandleChange} placeholder='full name' />\n                    <input className={emailSignUpClass} type=\"email\" id=\"email_signup\" label=\"email\" disabled={props.mode !== 'signup'} value={login.email_signup} onChange={onHandleChange} placeholder='email' />\n                    <input className=\"form-group__input\" type=\"password\" id=\"createpassword\" label=\"password\" disabled={props.mode !== 'signup'} value={login.createpassword} onChange={onHandleChange} placeholder='password' />\n                    <input className={repeatClass} type=\"password\" id=\"repeatpassword\" label=\"repeat password\" disabled={props.mode !== 'signup'} value={login.repeatpassword} onChange={onHandleChange} placeholder='repeat password' />\n                </div>\n            </div>\n            <button className={submitClass} type=\"submit\">{props.mode === 'login' ? 'Log In' : 'Sign Up'}</button>\n            { errorMessage }\n            { props.mode === 'login' ? <button className=\"button-forgot\" onClick={onForgot} >Forgot password?</button> : null }\n        </form>\n    )\n}\n\nclass LoginComponent extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            mode: this.props.mode,\n        }\n    }\n\n    toggleMode() {\n        var newMode = this.state.mode === 'login' ? 'signup' : 'login';\n        this.setState({ mode: newMode});\n    }\n\n    render() {\n        return (\n            <div className={`login-form-app login-form-app--is-${mode}`}>\n                <div className={`form-block-wrapper form-block-wrapper--is-${this.state.mode}`} ></div>\n                <section className={`form-block form-block--is-${this.state.mode}`}>\n                    <header className=\"form-block__header\">\n                        <h1>{this.state.mode === 'login' ? 'Welcome back!' : 'Sign up'}</h1>\n                        <div className=\"form-block__toggle-block\">\n                            <span>{this.state.mode === 'login' ? 'Don\\'t' : 'Already'} have an account? Click here &#8594;</span>\n                            <input className=\"in-log-checkbox\" id=\"form-toggler\" type=\"checkbox\" onClick={this.toggleMode.bind(this)} />\n                            <label htmlFor=\"form-toggler\"></label>\n                        </div>\n                    </header>\n                    <LoginForm mode={this.state.mode}/>\n                </section>\n            </div>\n        )\n    }\n}\n\nexport default LoginComponent;\n","import LoginComponent from '../loginComponent/loginComponent';\n\nconst Login = (props) => {\n    return (\n        <LoginComponent\n            mode={props.mode}\n        />\n    )\n}\n\nexport default Login;\n","import './pricingElement.css';\n\nfunction PricingElement(props) {\n    return (\n        <div className=\"pricing-table\">\n            <div className=\"pricing-table-header\">\n                <h1>{props.month} MONTH</h1>\n            </div>\n\n            <div className=\"pricing-table-content\">\n                <ul>\n                    <li><strong>100</strong> Files per batch</li>\n                    <li><strong>2Mb</strong> Max file size</li>\n                    <li><strong>{props.month}</strong> Month of premium</li>\n                </ul>\n            </div>\n\n            <div className=\"pricing-table-footer\">\n                <h2><sup>$</sup>{props.price}</h2>\n                <button onClick={() => props.onPurchase(props.price, props.month)} >Purchase</button>\n            </div>\n        </div>\n    )\n}\n\nexport default PricingElement;\n","import PricingElement from '../pricingElement/pricingElement';\n\nimport './pricingTable.css';\n\nfunction PricingTable(props) {\n    return (\n        <div className=\"pricing-main-container\" >\n            <div className=\"pricing-container\">\n                <PricingElement month=\"1\" price=\"10\" onPurchase={props.onPurchase} />\n                <PricingElement month=\"3\" price=\"27\" onPurchase={props.onPurchase} />\n                <PricingElement month=\"6\" price=\"55\" onPurchase={props.onPurchase} />\n            </div>\n        </div>\n    )\n}\n\nexport default PricingTable;\n","import { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useNavigate } from \"react-router-dom\";\n\nimport { changeNameAction } from '../../store/actions/auth';\n\nimport PricingTable from '../pricingTable/pricingTable';\n\nimport './profileComponent.css';\n\nfunction ProfileComponent() {\n    const { email, name, isLoggedIn, level, token } = useSelector(state => state.auth);\n    const [userName, setUserName] = useState(name);\n    const [nameMsg, setNameMsg] = useState('');\n    const navigate = useNavigate();\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        if (!isLoggedIn) {\n            navigate('/');\n        }\n    })\n\n    const onChangeName = (e) => {\n        setUserName(e.target.value);\n    }\n\n    const onSubmitName = (e) => {\n        e.preventDefault();\n        dispatch(changeNameAction(\n            userName,\n            token))\n        .then(() => {\n            setNameMsg('Name changed');\n        })\n        .catch((e) => {\n            console.error('something goes wrong...');\n            setNameMsg('Sorry, something goes wrong');\n        });\n    }\n\n    const onSubmitPassword = (e) => {\n        console.log(e.target.value)\n    }\n\n    const onPurchase = (amount) => {\n        console.log(amount);\n    }\n\n    return (\n        <>\n            <div className=\"profile-wrapper\">\n                <div className=\"profile-left\">\n                    <img className=\"profile-image-center\" src=\"/user-profile-image.svg\" alt=\"user profile template\" />\n                    <h4 className=\"left-column-h\">{name}</h4>\n                    <h4 className=\"left-column-h\">Status - <span className={level !== 'basic' ? 'level-premium' : 'level-basic' }>{level}</span></h4>\n                </div>\n\n                <div className=\"profile-right\">\n                    <form className=\"form-inline\" >\n                        <label htmlFor=\"email-text\">Email:</label>\n                        <h5 id=\"email-text\">{email}</h5>\n                    </form>\n                    <form className=\"form-inline\" onSubmit={onSubmitName} >\n                        <label htmlFor=\"name\">Name:</label>\n                        <input type=\"text\" id=\"name\" name=\"Name\" value={userName} onChange={onChangeName} />\n                        <button type=\"submit\">Change name</button>\n                    </form>\n                    {nameMsg ? <p>{nameMsg}</p> : null}\n                    <form onSubmit={onSubmitPassword} >\n                        <label htmlFor=\"name\">Password:</label>\n                        <input type=\"password\" id=\"password\" name=\"password\" />\n                        <input type=\"password\" id=\"password-repeat\" name=\"password\" />\n                        <button type=\"submit\">Change password</button>\n                    </form>\n                </div>\n            </div>\n            \n            <PricingTable onPurchase={onPurchase}/>\n        </>\n    );\n}\n\nexport default ProfileComponent;\n","import Navbar from '../navBar/navBar';\nimport ProfileComponent from '../profileComponent/profileComponent';\nimport Footer from '../footer/footer';\n\nfunction ProfilePage() {\n    \n    return (\n        <>\n            <Navbar />\n            <ProfileComponent />\n            <Footer />\n        </>\n    )\n}\n\nexport default ProfilePage;\n","import './messageTemplate.css';\n\nfunction MessageTemplate(props) {\n    const messageClass = props.is404 ? 'error' : 'message-template-wrap';\n    return (\n        <>\n            <div className=\"moon\"></div>\n            <div className=\"moon__crater moon__crater1\"></div>\n            <div className=\"moon__crater moon__crater2\"></div>\n            <div className=\"moon__crater moon__crater3\"></div>\n\n            <div className=\"star star1\"></div>\n            <div className=\"star star2\"></div>\n            <div className=\"star star3\"></div>\n            <div className=\"star star4\"></div>\n            <div className=\"star star5\"></div>\n\n            <div className={messageClass}>\n                {props.children}\n            </div>\n\n            <div className=\"astronaut\">\n                <div className=\"astronaut__backpack\"></div>\n                <div className=\"astronaut__body\"></div>\n                <div className=\"astronaut__body__chest\"></div>\n                <div className=\"astronaut__arm-left1\"></div>\n                <div className=\"astronaut__arm-left2\"></div>\n                <div className=\"astronaut__arm-right1\"></div>\n                <div className=\"astronaut__arm-right2\"></div>\n                <div className=\"astronaut__arm-thumb-left\"></div>\n                <div className=\"astronaut__arm-thumb-right\"></div>\n                <div className=\"astronaut__leg-left\"></div>\n                <div className=\"astronaut__leg-right\"></div>\n                <div className=\"astronaut__foot-left\"></div>\n                <div className=\"astronaut__foot-right\"></div>\n                <div className=\"astronaut__wrist-left\"></div>\n                <div className=\"astronaut__wrist-right\"></div>\n                \n                <div className=\"astronaut__cord\">\n                    <canvas id=\"cord\" height=\"500px\" width=\"500px\"></canvas>\n                </div>\n                <div className=\"astronaut__head\">\n                    <canvas id=\"visor\" width=\"60px\" height=\"60px\"></canvas>\n                    <div className=\"astronaut__head-visor-flare1\"></div>\n                    <div className=\"astronaut__head-visor-flare2\"></div>\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default MessageTemplate;","import { NavLink as Link } from \"react-router-dom\";\nimport MessageTemplate from \"../messageTemplate/messageTemplate\";\n\nimport './paymentResult.css';\n\nfunction PaymentResult(props) {\n    let iconClass = '';\n    let bgColorClass = 'payment_header';\n    let HeaderText = '';\n    if (props.type === 'success') {\n        iconClass = 'fa fa-check';\n        bgColorClass += ' payment_successed';\n        HeaderText = 'Payment Success !';\n    }\n    if (props.type === 'fail') {\n        iconClass = 'fa fa-times';\n        bgColorClass += ' payment_failed';\n        HeaderText = 'Payment Failed';\n    }\n    return (\n        <MessageTemplate>\n            <div className=\"payment\">\n            <div className={bgColorClass} >\n               <div className=\"payment_check\"><i className={iconClass} aria-hidden=\"true\"></i></div>\n            </div>\n            <div className=\"payment_content\">\n               <h1>{HeaderText}</h1>\n               <p>Lorem ipsum, or lipsum as it is sometimes known, is dummy text used in laying out print, graphic or web designs. </p>\n               <Link to=\"/\">Go to Home</Link>\n            </div>\n         </div>\n        </MessageTemplate>\n    )\n}\n\nexport default PaymentResult;","import { useNavigate } from \"react-router-dom\";\nimport MessageTemplate from \"../messageTemplate/messageTemplate\";\nimport './notFoundPage.css';\n\nfunction NotFoundPage(props) {\n    const navigate = useNavigate();\n    const onClick = () => {\n        navigate('/');\n    }\n\n    return (\n        <MessageTemplate is404>\n            <div className=\"error__title\">404</div>\n            <div className=\"error__subtitle\">Hmmm...</div>\n            <div className=\"error__description\">It looks like one of the  developers fell asleep</div>\n            <button className=\"error__button error__button--active\" onClick={onClick}>HOME</button>\n        </MessageTemplate>\n    )\n}\n\nexport default NotFoundPage;\n","import { NavLink as Link, useParams } from \"react-router-dom\";\nimport MessageTemplate from \"../messageTemplate/messageTemplate\";\n\nimport './commonMessage.css';\n\nfunction CommonMessage(props) {\n    const params = useParams();\n\n    return (\n        <MessageTemplate>\n            <div className=\"message_container\">\n            <div className=\"message_header\" >\n               <div className=\"message_check\"><i className=\"fa fa-check\" aria-hidden=\"true\"></i></div>\n            </div>\n            <div className=\"message_content\">\n                {params.email ? <h5>{params.email}</h5> : null}\n                <h1>{props.header}</h1>\n                <p>{props.message}</p>\n                <Link to=\"/\">Go to Home</Link>\n            </div>\n         </div>\n        </MessageTemplate>\n    )\n}\n\nexport default CommonMessage;","import { useNavigate } from \"react-router-dom\";\nimport { useState } from 'react';\nimport MessageTemplate from \"../messageTemplate/messageTemplate\";\nimport { API_SERVER } from \"../../config/constant\";\n\nimport './forgotPassword.css';\n\nfunction ForgotPassword() {\n    const [email, setEmail] = useState('');\n    const [errorMsg, setErrorMsg] = useState('');\n\n    const navigate = useNavigate();\n\n    // Validation functions\n    const isValidEmail = (email) => {\n        return /\\S+@\\S+\\.\\S+/.test(email);\n        }\n\n    // Save credentials in state\n    const onChange = (e) => {\n        const { value } = e.target;\n        setEmail(value);\n    }\n\n    const requestReset = (email) => {\n        return fetch(`${API_SERVER}/users/reset_password`, {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              email,\n            }),\n          })\n          .then((response) => (response.json()))\n          .then((data) => {\n            if (data.error) {\n              throw new Error(\"Not 2xx response\", {cause: data});\n            }\n            return data;\n          });\n    }\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n        requestReset(email)\n        .then(() => {\n            navigate(`/reset_email_sent/${email}`);\n        })\n        .catch((error) => {\n            const message = (error.cause && error.cause.msg) ?\n                error.cause.msg : '';\n            setErrorMsg(message);\n            setEmail('');\n        });\n    }\n    let submitClass = 'buttonLogin button-login--primary full-width';\n    if (!isValidEmail(email)) submitClass += ' button-login-disabled';\n\n    return (\n        <MessageTemplate>\n            <section className={`form-block form-block--is-login`}>\n                <form onSubmit={onSubmit}>\n                    <h3 className=\"form-block__header\" >Forgot your password?</h3>\n                    <div className=\"form-group form-group--login\">                        \n                        <input className=\"form-group__input\" type=\"text\" id=\"email\" label=\"email\" value={email} onChange={onChange} placeholder='name@domain.com'/>\n                    </div>\n                    <button className={submitClass} type=\"submit\">Reset Password</button>\n                </form>\n            </section>\n            {errorMsg ? <h5 className=\"login-message\" >{errorMsg}</h5> : null}\n        </MessageTemplate>\n    )\n}\n\n\nexport default ForgotPassword;\n","import { useParams, useNavigate } from 'react-router-dom';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { logoutAction } from \"../../store/actions/auth\";\n\nimport MessageTemplate from \"../messageTemplate/messageTemplate\";\nimport { API_SERVER } from '../../config/constant';\n\nimport './resetPasswordForm.css';\n\nfunction ResetPasswordForm() {\n    const params = useParams();\n    const [errorMsg, setErrorMsg] = useState('');\n    const [pass1, setPass1] = useState('');\n    const [pass2, setPass2] = useState('');\n\n    const navigate = useNavigate();\n    const dispatch = useDispatch();\n\n    // Save credentials in state\n    const onChange1 = (e) => {\n        const { value } = e.target;\n        setPass1(value);\n    }\n    // Save credentials in state\n    const onChange2 = (e) => {\n        const { value } = e.target;\n        setPass2(value);\n    }\n\n    const requestSetPassword = () => {\n        return fetch(`${API_SERVER}/users/reset_password/${params.token}`, {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              id: params.id,\n              password: pass1,\n            }),\n          })\n          .then((response) => (response.json()))\n          .then((data) => {\n            if (data.error) {\n              throw new Error(\"Not 2xx response\", {cause: data});\n            }\n            return data;\n          });\n    }\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n        requestSetPassword()\n        .then(() => {\n            dispatch(logoutAction());\n            navigate(`/reset_password_successfull`);\n        })\n        .catch((error) => {\n            const message = (error.cause && error.cause.msg) ?\n                error.cause.msg : '';\n            console.log(message)\n            if (message === '') setErrorMsg('something goes wrong');\n            setErrorMsg(message);\n            setPass1('');\n            setPass2('');\n        });\n    }\n\n    const isPassIdentical = () =>  {\n        return pass1 === pass2;\n    }\n\n    const repeatClass = isPassIdentical() ? 'form-group__input' : 'form-group__input error__input';\n\n    return (\n        <MessageTemplate>\n            <section className={`form-block form-block--is-login`}>\n                <form onSubmit={onSubmit}>\n                    <h3 className=\"form-block__header\" >Set new password</h3>\n                    <div className=\"form-group form-group--login\">                        \n                        <input className=\"form-group__input\" type=\"password\" id=\"password\" label=\"password\" value={pass1} onChange={onChange1} placeholder='password' />\n                        <input className={repeatClass} type=\"password\" id=\"repeatpassword\" label=\"repeat password\" value={pass2} onChange={onChange2} placeholder='repeat password' />\n                    </div>\n                    <button className=\"buttonLogin button-login--primary\" type=\"submit\">Set Password</button>\n                </form>\n            </section>\n            {errorMsg ? <h5 className=\"login-message\" >{errorMsg}</h5> : null}\n        </MessageTemplate>\n    )\n}\n\nexport default ResetPasswordForm;\n","import { useState, useEffect } from \"react\";\nimport { NavLink as Link, useParams } from \"react-router-dom\";\nimport MessageTemplate from \"../messageTemplate/messageTemplate\";\nimport { API_SERVER } from '../../config/constant';\n\nfunction ConfirmationPage(props) {\n    const params = useParams();\n    const [error, setError] = useState('');\n\n    useEffect(() => {\n        fetch(`${API_SERVER}/users/email/confirm/${params.id}`, {})\n        .then((res) => res.json())\n        .then((data) => {\n            console.log(data)\n            if (data.error) {\n                setError(data.msg);\n            } else {\n                setError('');\n            }\n        })\n        .catch((err) => {\n            setError('Network error');\n        })\n    });\n\n\n    return (\n         <MessageTemplate>\n            <div className=\"message_container\">\n                <div className=\"message_header\" >\n                    <div className=\"message_check\"><i className=\"fa fa-check\" aria-hidden=\"true\"></i></div>\n                </div>\n                <div className=\"message_content\">\n                    <h1>{params.email}</h1>\n                    {!error ? <p><p>Your email successfully confirmed!</p></p> : null}\n                    {error ? <p>{error}</p> : null}\n                    <Link to=\"/\">Go to Home</Link>\n                </div>\n            </div> \n         </MessageTemplate>\n    )\n}\n\nexport default ConfirmationPage;\n","import { useEffect } from 'react';\nimport { Routes, Route } from 'react-router-dom';\nimport ReactGA from 'react-ga';\n\nimport Main from '../pages/main';\nimport Login from '../pages/login';\nimport ProfilePage from '../pages/profile';\nimport PaymentResult from '../paymentResult/paymentResult';\nimport NotFoundPage from '../notFoundPage/notFoundPage';\nimport PricingTable from '../pricingTable/pricingTable';\nimport CommonMessage from '../commonMessage/commonMessage';\nimport ForgotPassword from '../forgotPassword/forgotPassword';\nimport ResetPasswordForm from '../resetPasswordForm/resetPasswordForm';\nimport ConfirmationPage from '../pages/confirmationPage';\n\nimport './app.css';\n\nimport { GA_ID } from '../../config/constant';\n\nReactGA.initialize(GA_ID);\n\nfunction App() {\n    useEffect(() => {\n        ReactGA.pageview(window.location.pathname + window.location.search);\n    }, []);\n\n    return (\n        <div className=\"app\">\n            <Routes>\n                <Route exact path=\"/\" element={<Main />} />\n                <Route exact path=\"/login\" element={<Login mode=\"login\" />} />\n                <Route exact path=\"/signup\" element={<Login mode=\"signup\" />} />\n                <Route exact path=\"/profile\" element={<ProfilePage />} />\n                <Route exact path=\"/success_purchase\" element={<PaymentResult type=\"success\" />} />\n                <Route exact path=\"/failed_purchase\" element={<PaymentResult type=\"fail\" />} />\n                <Route exact path=\"/test\" element={<PricingTable />} />\n                <Route exact path=\"/forgot_password\" element={<ForgotPassword />} />\n                <Route exact path=\"/reset_password/:token/:id\" element={<ResetPasswordForm />} />\n                <Route exact path=\"/email_sent\" element={<CommonMessage header=\"We sent you confirmation email.\" \n                    message=\"Please follow the instraction in email\"/>} />\n                <Route exact path=\"/signup_confirm/:email/:id\" element={<ConfirmationPage />} />\n                <Route exact path=\"/reset_email_sent/:email\" element={<CommonMessage header=\"We sent you reset link.\" \n                    message=\"Please follow the instraction in email\"/>} />\n                <Route exact path=\"/reset_password_successfull\" element={<CommonMessage header=\"You set new password!\" \n                    message=\"Great, you set new password, and can continue use our service\"/>} />\n                <Route path=\"*\" element={<NotFoundPage />} />\n            </Routes>\n        </div>\n    );\n}\n\nexport default App;\n","import {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n} from \"../actions/types\";\n\nconst name = JSON.parse(localStorage.getItem('name'));\nconst email = JSON.parse(localStorage.getItem('email'));\nconst token = JSON.parse(localStorage.getItem('token'));\nconst expires_in = JSON.parse(localStorage.getItem('expires_in'));\nconst level = JSON.parse(localStorage.getItem('level'));\n\nconst initialState = token\n  ? { isLoggedIn: true, name, email, token, expires_in, level }\n  : { isLoggedIn: false, name: null, email: null, token: null, expires_in: null, level: null };\n\nexport default function auth(state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case REGISTER_SUCCESS:\n      return {\n        ...state,\n        isLoggedIn: false,\n      };\n    case REGISTER_FAIL:\n      return {\n        ...state,\n        isLoggedIn: false,\n      };\n    case LOGIN_SUCCESS:\n      return {\n        ...state,\n        isLoggedIn: true,\n        name: payload.name,\n        email: payload.email,\n        token: payload.token,\n        expires_in: payload.expires_in,\n        level: payload.level,\n      };\n    case LOGIN_FAIL:\n      return {\n        ...state,\n        isLoggedIn: false,\n        name: null,\n        email: null,\n        token: null,\n        expires_in: null,\n        level: null,\n      };\n    case LOGOUT:\n      return {\n        ...state,\n        isLoggedIn: false,\n        name: null,\n        email: null,\n        token: null,\n        expires_in: null,\n        level: null,\n      };\n    default:\n      return state;\n  }\n}\n","import { SET_MESSAGE, CLEAR_MESSAGE } from \"../actions/types\";\n\nconst initialState = {\n  message: '',\n};\n\nexport default function message(state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case SET_MESSAGE:\n      return { message: payload };\n\n    case CLEAR_MESSAGE:\n      return { message: \"\" };\n\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport auth from \"../reducers/auth\";\nimport message from \"../reducers/message\";\n\nexport default combineReducers({\n  auth,\n  message,\n});\n","import { createStore, applyMiddleware } from 'redux'\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst middleware = [thunk];\n\nconst store = createStore(rootReducer, applyMiddleware(...middleware));\n\nexport { store };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './components/app/app';\n// import { BrowserRouter as Router } from 'react-router-dom';\nimport { HashRouter as Router } from 'react-router-dom';\nimport { BASE_TITLE } from './config/constant';\nimport './index.css';\nimport { store } from './store';\n\n\n\ndocument.title = `${BASE_TITLE} | Professional Engineering Tool for WinCC Unified widgets`;\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router>\n        <App />\n      </Router>\n    </Provider>\n  </React.StrictMode >,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}