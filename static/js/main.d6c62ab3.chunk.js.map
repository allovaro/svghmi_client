{"version":3,"sources":["store/actions/types.js","config/constant.js","services/auth.service.js","store/actions/auth.js","components/navBar/navBar.js","components/footer/footer.js","components/app-info/app-info.js","components/dropfiles/dropfiles.js","components/checkBoxItem/checkBoxItem.js","components/inputFieldItem/inputFieldItem.js","components/controls/controls.js","components/error/error.js","components/svghmi-preferences/svghmi-preferences.js","components/pricingElement/pricingElement.js","components/pricingTable/pricingTable.js","components/loader/loader.js","services/payment.service.js","components/payment/payment.js","components/pages/main.js","components/loginComponent/loginComponent.js","components/pages/login.js","components/profileComponent/profileComponent.js","components/pages/profile.js","components/messageTemplate/messageTemplate.js","components/paymentResult/paymentResult.js","components/notFoundPage/notFoundPage.js","components/commonMessage/commonMessage.js","components/forgotPassword/forgotPassword.js","components/resetPasswordForm/resetPasswordForm.js","components/pages/confirmationPage.js","components/app/app.js","store/reducers/auth.js","store/reducers/message.js","store/reducers/index.js","store/index.js","index.js"],"names":["REGISTER_SUCCESS","REGISTER_FAIL","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","SET_MESSAGE","CLEAR_MESSAGE","API_SERVER","CONFIG_DEFAULT","svgo","name","params","attrs","optimization","delRefs","moveGradients","addDefaults","spaceToComma","connectBgColor","polyToPath","bgColorId","addFlipInterface","changePassword","password","token","fetch","method","headers","body","JSON","stringify","res","json","data","console","error","changeEmail","email","localStorage","setItem","getPremiumDate","registerAction","username","dispatch","then","response","Error","cause","register","type","payload","Promise","resolve","message","msg","reject","loginAction","access_token","id","user","level","expires_in","login","user_id","changeNameAction","changeName","logoutAction","removeItem","Navbar","useSelector","state","auth","isLoggedIn","useDispatch","navigate","useNavigate","SignUp","className","to","LogOut","onClick","activestyle","color","Footer","href","target","rel","AppInfo","Dropfiles","props","files","setFiles","onUploaded","useState","showArrow","setShowArror","onDelete","newFiles","filter","x","length","accept","label","onChange","incommingFiles","value","maxFiles","maxFileSize","url","onUploadFinish","map","file","preview","CheckBoxItem","checked","section","style","display","htmlFor","width","height","viewBox","points","InputFieldItem","labels","header","e","replace","split","Controls","downloadId","optimized","onOptimize","uploaded","loader","onDownload","element","document","createElement","download","appendChild","click","Err","spanClass","spanText","btnClass","text","SvghmiPreferences","config","onConfigChanged","ShowColorControl","removeIds","forEach","elem","str","slice","delGradientTransform","includes","PricingElement","month","price","onPurchase","PricingTable","Loader","getActiveInvoice","Payment","setLoader","setError","ready","setReady","link","setLink","useEffect","status","invoice","pay_url","getLastInvoice","amount","period","onNewInvoice","LinkElement","ErrorMessage","Main","setState","optimizeFiles","conf","ids","optimizeConf","options","clientId","prevState","uuidv4","join","prev","newConf","push","this","Component","LoginForm","email_signup","fullname","createpassword","repeatpassword","setLogin","isValidEmail","test","isPassIdentical","isSignupFormValid","onHandleChange","emailSignUpClass","emailLoginClass","submitClass","mode","repeatClass","errorMessage","onSubmit","preventDefault","catch","disabled","placeholder","LoginComponent","newMode","toggleMode","bind","Login","ProfileComponent","userEmail","setUserEmail","userName","setUserName","pass1","setPass1","pass2","setPass2","emailMsg","setEmailMsg","nameMsg","setNameMsg","passMsg","setPassMsg","premium","setPremium","fetchVal","premium_expired","onSubmitEmail","onSubmitPassword","passDisabled","nameDisabled","emailDisabled","ExpiresOn","src","alt","ProfilePage","MessageTemplate","messageClass","is404","children","PaymentResult","iconClass","bgColorClass","HeaderText","NotFoundPage","CommonMessage","useParams","ForgotPassword","setEmail","errorMsg","setErrorMsg","requestReset","ResetPasswordForm","log","ConfirmationPage","err","ReactGA","initialize","App","pageview","window","location","pathname","search","exact","path","parse","getItem","initialState","combineReducers","action","middleware","thunk","store","createStore","rootReducer","applyMiddleware","title","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d6c62ab3.chunk.js","sourcesContent":["export const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\nexport const LOGOUT = \"LOGOUT\";\nexport const NAME_CHANGED = \"NAME_CHANGED\";\nexport const NAME_CHANGE_FAILED = \"NAME_CHANGE_FAILED\";\n\nexport const SET_MESSAGE = \"SET_MESSAGE\";\nexport const CLEAR_MESSAGE = \"CLEAR_MESSAGE\";\n","export const GA_ID = 'G-K7FGW03X55';\nexport const BASE_TITLE = 'SVG to SVGHMI';\n// export const API_SERVER = 'http://localhost:2800/api';\n// export const API_SERVER = 'http://192.168.7.141:2800/api';\nexport const API_SERVER = 'https://server.cirillsokolov.com:2800/api';\nexport const API_CRYPTOCLOUD = 'https://api.cryptocloud.plus/v1';\nexport const AUTH_CRYPTOCLOUD = 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpZCI6MjE0NCwiZXhwIjo4ODA2NTkxNDc3Mn0.KeYgruMO8EMj9Q_vt-jw469qtHo6OozBg8kxs1RzHHY';\nexport const SHOP_ID = 'W5iMrW2Dlt3zScY9';\nexport const CONFIG_DEFAULT = {\n    svgo: [\n        'convertStyleToAttrs',\n        'removeUnusedNS',\n        'convertColors',\n        'removeEditorsNSData',\n        'removeDoctype',\n        'removeDimensions',\n        'removeMetadata',\n        'sortDefsChildren',\n        'sortAttrs',\n        'moveGroupAttrsToElems',\n        'convertTransform',\n        {\n            name: 'removeAttrs',\n            params: {\n                attrs: '()',\n            },\n        },\n    ],\n    optimization: {\n        delRefs: true,\n        moveGradients: true,\n        addDefaults: true,\n        spaceToComma: true,\n        connectBgColor: true,\n        polyToPath: true,\n        bgColorId: ['bgColor'],\n        addFlipInterface: true,\n    }\n}","import { API_SERVER } from '../config/constant';\n\n\nexport const register = (name, email, password) => {\n    return fetch(`${API_SERVER}/users/register`, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n            email,\n            password,\n            name,\n        }),\n    })\n        .then((response) => (response.json()))\n        .then((data) => {\n            if (data.error) {\n                throw new Error(\"Not 2xx response\", { cause: data });\n            }\n            return data;\n        });\n};\n\nexport const login = (email, password) => {\n    return fetch(`${API_SERVER}/users/login`, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n            email,\n            password,\n        }),\n    })\n        .then((response) => (response.json()))\n        .then((data) => {\n            if (data.error) {\n                throw new Error(\"Not 2xx response\", { cause: data });\n            }\n            if (data.access_token) {\n                localStorage.setItem(\"name\", JSON.stringify(data.name));\n                localStorage.setItem(\"user_id\", JSON.stringify(data.id));\n                localStorage.setItem(\"email\", JSON.stringify(data.user));\n                localStorage.setItem(\"token\", JSON.stringify(data.access_token));\n                localStorage.setItem(\"level\", JSON.stringify(data.level));\n                localStorage.setItem(\"expires_in\", JSON.stringify(data.expires_in));\n            }\n            return data;\n        })\n};\n\nexport const changeName = (name, token) => {\n    return fetch(`${API_SERVER}/users/change_credentials/name`, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify({\n            name,\n        }),\n    })\n        .then((response) => (response.json()))\n        .then((data) => {\n            if (data.error) {\n                throw new Error(\"Not 2xx response\", { cause: data });\n            }\n            localStorage.setItem(\"name\", JSON.stringify(name));\n        })\n};\n\nexport const logout = () => {\n    localStorage.removeItem(\"name\");\n    localStorage.removeItem(\"email\");\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"user_id\");\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"expires_in\");\n};\n\nexport const changePassword = async (password, token) => {\n    try {\n        const res = await fetch(`${API_SERVER}/users/change_credentials/password`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Token ${token}`,\n            },\n            body: JSON.stringify({\n                password,\n            }),\n        });\n        const data = await res.json();\n        return data;\n    } catch (err) {\n        console.error(err);\n        return null;\n    }\n}\n\nexport const changeEmail = async (email, token) => {\n    try {\n        const res = await fetch(`${API_SERVER}/users/change_credentials/email`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Token ${token}`,\n            },\n            body: JSON.stringify({\n                email,\n            }),\n        });\n        const data = await res.json();\n        localStorage.setItem(\"email\", JSON.stringify(email));\n        return data;\n    } catch (err) {\n        console.error(err);\n        return null;\n    }\n}\n\nexport const getPremiumDate = async (token) => {\n    try {\n        const res = await fetch(`${API_SERVER}/users/premium/info`, {\n            headers: {\n                'Authorization': `Token ${token}`,\n            },\n        });\n        const data = await res.json();\n        return data;\n    } catch (err) {\n        console.error(err);\n        return null;\n    }\n}","import {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n  NAME_CHANGED,\n  NAME_CHANGE_FAILED,\n  SET_MESSAGE,\n} from \"./types\";\n\nimport { register, login, logout, changeName } from '../../services/auth.service';\nexport const registerAction = (username, email, password) => (dispatch) => {\n  return register(username, email, password).then(\n    (response) => {\n      dispatch({\n        type: REGISTER_SUCCESS,\n      });\n\n      dispatch({\n        type: SET_MESSAGE,\n        payload: 'Message from nodejs',\n        // payload: response.data.message,\n      });\n\n      return Promise.resolve();\n    },\n    (error) => {\n      const message = (error.cause && error.cause.msg) ?\n      error.cause.msg : '';\n\n      dispatch({\n        type: REGISTER_FAIL,\n      });\n\n      dispatch({\n        type: SET_MESSAGE,\n        payload: message,\n      });\n\n      return Promise.reject();\n    }\n  );\n};\n\nexport const loginAction = (username, password) => (dispatch) => {\n  return login(username, password).then(\n    (data) => {\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: {\n          name: data.name,\n          user_id: data.id,\n          email: data.user,\n          level: data.level,\n          token: data.access_token,\n          expires_in: data.expires_in,\n        },\n      });\n      return Promise.resolve();\n    },\n    (error) => {\n      const message = (error.cause && error.cause.msg) ?\n      error.cause.msg : '';\n      dispatch({\n        type: LOGIN_FAIL,\n      });\n\n      dispatch({\n        type: SET_MESSAGE,\n        payload: message,\n      });\n\n      return Promise.reject();\n    }\n  );\n};\n\nexport const changeNameAction = (name, token) => (dispatch) => {\n  return changeName(name, token).then(\n    (data) => {\n      dispatch({\n        type: NAME_CHANGED,\n        payload: {\n          name,\n        },\n      });\n      return Promise.resolve();\n    },\n    (error) => {\n      const message = (error.cause && error.cause.msg) ?\n      error.cause.msg : '';\n      dispatch({\n        type: NAME_CHANGE_FAILED,\n      });\n\n      dispatch({\n        type: SET_MESSAGE,\n        payload: message,\n      });\n\n      return Promise.reject();\n    }\n  );\n};\n\nexport const logoutAction = () => (dispatch) => {\n  logout();\n\n  dispatch({\n    type: LOGOUT,\n  });\n};\n","import { NavLink as Link } from \"react-router-dom\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useNavigate } from \"react-router-dom\";\nimport { logoutAction } from \"../../store/actions/auth\";\n\nimport './navBar.css'\n\nconst Navbar = () => {\n    const { name } = useSelector(state => state.auth);\n    const { isLoggedIn } = useSelector(state => state.auth);\n\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n\n    const SignUp  = () => (\n        <nav className=\"nav_btn\">\n            <Link className=\"nav_btn_link\" to=\"/signup\">Sign Up</Link>\n        </nav>\n    );\n    const LogOut = () => (\n        <button className=\"nav_btn nav_btn_link\" type=\"button\"\n            onClick={()=> {\n                dispatch(logoutAction());\n                navigate('/');\n            }}>\n                Log Out\n        </button>\n    );\n    return (\n        <>\n           <nav className=\"nav_block\">\n            <Link className=\"nav_logo\" to=\"/\">\n                SVGHMI\n            </Link>\n            <div className=\"nav_menu\">\n                <Link className=\"nav_link\"\n                  to={ isLoggedIn ? '/profile': '/login' }\n                  activestyle={{ color: 'black' }}\n                >\n                    {isLoggedIn ? name : 'Log In'}\n                </Link>\n                {isLoggedIn ? <LogOut /> : <SignUp />}\n            </div>\n           </nav> \n        </>\n    );\n};\nexport default Navbar;","import './footer.css';\n\nfunction Footer() {\n    return (\n        <footer className=\"footer-distributed\">\n\n            <div className=\"footer-left\">\n                <h3>SVGHMI<span>.PRO</span></h3>\n                <p className=\"footer-links\">\n                    <a href=\"/\" className=\"link-1\">Home</a>\n                    <a href=\"/\">Pricing</a>\n                    <a href=\"/\">About</a>\n                </p>\n                <p className=\"footer-company-name\">SVGHMI.PRO © 2022</p>\n            </div>\n\n            <div className=\"footer-center\">\n                <div>\n                    <i className=\" \tfas fa-exclamation\"></i>\n                    <p>Thank you!<span>If you have questions just write me</span></p>\n                </div>\n                <div>\n                    <i className=\"fa fa-envelope\"></i>\n                    <p><a href=\"mailto:cirillsokolov@proton.me\">cirillsokolov@proton.me</a></p>\n                </div>\n            </div>\n\n            <div className=\"footer-right\">\n                <p className=\"footer-company-about\">\n                    <span>About the project</span>\n                    The service is intended for engineers who want to make beautiful and dynamic Siemens WinCC Unified visualizations without spending a lot of time on it.\n                </p>\n                <div className=\"footer-icons\">\n                    <a\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        href=\"https://www.youtube.com/channel/UCRd8ITMupPNvXJ6Cu58TvdQ\">\n                            <i className=\"fab fa-youtube\"></i>\n                    </a>\n                    <a\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        href=\"https://www.linkedin.com\">\n                            <i className=\"fab fa-linkedin\"></i>\n                    </a>\n                    <a\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        href=\"https://github.com/allovaro\">\n                            <i className=\"fab fa-github\"></i>\n                    </a>\n                </div>\n            </div>\n        </footer>\n    );\n}\n\nexport default Footer;\n","import \"./app-info.css\";\n\nconst AppInfo = () => {\n    return (\n        <div className=\"app-info\">\n            <h1>A simple tool for creating dynamic widgets (SVGHMI)</h1>\n            <p className=\"infoBlock\">With this tool your can easily convert your SVG files to Siemens WinCC Unified format <i>SVGHMI</i> and create dynamic widgets in just a couple of steps</p>\n            <ul>\n                <li>First of all you need some svg file for convertion</li>\n                <li>Choose or Drag'n'Drop you files into field below</li>\n                <li>Push upload button</li>\n                <li>Push Convert button</li>\n                <li>And finaly download your ready zip archive</li>\n            </ul>\n            <p className=\"infoBlock\">If you want more flexibility you can tune convertion process with some options</p>\n        </div>\n    )\n}\n\nexport default AppInfo;","import { Dropzone, FileItem } from \"@dropzone-ui/react\";\nimport { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { API_SERVER } from \"../../config/constant\";\n\nimport './dropfiles.css';\n\nfunction Dropfiles(props) {\n    const { id, files, setFiles, onUploaded } = props;\n    const [showArrow, setShowArror] = useState(false);\n\n    const { level } = useSelector(state => state.auth);\n\n    const updateFiles = (incommingFiles) => {\n        if (incommingFiles.length === 0) {\n            setShowArror(false);\n            return;\n        }\n        setFiles(incommingFiles);\n        setShowArror(true);\n    };\n\n    const onDelete = (id) => {\n        const newFiles = files.filter((x) => x.id !== id);\n        if (newFiles.length === 0) {\n            setShowArror(false);\n        }\n        setFiles(newFiles);\n    };\n\n    const uploadFinished = (files) => {\n        onUploaded();\n        setShowArror(false);\n    }\n\n    return (\n        <div className=\"dropfiles\">\n            <h3 className=\"dropfile-header\">Upload your files here</h3>\n            {showArrow ? <div className=\"arrow bounce\"></div> : null}\n            <Dropzone\n                accept=\".svg\"\n                label=\"Drop your svg files here\"\n                onChange={updateFiles}\n                value={files}\n                maxFiles={level === 'premium' ? 100 : 1}\n                maxFileSize={level === 'premium' ? 2097152 : 102400}\n                url={`${API_SERVER}/convertor/upload-files/${id}`}\n                onUploadFinish={uploadFinished} >\n                {files.map((file) => (\n                    <FileItem onDelete={onDelete} {...file} preview />\n                ))}\n            </Dropzone>\n        </div>\n    );\n}\n\nexport default Dropfiles;\n","import './checkBoxItem.css';\n\nconst CheckBoxItem = (props) => {\n    const { checked, onClick, id, section, label } = props;\n\n    const onCheck = () => {\n        onClick(section, id, !checked);\n    }\n\n    return (\n        <div className=\"cbx-item\">\n            <input\n                className=\"inp-cbx\"\n                id={id}\n                checked={checked}\n                onChange={onCheck}\n                type=\"checkbox\"\n                style={{display: \"none\"}} />\n            <label className=\"cbx\"htmlFor={id}>\n                <span>\n                    <svg width=\"12px\" height=\"10px\" viewBox=\"0 0 12 10\">\n                        <polyline points=\"1.5 6 4.5 9 10.5 1\"></polyline>\n                    </svg>\n                </span>\n                <span>{label}</span>\n            </label>\n        </div>\n    )\n}\n\nexport default CheckBoxItem;","import './inputFieldItem.css';\n\nconst InputFieldItem = (props) => {\n    const { labels, onChange, id, section, header } = props;\n\n    const onIdChange = (e) => {\n        const value = e.target.value.replace(' ', '').split(',');\n        onChange(section, id, value);\n    }\n\n    return (\n        <label htmlFor=\"inp\" className=\"inp\">\n            <input type=\"text\" id=\"inp\" value={labels} onChange={onIdChange} />\n                <span className=\"label\">{header}</span>\n                <span className=\"focus-bg\"></span>\n        </label>\n    )\n}\n\nexport default InputFieldItem;","import { API_SERVER } from \"../../config/constant\";\n\nimport './controls.css';\n\nconst Controls = (props) => {\n    const { downloadId, optimized, onOptimize, uploaded, loader } = props;\n \n    // Create link and download zip file\n    const onDownload = async () => {\n        try {\n            const element = document.createElement(\"a\");\n            element.href = `${API_SERVER}/convertor/download/${downloadId}`;\n            element.download = 'svghmi.zip'\n            document.body.appendChild(element); // Required for this to work in FireFox\n            element.click(); // simulate link click\n        } catch (Err) {\n            console.error('Something went wrong with downloading...');\n        }\n        \n    }\n\n    const onClick = async () => {\n        if (uploaded && !optimized) {\n            onOptimize();\n        } else if (optimized) {\n            onDownload();\n        }\n    }\n\n    let spanClass = loader ? 'loader' : 'btnText';\n    let spanText = optimized ? 'Download' : 'Convert';\n    let btnClass = 'btnCtrl';\n    if (loader) {\n        spanText = '';\n    }\n    if (!uploaded && !optimized) {\n        btnClass += ' btnDisabled';\n        spanText = 'Upload before';\n    }\n\n    return (\n        <>\n            <button \n                className={btnClass}\n                onClick={onClick}>\n                    <span className={spanClass}>{spanText}</span>\n            </button>\n        </>\n    );\n}\n\nexport default Controls;\n","import './error.css';\n\nconst Error = (props) => {\n    return (\n        <div className=\"error-message\">\n            <span className=\"error-text\">{props.text}</span>\n        </div>\n    )\n}\n\nexport default Error;\n","import CheckBoxItem from \"../checkBoxItem/checkBoxItem\";\nimport InputFieldItem from \"../inputFieldItem/inputFieldItem\";\nimport Controls from \"../controls/controls\";\nimport Error from \"../error/error\";\n\nimport './svghmi-preferences.css';\n\nconst SvghmiPreferences = (props) => {\n    const { config, onConfigChanged, error } = props;\n\n    const ShowColorControl = config.optimization.connectBgColor ? \n        <InputFieldItem\n            section=\"optimization\"\n            id=\"bgColorId\"\n            header=\"Element's IDs (comma separated)\"\n            labels={config.optimization.bgColorId}\n            onChange={onConfigChanged} />\n        : null;\n    \n    let removeIds = '';\n    config.svgo.forEach(elem => {\n        if (elem.name === 'removeAttrs') {\n            const str = elem.params.attrs;\n            removeIds = str.slice(1, str.length - 1);\n        }\n    });\n\n    return (\n        <div className='svghmi-preferences'>\n            <Controls\n                onOptimize={props.onOptimize}\n                downloadId={props.downloadId}\n                loader={props.loader}\n                uploaded={props.uploaded}\n                optimized={props.optimized} />\n            {error ? <Error text=\"=( Sorry, something went wrong, try another svg files...\" /> : null}\n            <div className=\"wrap-collabsible\">\n                <input id=\"collapsible1\" className=\"toggle\" type=\"checkbox\" />\n                <label htmlFor=\"collapsible1\" className=\"lbl-toggle\">Options</label>\n                <div className=\"collapsible-content\">\n                    <div className=\"content-inner\">\n                        <CheckBoxItem\n                            id=\"addDefaults\"\n                            label=\"Add default values into Gradients\"\n                            section=\"optimization\"\n                            checked={config.optimization.addDefaults}\n                            onClick={onConfigChanged} />\n                        <CheckBoxItem\n                            id=\"delGradientTransform\"\n                            label=\"Remove <gradientTransform> attribute and recalculate x(cx), y(cy)\"\n                            section=\"optimization\"\n                            checked={config.optimization.delGradientTransform}\n                            onClick={onConfigChanged} />\n                        <CheckBoxItem\n                            id=\"spaceToComma\"\n                            label=\"Change whitespaces to comma delimiter in gradientTransform attributes\"\n                            section=\"optimization\"\n                            checked={config.optimization.spaceToComma}\n                            onClick={onConfigChanged} />\n                        <CheckBoxItem\n                            id=\"delRefs\"\n                            label=\"Delete href and xlink:href in gradients\"\n                            section=\"optimization\"\n                            checked={config.optimization.delRefs}\n                            onClick={onConfigChanged} />\n                        <CheckBoxItem\n                            id=\"moveGradients\"\n                            label=\"Move gradients to <defs/>\"\n                            section=\"optimization\"\n                            checked={config.optimization.moveGradients}\n                            onClick={onConfigChanged} />\n                        <CheckBoxItem\n                            id=\"addFlipInterface\"\n                            label=\"Add Flip interface into SVGHMI\"\n                            section=\"optimization\"\n                            checked={config.optimization.addFlipInterface}\n                            onClick={onConfigChanged} />\n                        <CheckBoxItem\n                            id=\"convertShapeToPath\"\n                            label=\"Shape to Path\"\n                            section=\"svgo\"\n                            checked={config.svgo.includes(\"convertShapeToPath\")}\n                            onClick={onConfigChanged} />\n                        <CheckBoxItem\n                            id=\"polyToPath\"\n                            label=\"Poly to Path\"\n                            section=\"optimization\"\n                            checked={config.optimization.polyToPath}\n                            onClick={onConfigChanged} />\n                        <CheckBoxItem\n                            id=\"convertColors\"\n                            label=\"convert colors from rgb() to #rrggbb, from #rrggbb to #rgb\"\n                            section=\"svgo\"\n                            checked={config.svgo.includes(\"convertColors\")}\n                            onClick={onConfigChanged} />\n                        <CheckBoxItem\n                            id=\"removeDimensions\"\n                            label=\"Remove Width/Height and add viewBox if it's missing \"\n                            section=\"svgo\"\n                            checked={config.svgo.includes(\"removeDimensions\")}\n                            onClick={onConfigChanged} />\n                        <CheckBoxItem\n                            id=\"connectBgColor\"\n                            label=\"Attach bgColorXX to BasicColor interface property\"\n                            section=\"optimization\"\n                            checked={config.optimization.connectBgColor}\n                            onClick={onConfigChanged} />\n                        {ShowColorControl}\n                        <InputFieldItem\n                            section=\"svgo\"\n                            id=\"removeAttrs\"\n                            header=\"Remove user defined Ids (comma separated)\"\n                            labels={removeIds}\n                            onChange={onConfigChanged} />\n                    </div>\n                </div>\n            </div>\n            <div className=\"wrap-collabsible\">\n                <input id=\"collapsible2\" className=\"toggle\" type=\"checkbox\" />\n                <label htmlFor=\"collapsible2\" className=\"lbl-toggle\">Options Help</label>\n                <div className=\"collapsible-content\">\n                    <div className=\"content-inner\">\n                        <div className=\"option-text\">\n                            <h4>Add default values</h4>\n                            <p className=\"paragraphDesc\">Linear and Radial gradients can be without some attributes.\n                                For example <i>\"stop-color\" and \"stop-opacity\"</i>,\n                                for LinearGradient can be <i>\"x1\", \"x2\", \"y1\", \"y2\"</i>, for RadialGradient can be <i>\"cx\", \"cy\"</i>.\n                                When this option is activated program adds default value for \"stop-color\" it will be black color,\n                                for \"stop-opacity\" is null.\n                            </p>\n                        </div>\n                        <div className=\"option-text\">\n                            <h4 className=\"option-header\">Remove gradientTransform</h4>\n                            <p className=\"paragraphDesc\">Some Vector Graphics Editors can add <i>gradientTransform</i> attributes to Gradients,\n                                and <i>WinCC Unified</i> don't \"understand\" it and displays it as black.\n                                This option try to recalculate transformed coordinates to x and y. Sometimes it can break gradient.</p>\n                        </div>\n                        <div className=\"option-text\">\n                            <h4 className=\"option-header\">Space to comma delimiter</h4>\n                            <p className=\"paragraphDesc\">This option change space separated parameters in <i>gradientTransform</i> attributes to comma separated\n                                because <i>WinCC Unified</i> don't \"understand\" it and breaks it.</p>\n                        </div>\n                        <div className=\"option-text\">\n                            <h4 className=\"option-header\">Delete <i>href</i> and <i>xlink:href</i> in gradients</h4>\n                            <p className=\"paragraphDesc\">Some gradients can link to other gradients. And WinCC doesn't \"understand\" such gradients. and displays it as black. Thus these attributes must be removed to display correctly.</p>\n                        </div>\n                        <div className=\"option-text\">\n                            <h4 className=\"option-header\">Move Gradients to \"defs\"</h4>\n                            <p className=\"paragraphDesc\">Moving all gradients in document to <i>defs</i> element.</p>\n                        </div>\n\n                        <div className=\"option-text\">\n                            <h4 className=\"option-header\">Add Flip interface</h4>\n                            <p className=\"paragraphDesc\">Optionally you can add a flip property to mirror the widget horizontally.</p>\n                        </div>\n\n                        <div className=\"option-text\">\n                            <h4 className=\"option-header\">Convert Shape to Path</h4>\n                            <p className=\"paragraphDesc\">Optionally you can convert all shapes like (rectangle, circle ellipse, etc.) to path element.</p>\n                        </div>\n\n                        <div className=\"option-text\">\n                            <h4 className=\"option-header\">Convert Poly to Path</h4>\n                            <p className=\"paragraphDesc\">WinCC doesn't \"understand\" polyline and polygon, so by default it will be converted to path element.</p>\n                        </div>\n\n                        <div className=\"option-text\">\n                            <h4 className=\"option-header\">Convert colors from rgb() to #rrggbb, from #rrggbb to #rgb</h4>\n                            <p className=\"paragraphDesc\">Optionally you can unify colors to one type.</p>\n                        </div>\n\n                        <div className=\"option-text\">\n                            <h4 className=\"option-header\">Remove Width and Height</h4>\n                            <p className=\"paragraphDesc\">Remove from svg attributes width and height for better display in WinCC.</p>\n                        </div>\n\n                        <div className=\"option-text\">\n                            <h4 className=\"option-header\">Attach bgColor to BasicColor</h4>\n                            <p className=\"paragraphDesc\">You can specify the ids of the elements you want to change the color from the WinCC poperties. By default, the application searches for all IDs with the name <i>bgColor</i> and binds the fill attribute of svg element to the property with name BasicColor. All ids that have <i>bgColor</i> in the name will be bind to BasicColor. Separated by commas, you can specify several ID names to which you want to assign color change properties. For example, the string <i>bgColor,AlternateColor,AnotherColor</i> will result in the creation of three property fields <i>BasicColor</i>, <i>AlternateColor1</i>, <i>AlternateColor2</i>. If the elements with the specified IDs are not found in the svg document, then the property field associated with it will not be added.</p>\n                        </div>\n                        <div className=\"option-text\">\n                            <h4 className=\"option-header\">Delete user defined attributes</h4>\n                            <p className=\"paragraphDesc\">Optionaly you can delete from svg attributes what you want. Because some vector editors can add there custom attributes. And WinCC will throw the error if find it.</p>\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default SvghmiPreferences;\n","import './pricingElement.css';\n\nfunction PricingElement(props) {\n    return (\n        <div className=\"pricing-table\">\n            <div className=\"pricing-table-header\">\n                <h1>{props.month} MONTH</h1>\n            </div>\n\n            <div className=\"pricing-table-content\">\n                <ul>\n                    <li><strong>100</strong> Files per batch</li>\n                    <li><strong>2Mb</strong> Max file size</li>\n                    <li><strong>{props.month}</strong> Month of premium</li>\n                </ul>\n            </div>\n\n            <div className=\"pricing-table-footer\">\n                <h2><sup>$</sup>{props.price}</h2>\n                <button onClick={() => props.onPurchase(props.price, props.month)} >Purchase</button>\n            </div>\n        </div>\n    )\n}\n\nexport default PricingElement;\n","import PricingElement from '../pricingElement/pricingElement';\n\nimport './pricingTable.css';\n\nfunction PricingTable(props) {\n    return (\n        \n        <div className=\"pricing-container\">\n            <PricingElement month=\"1\" price=\"10\" onPurchase={props.onPurchase} />\n            <PricingElement month=\"3\" price=\"27\" onPurchase={props.onPurchase} />\n            <PricingElement month=\"6\" price=\"55\" onPurchase={props.onPurchase} />\n        </div>\n    )\n}\n\nexport default PricingTable;\n","import './loader.css';\n\nfunction Loader() {\n    return (<div className=\"loader-block\"></div>)\n}\n\nexport default Loader;\n","import { API_SERVER, API_CRYPTOCLOUD, AUTH_CRYPTOCLOUD, SHOP_ID } from '../config/constant';\n\n\nexport const createInvoice = async (amount, user_id, currency, email) => {\n    try {\n        const res = await fetch(`${API_CRYPTOCLOUD}/invoice/create`, {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n              'Authorization': `Token ${AUTH_CRYPTOCLOUD}`,\n            },\n            body: JSON.stringify({\n                shop_id: SHOP_ID,\n                amount,\n                order_id: user_id,\n                currency,\n                email,\n            }),\n        });\n        const data = await res.json();\n        return data;\n    } catch (err) {\n        console.error(err);\n        return null;\n    }\n}\n\nexport const saveInvoice = async (period, user_id, invoice, token) => {\n    try {\n        const res = await fetch(`${API_SERVER}/payment/invoice`, {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n              'Authorization': `Token ${token}`,\n            },\n            body: JSON.stringify({\n                period,\n                user_id,\n                invoice,\n            }),\n        });\n        const data = await res.json();\n        return data;\n    } catch (err) {\n        console.error(err);\n        return null;\n    }\n}\n\nexport const checkInvoice = async (uuid) => {\n    try {\n        const res = await fetch(`${API_CRYPTOCLOUD}/invoice/info`, {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n              'Authorization': `Token ${AUTH_CRYPTOCLOUD}`,\n            },\n            body: JSON.stringify({\n                uuid,\n            }),\n        });\n        const data = await res.json();\n        return data;\n    } catch (err) {\n        console.error(err);\n        return null;\n    }\n}\n\nexport const getActiveInvoice = async (user_id, token) => {\n    try {\n        const res = await fetch(`${API_SERVER}/payment/invoice/active`, {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n              'Authorization': `Token ${token}`,\n            },\n            body: JSON.stringify({\n                user_id,\n            }),\n        });\n        const data = await res.json();\n        return data;\n    } catch (err) {\n        console.error(err);\n        return null;\n    }\n}\n\n","import { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router';\n\nimport PricingTable from '../pricingTable/pricingTable';\nimport Loader from '../loader/loader';\nimport { createInvoice, saveInvoice, getActiveInvoice } from '../../services/payment.service';\n\nimport './payment.css';\n\nfunction Payment(props) {\n    const [loader, setLoader] = useState(false);\n    const [error, setError] = useState(false);\n    const [ready, setReady] = useState(false);\n    const [link, setLink] = useState(null);\n    const { user_id, isLoggedIn, token } = useSelector(state => state.auth);\n\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        async function getLastInvoice() {\n            const data = await getActiveInvoice(user_id, token);\n            if (data.status) {\n                setReady(true);\n                setLink(data.invoice.pay_url);\n            }\n        }\n        getLastInvoice();\n    }, [token, user_id]);\n\n    const onPurchase = async (amount, period) => {\n        if (!isLoggedIn) {\n            navigate('/login');\n            return;\n        }\n        setLoader(true);\n\n        // test only\n        setLoader(false);\n        setReady(true);\n        setLink('https://google.com');\n        return;\n\n        // const invoice = await createInvoice(amount, user_id, 'USD', email);\n        // if (invoice && invoice.status === 'success') {\n        //     await saveInvoice(period, user_id, invoice, token);\n        //     setLoader(false);\n        //     setReady(true);\n        //     setLink(invoice.pay_url);\n        //     return;\n        // }\n        // setError(true);\n        // setLoader(false);\n    }\n\n    const onNewInvoice = () => {\n        setReady(false);\n        setError(false);\n    }\n\n    const LinkElement = () => (\n        <div className=\"link-block\">\n            <h1 className=\"link-header\">Invoice is ready!</h1>\n            <p className=\"link-text\">Now you can follow the link for paying your premium account</p>\n            <a target=\"_blank\" rel=\"noopener noreferrer\" href={link} className=\"a_link fas fa-check-circle\"> Pay Link</a>\n            <div>\n                <button className=\"new_invoice_btn\" onClick={onNewInvoice}>create new invoice</button>\n            </div>\n        </div>\n    );\n\n    const ErrorMessage = () => (\n        <div className=\"link-block\">\n            <h1 className=\"link-header\">Oops!</h1>\n            <p className=\"link-text\">Sorry, something went wrong. Cannot create invoice.</p>\n        </div>\n    );\n\n    return (\n        <div className=\"payment-content\">\n            <div className=\"payment-promo\">\n                <h1 className=\"payment-header\"><i className=\"fas fa-arrow-down\"></i> Choose your premium plan here <i className=\"fas fa-arrow-down\"></i></h1>\n                <p><span className=\"payment-promo-features\">Features </span>want more options and convenience? Try premium access.\n                    You will have access to batch file\n                    conversion of up to <span className=\"payment-promo-highlight\">100 files </span>\n                    at a time and the maximum size of one file will be increased\n                    up to <span className=\"payment-promo-highlight\">2 Mb</span>.\n                    You can easily <span className=\"payment-promo-highlight\">pay with crypto </span>\n                    or if you do not have it, directly by card.</p>\n                <p><span className=\"payment-promo-features\">Donate </span>\n                    this donation will let me know that it is worth further developing this service and some motivation.</p>\n                <p className=\"cannot-donate\"><span className=\"payment-promo-features\">Options* </span>\n                    if you have no chance to donate, but you absolutely need full functionality,\n                    just write to me and we will think along with you!</p>\n            </div>\n            {loader ? <Loader /> : null}\n            {ready ? <LinkElement /> : null}\n            {error ? <ErrorMessage /> : null}\n            {!ready ? <PricingTable onPurchase={onPurchase} /> : null}\n            <div className=\"payment-promo-options\">\n                <p>**Depending on the payment method chosen, the commission of the crypto processing service may change</p>\n            </div>\n        </div>\n    );\n}\n\nexport default Payment;\n","import { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport Navbar from '../navBar/navBar';\nimport Footer from '../footer/footer';\nimport AppInfo from '../app-info/app-info';\nimport Dropfiles from '../dropfiles/dropfiles';\nimport SvghmiPreferences from '../svghmi-preferences/svghmi-preferences';\nimport Payment from '../payment/payment';\n\nimport { API_SERVER, CONFIG_DEFAULT } from './../../config/constant';\n\nimport '../app/baner.css';\n\n\nclass Main extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            clientId: uuidv4().split('-').join(''),\n            downloadId: '',\n            files: [],\n            optimizeConf: CONFIG_DEFAULT,\n            optimized: false,\n            uploaded: false,\n            loader: false,\n            error: false,\n        }\n    }\n\n    setFiles = (files) => {\n        this.setState({ files });\n    }\n\n    optimizeFiles = async (conf) => {\n        this.setState({\n            files: [],\n            loader: true,\n        });\n        // remove empty bgColor ids\n        const ids = this.state.optimizeConf.optimization.bgColorId.filter((elem) => elem !== '');\n        const { optimizeConf } = this.state;\n        optimizeConf.optimization.bgColorId = ids;\n        if (ids.length === 1 && ids[0] === '') {\n            optimizeConf.optimization.connectBgColor = false;\n        }\n        const options = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(optimizeConf),\n        };\n\n        try {\n            const response = await fetch(`${API_SERVER}/convertor/optimize/${this.state.clientId}`, options);\n            await response.json()\n            if (response.status) {\n                this.setState((prevState) => ({\n                    optimized: true,\n                    uploaded: false,\n                    downloadId: prevState.clientId,\n                    clientId: uuidv4().split('-').join(''),\n                    loader: false,\n                    error: false,\n                }));\n            }\n        } catch (Err) {\n            console.error('Something went wrong...');\n            this.setState((prevState) => ({\n                optimized: false,\n                uploaded: false,\n                downloadId: prevState.clientId,\n                clientId: uuidv4().split('-').join(''),\n                loader: false,\n                error: true,\n            }));\n        }\n    }\n\n    onConfigChanged = (section, id, value) => {\n        if (section === 'optimization') {\n            this.setState((prev) => {\n                const newConf = { ...prev.optimizeConf };\n                newConf[section][id] = value;\n                return { optimizeConf: newConf };\n            });\n        }\n        if (section === 'svgo') {\n            if (id === 'removeAttrs') {\n                this.setState((prev) => {\n                    let newConf = { ...prev.optimizeConf };\n                    newConf.svgo = newConf.svgo.map((elem) => {\n                        if (elem.name === 'removeAttrs') {\n                            return {\n                                name: 'removeAttrs',\n                                params: {\n                                    attrs: `(${value})`,\n                                },\n                            };\n                        }\n                        return elem;\n                    })\n                    newConf.svgo = newConf.svgo.filter(elem => elem !== id);\n                    return { optimizeConf: newConf };\n                });\n                return;\n            }\n            this.setState((prev) => {\n                let newConf = { ...prev.optimizeConf };\n                if (newConf.svgo.includes(id)) {\n                    newConf.svgo = newConf.svgo.filter(elem => elem !== id);\n                } else {\n                    newConf.svgo.push(id);\n                }\n                return { optimizeConf: newConf };\n            });\n        }\n    }\n\n    render() {\n        return (\n            <>\n                <Navbar />\n                <header className=\"color-full clear-fix\">\n                    <div className=\"text_color_full block3\">\n                        SVG to <span className='svghmi'>SVGHMI</span>\n                    </div>\n                </header>\n                <AppInfo />\n                <Dropfiles\n                    files={this.state.files}\n                    setFiles={this.setFiles}\n                    onUploaded={() => (this.setState({ optimized: false, uploaded: true }))}\n                    id={this.state.clientId} />\n                <SvghmiPreferences\n                    error={this.state.error}\n                    onOptimize={this.optimizeFiles}\n                    downloadId={this.state.downloadId}\n                    loader={this.state.loader}\n                    uploaded={this.state.uploaded}\n                    optimized={this.state.optimized}\n                    config={this.state.optimizeConf}\n                    onConfigChanged={this.onConfigChanged} />\n                <Payment />\n                <Footer />\n            </>\n        );\n    }\n}\n\nexport default Main;\n","import { Component, useState } from 'react';\nimport { useNavigate } from \"react-router-dom\";\nimport { useDispatch, useSelector } from 'react-redux'\nimport { registerAction, loginAction } from '../../store/actions/auth';\nimport './loginComponent.css';\n\nconst mode = 'login';\n\nfunction LoginForm(props) {\n    const { message } = useSelector(state => state.message);\n    const [ login, setLogin ] = useState({\n        email_signup: '',\n        password: '',\n        fullname: '',\n        email: '',\n        createpassword: '',\n        repeatpassword: '',\n    });\n\n    const navigate = useNavigate();\n    const dispatch = useDispatch();\n  \n    // Validation functions\n    const isValidEmail = (email) => {\n      return /\\S+@\\S+\\.\\S+/.test(email);\n    }\n\n    const isPassIdentical = () =>  {\n        return login.createpassword === login.repeatpassword;\n    }\n\n    const isLoginFormValid = () => {\n        if (isValidEmail(login.email) && login.password && login.password !== '') {\n            return true;\n        }\n        return false;\n    }\n\n    const isSignupFormValid = () => {\n        if (isValidEmail(login.email_signup) && \n        login.fullname &&\n        isPassIdentical()) {\n            return true;\n        }\n        return false;\n    }\n\n    // Save credentials in state\n    const onHandleChange = (e) => {\n        const { id, value } = e.target;\n        setLogin({...login, \n            [id]: value,\n        })\n    }\n\n    const onForgot = () => {\n        navigate(`/forgot_password`);\n    }\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n        if (props.mode === 'signup' && isSignupFormValid()) {\n            dispatch(registerAction(\n                login.fullname,\n                login.email_signup,\n                login.createpassword))\n            .then(() => {\n                navigate(`/email_sent`);\n            })\n            .catch(() => {\n                console.error('something goes wrong...');\n            });\n        } else {\n            dispatch(loginAction(login.email, login.password))\n            .then(() => {\n                navigate('/');\n            })\n            .catch(() => {\n                setLogin({...login, \n                    email: '',\n                    password: '',\n                });\n            });\n        }\n    }\n    const emailSignUpClass = isValidEmail(login.email_signup) ? 'form-group__input' : 'form-group__input error__input';\n    const emailLoginClass = isValidEmail(login.email) ? 'form-group__input' : 'form-group__input error__input';\n    let submitClass = 'buttonLogin button-login--primary full-width';\n    if (props.mode === 'signup' && !isSignupFormValid()) {\n        submitClass += ' button-login-disabled';\n    } else if (props.mode === 'login' && !isLoginFormValid()) {\n        submitClass += ' button-login-disabled';\n    }\n\n    const repeatClass = isPassIdentical() ? 'form-group__input' : 'form-group__input error__input';\n    const errorMessage = message ? <h5 className=\"login-message\">{message}</h5> : null;\n\n    return (\n        <form onSubmit={onSubmit}>\n            <div className=\"form-block__input-wrapper\">\n                <div className=\"form-group form-group--login\">                  \n                    <input className={emailLoginClass} type=\"text\" id=\"email\" label=\"email\" disabled={props.mode !== 'login'} value={login.email} onChange={onHandleChange} placeholder='email'/>\n                    <input className=\"form-group__input\" type=\"password\" id=\"password\" label=\"password\" disabled={props.mode !== 'login'} value={login.password} onChange={onHandleChange} placeholder='password' />\n                </div>\n                <div className=\"form-group form-group--signup\">\n                    <input className=\"form-group__input\" type=\"text\" id=\"fullname\" label=\"full name\" disabled={props.mode !== 'signup'} value={login.fullname} onChange={onHandleChange} placeholder='full name' />\n                    <input className={emailSignUpClass} type=\"email\" id=\"email_signup\" label=\"email\" disabled={props.mode !== 'signup'} value={login.email_signup} onChange={onHandleChange} placeholder='email' />\n                    <input className=\"form-group__input\" type=\"password\" id=\"createpassword\" label=\"password\" disabled={props.mode !== 'signup'} value={login.createpassword} onChange={onHandleChange} placeholder='password' />\n                    <input className={repeatClass} type=\"password\" id=\"repeatpassword\" label=\"repeat password\" disabled={props.mode !== 'signup'} value={login.repeatpassword} onChange={onHandleChange} placeholder='repeat password' />\n                </div>\n            </div>\n            <button className={submitClass} type=\"submit\">{props.mode === 'login' ? 'Log In' : 'Sign Up'}</button>\n            { errorMessage }\n            { props.mode === 'login' ? <button className=\"button-forgot\" onClick={onForgot} >Forgotten your password?</button> : null }\n        </form>\n    )\n}\n\nclass LoginComponent extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            mode: this.props.mode,\n        }\n    }\n\n    toggleMode() {\n        var newMode = this.state.mode === 'login' ? 'signup' : 'login';\n        this.setState({ mode: newMode});\n    }\n\n    render() {\n        return (\n            <div className={`login-form-app login-form-app--is-${mode}`}>\n                <div className={`form-block-wrapper form-block-wrapper--is-${this.state.mode}`} ></div>\n                <section className={`form-block form-block--is-${this.state.mode}`}>\n                    <header className=\"form-block__header\">\n                        <h1>{this.state.mode === 'login' ? 'Welcome back!' : 'Sign up'}</h1>\n                        <div className=\"form-block__toggle-block\">\n                            <span>{this.state.mode === 'login' ? 'Don\\'t' : 'Already'} have an account? Click here &#8594;</span>\n                            <input className=\"in-log-checkbox\" id=\"form-toggler\" type=\"checkbox\" onClick={this.toggleMode.bind(this)} />\n                            <label htmlFor=\"form-toggler\"></label>\n                        </div>\n                    </header>\n                    <LoginForm mode={this.state.mode}/>\n                </section>\n            </div>\n        )\n    }\n}\n\nexport default LoginComponent;\n","import LoginComponent from '../loginComponent/loginComponent';\n\nconst Login = (props) => {\n    return (\n        <LoginComponent\n            mode={props.mode}\n        />\n    )\n}\n\nexport default Login;\n","import { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useNavigate } from \"react-router-dom\";\n\nimport { changeNameAction } from '../../store/actions/auth';\nimport { changePassword, changeEmail, getPremiumDate } from '../../services/auth.service';\n\nimport Payment from '../payment/payment';\n\nimport './profileComponent.css';\n\nfunction ProfileComponent() {\n    const { email, name, isLoggedIn, level, token } = useSelector(state => state.auth);\n    const [userEmail, setUserEmail] = useState(email);\n    const [userName, setUserName] = useState(name);\n    const [pass1, setPass1] = useState('');\n    const [pass2, setPass2] = useState('');\n    const [emailMsg, setEmailMsg] = useState({});\n    const [nameMsg, setNameMsg] = useState({});\n    const [passMsg, setPassMsg] = useState({});\n    const [premium, setPremium] = useState(null);\n    const navigate = useNavigate();\n    const dispatch = useDispatch();\n\n    const isValidEmail = (email) => (/\\S+@\\S+\\.\\S+/.test(email));\n\n    useEffect(() => {\n        if (!isLoggedIn) {\n            navigate('/');\n        }\n        const fetchVal = async () => {\n            if (level === 'premium') {\n                const res = await getPremiumDate(token);\n                if (res.status) {\n                    setPremium(res.premium_expired);\n                }\n            }\n        }\n        fetchVal();\n    })\n\n    const onChangeName = (e) => {\n        setUserName(e.target.value);\n    }\n\n    const onChangeEmail = (e) => {\n        setUserEmail(e.target.value);\n    }\n\n    const onChangePass1 = (e) => {\n        setPass1(e.target.value);\n    }\n\n    const onChangePass2 = (e) => {\n        setPass2(e.target.value);\n    }\n\n    const onSubmitEmail = async (e) => {\n        e.preventDefault();\n        if (isValidEmail(userEmail)) {\n            const res = await changeEmail(userEmail, token);\n            if (res.error) {\n                setEmailMsg({\n                    style: 'error',\n                    text: res.msg,\n                });\n                return;\n            }\n            setEmailMsg({\n                style: 'success',\n                text: res.msg,\n            });\n            return\n        }\n        setEmailMsg({\n            style: 'error',\n            text: 'Email not valid',\n        });\n    }\n\n    const onSubmitName = (e) => {\n        e.preventDefault();\n        dispatch(changeNameAction(\n            userName,\n            token))\n            .then(() => {\n                setNameMsg({\n                    style: 'success',\n                    text: 'Name changed',\n                });\n            })\n            .catch((e) => {\n                console.error('something goes wrong...');\n                setNameMsg({\n                    style: 'error',\n                    text: 'Sorry, something went wrong',\n                });\n            });\n    }\n\n    const onSubmitPassword = async (e) => {\n        e.preventDefault();\n        if (pass1 === pass2) {\n            if (pass1.length < 6) {\n                setPassMsg({\n                    style: 'error',\n                    text: 'password must be at least 6 characters long',\n                });\n                return;\n            }\n            const res = await changePassword(pass1, token);\n            if (res.error) {\n                setPassMsg({\n                    style: 'error',\n                    text: res.msg,\n                });\n                return;\n            }\n            setPassMsg({\n                style: 'success',\n                text: res.msg,\n            });\n            setPass1('');\n            setPass2('');\n            return;\n        }\n        setPassMsg({\n            style: 'error',\n            text: 'Passwords is not identical',\n        });\n        setPass1('');\n        setPass2('');\n    }\n\n    const passDisabled = !!pass1 && pass1 === pass2 ? false : true;\n    const nameDisabled = !userName ? true : false;\n    const emailDisabled = !userEmail ? true : false;\n\n    const ExpiresOn = () => (\n        <h4 className=\"left-column-h\">\n            Expires on - { }<span className={level !== 'basic' ? 'level-premium' : 'level-basic'}>{premium}</span>\n        </h4>\n    );\n\n    return (\n        <>\n            <div className=\"profile-wrapper\">\n                <div className=\"profile-left\">\n                    <img className=\"profile-image-center\" src=\"/user-profile-image.svg\" alt=\"user profile template\" />\n                    <h4 className=\"left-column-h\">{name}</h4>\n                    <h4 className=\"left-column-h\">Account - <span className={level !== 'basic' ? 'level-premium' : 'level-basic'}>{level}</span></h4>\n                    {level === 'premium' ? <ExpiresOn /> : null}\n                </div>\n\n                <div className=\"profile-right\">\n                    <h2>Credentials</h2>\n                    <hr />\n                    <form className=\"form-inline\" onSubmit={onSubmitEmail} >\n                        <label htmlFor=\"email\">Email:</label>\n                        <input type=\"text\" id=\"email\" name=\"Email\" value={userEmail} onChange={onChangeEmail} />\n                        <button type=\"submit\" disabled={emailDisabled}>Change email</button>\n                    </form>\n                    {emailMsg.text ? <p className={`form-message-${emailMsg.style}`}>{emailMsg.text}</p> : null}\n                    <form className=\"form-inline\" onSubmit={onSubmitName} >\n                        <label htmlFor=\"name\">Name:</label>\n                        <input type=\"text\" id=\"name\" name=\"Name\" value={userName} onChange={onChangeName} />\n                        <button type=\"submit\" disabled={nameDisabled}>Change name</button>\n                    </form>\n                    {nameMsg.text ? <p className={`form-message-${nameMsg.style}`}>{nameMsg.text}</p> : null}\n                    <form className=\"form-inline\" onSubmit={onSubmitPassword} >\n                        <label htmlFor=\"name\">Password:</label>\n                        <input type=\"password\" id=\"password\" value={pass1} name=\"password\" onChange={onChangePass1} />\n                        <input type=\"password\" id=\"password-repeat\" value={pass2} name=\"password\" onChange={onChangePass2} />\n                        <button type=\"submit\" disabled={passDisabled}>Change password</button>\n                    </form>\n                    {passMsg.text ? <p className={`form-message-${passMsg.style}`}>{passMsg.text}</p> : null}\n                </div>\n            </div>\n            <Payment />\n        </>\n    );\n}\n\nexport default ProfileComponent;\n","import Navbar from '../navBar/navBar';\nimport ProfileComponent from '../profileComponent/profileComponent';\nimport Footer from '../footer/footer';\n\nfunction ProfilePage() {\n    \n    return (\n        <>\n            <Navbar />\n            <ProfileComponent />\n            <Footer />\n        </>\n    )\n}\n\nexport default ProfilePage;\n","import './messageTemplate.css';\n\nfunction MessageTemplate(props) {\n    const messageClass = props.is404 ? 'error' : 'message-template-wrap';\n    return (\n        <>\n            <div className=\"moon\"></div>\n            <div className=\"moon__crater moon__crater1\"></div>\n            <div className=\"moon__crater moon__crater2\"></div>\n            <div className=\"moon__crater moon__crater3\"></div>\n\n            <div className=\"star star1\"></div>\n            <div className=\"star star2\"></div>\n            <div className=\"star star3\"></div>\n            <div className=\"star star4\"></div>\n            <div className=\"star star5\"></div>\n\n            <div className={messageClass}>\n                {props.children}\n            </div>\n\n            <div className=\"astronaut\">\n                <div className=\"astronaut__backpack\"></div>\n                <div className=\"astronaut__body\"></div>\n                <div className=\"astronaut__body__chest\"></div>\n                <div className=\"astronaut__arm-left1\"></div>\n                <div className=\"astronaut__arm-left2\"></div>\n                <div className=\"astronaut__arm-right1\"></div>\n                <div className=\"astronaut__arm-right2\"></div>\n                <div className=\"astronaut__arm-thumb-left\"></div>\n                <div className=\"astronaut__arm-thumb-right\"></div>\n                <div className=\"astronaut__leg-left\"></div>\n                <div className=\"astronaut__leg-right\"></div>\n                <div className=\"astronaut__foot-left\"></div>\n                <div className=\"astronaut__foot-right\"></div>\n                <div className=\"astronaut__wrist-left\"></div>\n                <div className=\"astronaut__wrist-right\"></div>\n                \n                <div className=\"astronaut__cord\">\n                    <canvas id=\"cord\" height=\"500px\" width=\"500px\"></canvas>\n                </div>\n                <div className=\"astronaut__head\">\n                    <canvas id=\"visor\" width=\"60px\" height=\"60px\"></canvas>\n                    <div className=\"astronaut__head-visor-flare1\"></div>\n                    <div className=\"astronaut__head-visor-flare2\"></div>\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default MessageTemplate;","import { NavLink as Link } from \"react-router-dom\";\nimport MessageTemplate from \"../messageTemplate/messageTemplate\";\n\nimport './paymentResult.css';\n\nfunction PaymentResult(props) {\n    let iconClass = '';\n    let bgColorClass = 'payment_header';\n    let HeaderText = '';\n    if (props.type === 'success') {\n        iconClass = 'fa fa-check';\n        bgColorClass += ' payment_successed';\n        HeaderText = 'Payment Success !';\n    }\n    if (props.type === 'fail') {\n        iconClass = 'fa fa-times';\n        bgColorClass += ' payment_failed';\n        HeaderText = 'Payment Failed';\n    }\n    return (\n        <MessageTemplate>\n            <div className=\"payment\">\n            <div className={bgColorClass} >\n               <div className=\"payment_check\"><i className={iconClass} aria-hidden=\"true\"></i></div>\n            </div>\n            <div className=\"payment_content\">\n               <h1>{HeaderText}</h1>\n               <p>Lorem ipsum, or lipsum as it is sometimes known, is dummy text used in laying out print, graphic or web designs. </p>\n               <Link to=\"/\">Go to Home</Link>\n            </div>\n         </div>\n        </MessageTemplate>\n    )\n}\n\nexport default PaymentResult;","import { useNavigate } from \"react-router-dom\";\nimport MessageTemplate from \"../messageTemplate/messageTemplate\";\nimport './notFoundPage.css';\n\nfunction NotFoundPage(props) {\n    const navigate = useNavigate();\n    const onClick = () => {\n        navigate('/');\n    }\n\n    return (\n        <MessageTemplate is404>\n            <div className=\"error__title\">404</div>\n            <div className=\"error__subtitle\">Hmmm...</div>\n            <div className=\"error__description\">It looks like one of the  developers fell asleep</div>\n            <button className=\"error__button error__button--active\" onClick={onClick}>HOME</button>\n        </MessageTemplate>\n    )\n}\n\nexport default NotFoundPage;\n","import { NavLink as Link, useParams } from \"react-router-dom\";\nimport MessageTemplate from \"../messageTemplate/messageTemplate\";\n\nimport './commonMessage.css';\n\nfunction CommonMessage(props) {\n    const params = useParams();\n\n    return (\n        <MessageTemplate>\n            <div className=\"message_container\">\n            <div className=\"message_header\" >\n               <div className=\"message_check\"><i className=\"fa fa-check\" aria-hidden=\"true\"></i></div>\n            </div>\n            <div className=\"message_content\">\n                {params.email ? <h5>{params.email}</h5> : null}\n                <h1>{props.header}</h1>\n                <p>{props.message}</p>\n                <Link to=\"/\">Go to Home</Link>\n            </div>\n         </div>\n        </MessageTemplate>\n    )\n}\n\nexport default CommonMessage;","import { useNavigate } from \"react-router-dom\";\nimport { useState } from 'react';\nimport MessageTemplate from \"../messageTemplate/messageTemplate\";\nimport { API_SERVER } from \"../../config/constant\";\n\nimport './forgotPassword.css';\n\nfunction ForgotPassword() {\n    const [email, setEmail] = useState('');\n    const [errorMsg, setErrorMsg] = useState('');\n\n    const navigate = useNavigate();\n\n    // Validation functions\n    const isValidEmail = (email) => {\n        return /\\S+@\\S+\\.\\S+/.test(email);\n        }\n\n    // Save credentials in state\n    const onChange = (e) => {\n        const { value } = e.target;\n        setEmail(value);\n    }\n\n    const requestReset = (email) => {\n        return fetch(`${API_SERVER}/users/reset_password`, {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              email,\n            }),\n          })\n          .then((response) => (response.json()))\n          .then((data) => {\n            if (data.error) {\n              throw new Error(\"Not 2xx response\", {cause: data});\n            }\n            return data;\n          });\n    }\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n        requestReset(email)\n        .then(() => {\n            navigate(`/reset_email_sent/${email}`);\n        })\n        .catch((error) => {\n            const message = (error.cause && error.cause.msg) ?\n                error.cause.msg : '';\n            setErrorMsg(message);\n            setEmail('');\n        });\n    }\n    let submitClass = 'buttonLogin button-login--primary full-width';\n    if (!isValidEmail(email)) submitClass += ' button-login-disabled';\n\n    return (\n        <MessageTemplate>\n            <section className={`form-block form-block--is-login`}>\n                <form onSubmit={onSubmit}>\n                    <h3 className=\"form-block__header\" >Forgot your password?</h3>\n                    <div className=\"form-group form-group--login\">                        \n                        <input className=\"form-group__input\" type=\"text\" id=\"email\" label=\"email\" value={email} onChange={onChange} placeholder='name@domain.com'/>\n                    </div>\n                    <button className={submitClass} type=\"submit\">Reset Password</button>\n                </form>\n            </section>\n            {errorMsg ? <h5 className=\"login-message\" >{errorMsg}</h5> : null}\n        </MessageTemplate>\n    )\n}\n\n\nexport default ForgotPassword;\n","import { useParams, useNavigate } from 'react-router-dom';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { logoutAction } from \"../../store/actions/auth\";\n\nimport MessageTemplate from \"../messageTemplate/messageTemplate\";\nimport { API_SERVER } from '../../config/constant';\n\nimport './resetPasswordForm.css';\n\nfunction ResetPasswordForm() {\n    const params = useParams();\n    const [errorMsg, setErrorMsg] = useState('');\n    const [pass1, setPass1] = useState('');\n    const [pass2, setPass2] = useState('');\n\n    const navigate = useNavigate();\n    const dispatch = useDispatch();\n\n    // Save credentials in state\n    const onChange1 = (e) => {\n        const { value } = e.target;\n        setPass1(value);\n    }\n    // Save credentials in state\n    const onChange2 = (e) => {\n        const { value } = e.target;\n        setPass2(value);\n    }\n\n    const requestSetPassword = () => {\n        return fetch(`${API_SERVER}/users/reset_password/${params.token}`, {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              id: params.id,\n              password: pass1,\n            }),\n          })\n          .then((response) => (response.json()))\n          .then((data) => {\n            if (data.error) {\n              throw new Error(\"Not 2xx response\", {cause: data});\n            }\n            return data;\n          });\n    }\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n        requestSetPassword()\n        .then(() => {\n            dispatch(logoutAction());\n            navigate(`/reset_password_successfull`);\n        })\n        .catch((error) => {\n            const message = (error.cause && error.cause.msg) ?\n                error.cause.msg : '';\n            console.log(message)\n            if (message === '') setErrorMsg('something goes wrong');\n            setErrorMsg(message);\n            setPass1('');\n            setPass2('');\n        });\n    }\n\n    const isPassIdentical = () =>  {\n        return pass1 === pass2;\n    }\n\n    const repeatClass = isPassIdentical() ? 'form-group__input' : 'form-group__input error__input';\n\n    return (\n        <MessageTemplate>\n            <section className={`form-block form-block--is-login`}>\n                <form onSubmit={onSubmit}>\n                    <h3 className=\"form-block__header\" >Set new password</h3>\n                    <div className=\"form-group form-group--login\">                        \n                        <input className=\"form-group__input\" type=\"password\" id=\"password\" label=\"password\" value={pass1} onChange={onChange1} placeholder='password' />\n                        <input className={repeatClass} type=\"password\" id=\"repeatpassword\" label=\"repeat password\" value={pass2} onChange={onChange2} placeholder='repeat password' />\n                    </div>\n                    <button className=\"buttonLogin button-login--primary\" type=\"submit\">Set Password</button>\n                </form>\n            </section>\n            {errorMsg ? <h5 className=\"login-message\" >{errorMsg}</h5> : null}\n        </MessageTemplate>\n    )\n}\n\nexport default ResetPasswordForm;\n","import { useState, useEffect } from \"react\";\nimport { NavLink as Link, useParams } from \"react-router-dom\";\nimport MessageTemplate from \"../messageTemplate/messageTemplate\";\nimport { API_SERVER } from '../../config/constant';\n\nfunction ConfirmationPage(props) {\n    const params = useParams();\n    const [error, setError] = useState('');\n\n    useEffect(() => {\n        fetch(`${API_SERVER}/users/email/confirm/${params.id}`, {})\n        .then((res) => res.json())\n        .then((data) => {\n            console.log(data)\n            if (data.error) {\n                setError(data.msg);\n            } else {\n                setError('');\n            }\n        })\n        .catch((err) => {\n            setError('Network error');\n        })\n    });\n\n\n    return (\n         <MessageTemplate>\n            <div className=\"message_container\">\n                <div className=\"message_header\" >\n                    <div className=\"message_check\"><i className=\"fa fa-check\" aria-hidden=\"true\"></i></div>\n                </div>\n                <div className=\"message_content\">\n                    <h1>{params.email}</h1>\n                    {!error ? <p><p>Your email successfully confirmed!</p></p> : null}\n                    {error ? <p>{error}</p> : null}\n                    <Link to=\"/\">Go to Home</Link>\n                </div>\n            </div> \n         </MessageTemplate>\n    )\n}\n\nexport default ConfirmationPage;\n","import { useEffect } from 'react';\nimport { Routes, Route } from 'react-router-dom';\nimport ReactGA from 'react-ga';\n\nimport Main from '../pages/main';\nimport Login from '../pages/login';\nimport ProfilePage from '../pages/profile';\nimport PaymentResult from '../paymentResult/paymentResult';\nimport NotFoundPage from '../notFoundPage/notFoundPage';\nimport PricingTable from '../pricingTable/pricingTable';\nimport CommonMessage from '../commonMessage/commonMessage';\nimport ForgotPassword from '../forgotPassword/forgotPassword';\nimport ResetPasswordForm from '../resetPasswordForm/resetPasswordForm';\nimport ConfirmationPage from '../pages/confirmationPage';\n\nimport './app.css';\n\nimport { GA_ID } from '../../config/constant';\n\nReactGA.initialize(GA_ID);\n\nfunction App() {\n    useEffect(() => {\n        ReactGA.pageview(window.location.pathname + window.location.search);\n    }, []);\n\n    return (\n        <div className=\"app\">\n            <Routes>\n                <Route exact path=\"/\" element={<Main />} />\n                <Route exact path=\"/login\" element={<Login mode=\"login\" />} />\n                <Route exact path=\"/signup\" element={<Login mode=\"signup\" />} />\n                <Route exact path=\"/profile\" element={<ProfilePage />} />\n                <Route exact path=\"/success_purchase\" element={<PaymentResult type=\"success\" />} />\n                <Route exact path=\"/failed_purchase\" element={<PaymentResult type=\"fail\" />} />\n                <Route exact path=\"/test\" element={<PricingTable />} />\n                <Route exact path=\"/forgot_password\" element={<ForgotPassword />} />\n                <Route exact path=\"/reset_password/:token/:id\" element={<ResetPasswordForm />} />\n                <Route exact path=\"/email_sent\" element={<CommonMessage header=\"We sent you confirmation email.\" \n                    message=\"Please follow the instraction in email\"/>} />\n                <Route exact path=\"/signup_confirm/:email/:id\" element={<ConfirmationPage />} />\n                <Route exact path=\"/reset_email_sent/:email\" element={<CommonMessage header=\"We sent you reset link.\" \n                    message=\"Please follow the instraction in email\"/>} />\n                <Route exact path=\"/reset_password_successfull\" element={<CommonMessage header=\"You set new password!\" \n                    message=\"Great, you set new password, and can continue use our service\"/>} />\n                <Route path=\"*\" element={<NotFoundPage />} />\n            </Routes>\n        </div>\n    );\n}\n\nexport default App;\n","import {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n} from \"../actions/types\";\n\nconst name = JSON.parse(localStorage.getItem('name'));\nconst user_id = JSON.parse(localStorage.getItem('user_id'));\nconst email = JSON.parse(localStorage.getItem('email'));\nconst token = JSON.parse(localStorage.getItem('token'));\nconst expires_in = JSON.parse(localStorage.getItem('expires_in'));\nconst level = JSON.parse(localStorage.getItem('level'));\n\nconst initialState = token\n  ? { isLoggedIn: true, name, email, token, expires_in, level, user_id }\n  : { isLoggedIn: false, name: null, email: null, token: null, expires_in: null, level: null, user_id: null };\n\nexport default function auth(state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case REGISTER_SUCCESS:\n      return {\n        ...state,\n        isLoggedIn: false,\n      };\n    case REGISTER_FAIL:\n      return {\n        ...state,\n        isLoggedIn: false,\n      };\n    case LOGIN_SUCCESS:\n      return {\n        ...state,\n        isLoggedIn: true,\n        name: payload.name,\n        user_id: payload.user_id,\n        email: payload.email,\n        token: payload.token,\n        expires_in: payload.expires_in,\n        level: payload.level,\n      };\n    case LOGIN_FAIL:\n      return {\n        ...state,\n        isLoggedIn: false,\n        name: null,\n        user_id: null,\n        email: null,\n        token: null,\n        expires_in: null,\n        level: null,\n      };\n    case LOGOUT:\n      return {\n        ...state,\n        isLoggedIn: false,\n        name: null,\n        user_id: null,\n        email: null,\n        token: null,\n        expires_in: null,\n        level: null,\n      };\n    default:\n      return state;\n  }\n}\n","import { SET_MESSAGE, CLEAR_MESSAGE } from \"../actions/types\";\n\nconst initialState = {\n  message: '',\n};\n\nexport default function message(state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case SET_MESSAGE:\n      return { message: payload };\n\n    case CLEAR_MESSAGE:\n      return { message: \"\" };\n\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport auth from \"../reducers/auth\";\nimport message from \"../reducers/message\";\n\nexport default combineReducers({\n  auth,\n  message,\n});\n","import { createStore, applyMiddleware } from 'redux'\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst middleware = [thunk];\n\nconst store = createStore(rootReducer, applyMiddleware(...middleware));\n\nexport { store };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './components/app/app';\n// import { BrowserRouter as Router } from 'react-router-dom';\nimport { HashRouter as Router } from 'react-router-dom';\nimport { BASE_TITLE } from './config/constant';\nimport './index.css';\nimport { store } from './store';\n\n\n\ndocument.title = `${BASE_TITLE} | Professional Engineering Tool for WinCC Unified widgets`;\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router>\n        <App />\n      </Router>\n    </Provider>\n  </React.StrictMode >,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}