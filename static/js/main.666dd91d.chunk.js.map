{"version":3,"sources":["store/actions/types.js","config/constant.js","store/actions/auth.js","services/auth.service.js","components/navBar/navBar.js","components/app-info/app-info.js","components/dropfiles/dropfiles.js","components/checkBoxItem/checkBoxItem.js","components/inputFieldItem/inputFieldItem.js","components/controls/controls.js","components/error/error.js","components/svghmi-preferences/svghmi-preferences.js","components/pages/main.js","components/loginComponent/loginComponent.js","components/pages/login.js","components/profileComponent/profileComponent.js","components/pages/profile.js","components/messageTemplate/messageTemplate.js","components/paymentResult/paymentResult.js","components/notFoundPage/notFoundPage.js","components/pricingElement/pricingElement.js","components/pricingTable/pricingTable.js","components/commonMessage/commonMessage.js","components/forgotPassword/forgotPassword.js","components/resetPasswordForm/resetPasswordForm.js","components/pages/confirmationPage.js","components/app/app.js","store/reducers/auth.js","store/reducers/message.js","store/reducers/index.js","store/index.js","index.js"],"names":["REGISTER_SUCCESS","REGISTER_FAIL","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","SET_MESSAGE","CLEAR_MESSAGE","API_SERVER","CONFIG_DEFAULT","svgo","name","params","attrs","optimization","delRefs","moveGradients","addDefaults","spaceToComma","connectBgColor","polyToPath","bgColorId","addFlipInterface","registerAction","username","email","password","dispatch","fetch","method","headers","body","JSON","stringify","then","response","json","data","error","Error","cause","register","type","payload","Promise","resolve","message","msg","reject","loginAction","access_token","localStorage","setItem","user","level","expires_in","login","token","logoutAction","removeItem","Navbar","useSelector","state","auth","isLoggedIn","useDispatch","navigate","useNavigate","SignUp","className","to","LogOut","onClick","activestyle","color","AppInfo","Dropfiles","props","id","files","setFiles","onUploaded","useState","showArrow","setShowArror","onDelete","newFiles","filter","x","length","accept","label","onChange","incommingFiles","value","maxFiles","maxFileSize","url","onUploadFinish","map","file","preview","CheckBoxItem","checked","section","style","display","htmlFor","width","height","viewBox","points","InputFieldItem","labels","header","e","target","replace","split","Controls","downloadId","optimized","onOptimize","uploaded","loader","onDownload","element","document","createElement","href","download","appendChild","click","Err","console","spanClass","spanText","btnClass","text","SvghmiPreferences","config","onConfigChanged","ShowColorControl","removeIds","forEach","elem","str","slice","delGradientTransform","includes","Main","setState","optimizeFiles","conf","ids","optimizeConf","options","clientId","status","prevState","uuidv4","join","prev","newConf","push","res","mode","log","this","Component","LoginForm","email_signup","fullname","createpassword","repeatpassword","setLogin","isValidEmail","test","isPassIdentical","isSignupFormValid","onHandleChange","emailSignUpClass","emailLoginClass","submitClass","repeatClass","errorMessage","onSubmit","preventDefault","catch","disabled","placeholder","LoginComponent","newMode","toggleMode","bind","Login","ProfileComponent","useEffect","ProfilePage","MessageTemplate","messageClass","is404","children","PaymentResult","iconClass","bgColorClass","HeaderText","NotFoundPage","PricingElement","price","PricingTable","CommonMessage","useParams","ForgotPassword","setEmail","errorMsg","setErrorMsg","requestReset","ResetPasswordForm","pass1","setPass1","pass2","setPass2","ConfirmationPage","setError","err","App","exact","path","parse","getItem","initialState","combineReducers","action","middleware","thunk","store","createStore","rootReducer","applyMiddleware","title","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.666dd91d.chunk.js","sourcesContent":["export const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\nexport const LOGOUT = \"LOGOUT\";\n\nexport const SET_MESSAGE = \"SET_MESSAGE\";\nexport const CLEAR_MESSAGE = \"CLEAR_MESSAGE\";\n","export const BASE_TITLE = 'SVG to SVGHMI';\n// export const API_SERVER = 'http://localhost:2800/api';\n// export const API_SERVER = 'http://192.168.7.141:2800/api';\nexport const API_SERVER = 'https://server.cirillsokolov.com:2800/api';\nexport const CONFIG_DEFAULT = {\n    svgo: [\n        'convertStyleToAttrs',\n        'removeUnusedNS',\n        'convertColors',\n        'removeEditorsNSData',\n        'removeDoctype',\n        'removeDimensions',\n        'removeMetadata',\n        'sortDefsChildren',\n        'sortAttrs',\n        'moveGroupAttrsToElems',\n        'convertTransform',\n        {\n            name: 'removeAttrs',\n            params: {\n                attrs: '()',\n            },\n        },\n    ],\n    optimization: {\n        delRefs: true,\n        moveGradients: true,\n        addDefaults: true,\n        spaceToComma: true,\n        connectBgColor: true,\n        polyToPath: true,\n        bgColorId: ['bgColor'],\n        addFlipInterface: true,\n    }\n}","import {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n  SET_MESSAGE,\n} from \"./types\";\n\nimport { register, login, logout } from '../../services/auth.service';\nexport const registerAction = (username, email, password) => (dispatch) => {\n  return register(username, email, password).then(\n    (response) => {\n      dispatch({\n        type: REGISTER_SUCCESS,\n      });\n\n      dispatch({\n        type: SET_MESSAGE,\n        payload: 'Message from nodejs',\n        // payload: response.data.message,\n      });\n\n      return Promise.resolve();\n    },\n    (error) => {\n      const message = (error.cause && error.cause.msg) ?\n      error.cause.msg : '';\n\n      dispatch({\n        type: REGISTER_FAIL,\n      });\n\n      dispatch({\n        type: SET_MESSAGE,\n        payload: message,\n      });\n\n      return Promise.reject();\n    }\n  );\n};\n\nexport const loginAction = (username, password) => (dispatch) => {\n  return login(username, password).then(\n    (data) => {\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: {\n          name: data.name,\n          email: data.user,\n          level: data.level,\n          token: data.access_token,\n          expires_in: data.expires_in,\n        },\n      });\n      return Promise.resolve();\n    },\n    (error) => {\n      const message = (error.cause && error.cause.msg) ?\n      error.cause.msg : '';\n      dispatch({\n        type: LOGIN_FAIL,\n      });\n\n      dispatch({\n        type: SET_MESSAGE,\n        payload: message,\n      });\n\n      return Promise.reject();\n    }\n  );\n};\n\nexport const logoutAction = () => (dispatch) => {\n  logout();\n\n  dispatch({\n    type: LOGOUT,\n  });\n};\n","import { API_SERVER } from '../config/constant';\n\n\nexport const register = (name, email, password) => {\n  return fetch(`${API_SERVER}/users/register`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email,\n      password,\n      name,\n    }),\n  })\n  .then((response) => (response.json()))\n  .then((data) => {\n    if (data.error) {\n      throw new Error(\"Not 2xx response\", {cause: data});\n    }\n    return data;\n  });\n};\n\nexport const login = (email, password) => {\n  return fetch(`${API_SERVER}/users/login`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email,\n      password,\n    }),\n  })\n  .then((response) => (response.json()))\n  .then((data) => {\n    if (data.error) {\n      throw new Error(\"Not 2xx response\", {cause: data});\n    }\n    if (data.access_token) {\n      localStorage.setItem(\"name\", JSON.stringify(data.name));\n      localStorage.setItem(\"email\", JSON.stringify(data.user));\n      localStorage.setItem(\"token\", JSON.stringify(data.access_token));\n      localStorage.setItem(\"level\", JSON.stringify(data.level));\n      localStorage.setItem(\"expires_in\", JSON.stringify(data.expires_in));\n    }\n    return data;\n  })\n};\n\nexport const logout = () => {\n  localStorage.removeItem(\"name\");\n  localStorage.removeItem(\"email\");\n  localStorage.removeItem(\"token\");\n};\n","import { NavLink as Link } from \"react-router-dom\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useNavigate } from \"react-router-dom\";\nimport { logoutAction } from \"../../store/actions/auth\";\n\nimport './navBar.css'\n\nconst Navbar = () => {\n    const { name } = useSelector(state => state.auth);\n    const { isLoggedIn } = useSelector(state => state.auth);\n\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n\n    const SignUp  = () => (\n        <nav className=\"nav_btn\">\n            <Link className=\"nav_btn_link\" to=\"/signup\">Sign Up</Link>\n        </nav>\n    );\n    const LogOut = () => (\n        <button className=\"nav_btn nav_btn_link\" type=\"button\"\n            onClick={()=> {\n                dispatch(logoutAction());\n                navigate('/');\n            }}>\n                Log Out\n        </button>\n    );\n    return (\n        <>\n           <nav className=\"nav_block\">\n            <Link className=\"nav_logo\" to=\"/\">\n                SVGHMI\n            </Link>\n            <div className=\"nav_menu\">\n                <Link className=\"nav_link\"\n                  to={ isLoggedIn ? '/profile': '/login' }\n                  activestyle={{ color: 'black' }}\n                >\n                    {isLoggedIn ? name : 'Log In'}\n                </Link>\n                {isLoggedIn ? <LogOut /> : <SignUp />}\n            </div>\n           </nav> \n        </>\n    );\n};\nexport default Navbar;","import \"./app-info.css\";\n\nconst AppInfo = () => {\n    return (\n        <div className=\"app-info\">\n            <h1>A simple tool for creating dynamic widgets (SVGHMI)</h1>\n            <p className=\"infoBlock\">With this tool your can easily convert your SVG files to Siemens WinCC Unified format <i>SVGHMI</i> and create dynamic widgets in just a couple of steps</p>\n            <ul>\n                <li>First of all you need some svg file for convertion</li>\n                <li>Choose or Drag'n'Drop you files into field below</li>\n                <li>Push upload button</li>\n                <li>Push Convert button</li>\n                <li>And finaly download your ready zip archive</li>\n            </ul>\n            <p className=\"infoBlock\">If you want more flexibility you can tune convertion process with some options</p>\n        </div>\n    )\n}\n\nexport default AppInfo;","import { Dropzone, FileItem } from \"@dropzone-ui/react\";\nimport { useState } from 'react';\nimport { API_SERVER } from \"../../config/constant\";\n\nimport './dropfiles.css';\n\nfunction Dropfiles(props) {\n    const { id, files, setFiles, onUploaded } = props;\n    const [showArrow, setShowArror] = useState(false);\n\n    const updateFiles = (incommingFiles) => {\n        // console.log(incommingFiles)\n        if (incommingFiles.length === 0) {\n            setShowArror(false);\n            return;\n        }\n        setFiles(incommingFiles);\n        setShowArror(true);\n    };\n\n    const onDelete = (id) => {\n        const newFiles = files.filter((x) => x.id !== id);\n        if (newFiles.length === 0) {\n            setShowArror(false);\n        }\n        setFiles(newFiles);\n        \n    };\n\n    const uploadFinished = (files) => {\n        // console.log(`Uploaded ${files.length} files`);\n        onUploaded();\n        setShowArror(false);\n    }\n\n    return (\n        <div className=\"dropfiles\">\n            <h3 className=\"dropfile-header\">Upload your files here</h3>\n            {showArrow ? <div className=\"arrow bounce\"></div> : null}\n            <Dropzone\n                accept=\".svg\"\n                label=\"Drop your svg files here\"\n                onChange={updateFiles}\n                value={files}\n                maxFiles={100}\n                maxFileSize={1024000}\n                url={`${API_SERVER}/convertor/upload-files/${id}`}\n                onUploadFinish={uploadFinished} >\n                {files.map((file) => (\n                    <FileItem onDelete={onDelete} {...file} preview />\n                ))}\n            </Dropzone>\n        </div>\n    );\n}\n\nexport default Dropfiles;\n","import './checkBoxItem.css';\n\nconst CheckBoxItem = (props) => {\n    const { checked, onClick, id, section, label } = props;\n\n    const onCheck = () => {\n        onClick(section, id, !checked);\n    }\n\n    return (\n        <div className=\"cbx-item\">\n            <input\n                className=\"inp-cbx\"\n                id={id}\n                checked={checked}\n                onChange={onCheck}\n                type=\"checkbox\"\n                style={{display: \"none\"}} />\n            <label className=\"cbx\"htmlFor={id}>\n                <span>\n                    <svg width=\"12px\" height=\"10px\" viewBox=\"0 0 12 10\">\n                        <polyline points=\"1.5 6 4.5 9 10.5 1\"></polyline>\n                    </svg>\n                </span>\n                <span>{label}</span>\n            </label>\n        </div>\n    )\n}\n\nexport default CheckBoxItem;","import './inputFieldItem.css';\n\nconst InputFieldItem = (props) => {\n    const { labels, onChange, id, section, header } = props;\n\n    const onIdChange = (e) => {\n        const value = e.target.value.replace(' ', '').split(',');\n        onChange(section, id, value);\n    }\n\n    return (\n        <label htmlFor=\"inp\" className=\"inp\">\n            <input type=\"text\" id=\"inp\" value={labels} onChange={onIdChange} />\n                <span className=\"label\">{header}</span>\n                <span className=\"focus-bg\"></span>\n        </label>\n    )\n}\n\nexport default InputFieldItem;","import { API_SERVER } from \"../../config/constant\";\n\nimport './controls.css';\n\nconst Controls = (props) => {\n    const { downloadId, optimized, onOptimize, uploaded, loader } = props;\n \n    // Create link and download zip file\n    const onDownload = async () => {\n        try {\n            const element = document.createElement(\"a\");\n            element.href = `${API_SERVER}/convertor/download/${downloadId}`;\n            element.download = 'svghmi.zip'\n            document.body.appendChild(element); // Required for this to work in FireFox\n            element.click(); // simulate link click\n        } catch (Err) {\n            console.error('Something went wrong with downloading...');\n        }\n        \n    }\n\n    const onClick = async () => {\n        if (uploaded && !optimized) {\n            onOptimize();\n        } else if (optimized) {\n            onDownload();\n        }\n    }\n\n    let spanClass = loader ? 'loader' : 'btnText';\n    let spanText = optimized ? 'Download' : 'Convert';\n    let btnClass = 'btnCtrl';\n    if (loader) {\n        spanText = '';\n    }\n    if (!uploaded && !optimized) {\n        btnClass += ' btnDisabled';\n        spanText = 'Upload before';\n    }\n\n    return (\n        <>\n            <button \n                className={btnClass}\n                onClick={onClick}>\n                    <span className={spanClass}>{spanText}</span>\n            </button>\n        </>\n    );\n}\n\nexport default Controls;\n","import './error.css';\n\nconst Error = (props) => {\n    return (\n        <div className=\"error-message\">\n            <span className=\"error-text\">{props.text}</span>\n        </div>\n    )\n}\n\nexport default Error;\n","import CheckBoxItem from \"../checkBoxItem/checkBoxItem\";\nimport InputFieldItem from \"../inputFieldItem/inputFieldItem\";\nimport Controls from \"../controls/controls\";\nimport Error from \"../error/error\";\n\nimport './svghmi-preferences.css';\n\nconst SvghmiPreferences = (props) => {\n    const { config, onConfigChanged, error } = props;\n\n    const ShowColorControl = config.optimization.connectBgColor ? \n        <InputFieldItem\n            section=\"optimization\"\n            id=\"bgColorId\"\n            header=\"Element's IDs (comma separated)\"\n            labels={config.optimization.bgColorId}\n            onChange={onConfigChanged} />\n        : null;\n    \n    let removeIds = '';\n    config.svgo.forEach(elem => {\n        if (elem.name === 'removeAttrs') {\n            const str = elem.params.attrs;\n            removeIds = str.slice(1, str.length - 1);\n        }\n    });\n\n    return (\n        <div className='svghmi-preferences'>\n            <Controls\n                onOptimize={props.onOptimize}\n                downloadId={props.downloadId}\n                loader={props.loader}\n                uploaded={props.uploaded}\n                optimized={props.optimized} />\n            {error ? <Error text=\"=( Sorry, something went wrong, try another svg files...\" /> : null}\n            <div className=\"wrap-collabsible\">\n                <input id=\"collapsible1\" className=\"toggle\" type=\"checkbox\" />\n                <label htmlFor=\"collapsible1\" className=\"lbl-toggle\">Options</label>\n                <div className=\"collapsible-content\">\n                    <div className=\"content-inner\">\n                        <CheckBoxItem\n                            id=\"addDefaults\"\n                            label=\"Add default values into Gradients\"\n                            section=\"optimization\"\n                            checked={config.optimization.addDefaults}\n                            onClick={onConfigChanged} />\n                        <CheckBoxItem\n                            id=\"delGradientTransform\"\n                            label=\"Remove <gradientTransform> attribute and recalculate x(cx), y(cy)\"\n                            section=\"optimization\"\n                            checked={config.optimization.delGradientTransform}\n                            onClick={onConfigChanged} />\n                        <CheckBoxItem\n                            id=\"spaceToComma\"\n                            label=\"Change whitespaces to comma delimiter in gradientTransform attributes\"\n                            section=\"optimization\"\n                            checked={config.optimization.spaceToComma}\n                            onClick={onConfigChanged} />\n                        <CheckBoxItem\n                            id=\"delRefs\"\n                            label=\"Delete href and xlink:href in gradients\"\n                            section=\"optimization\"\n                            checked={config.optimization.delRefs}\n                            onClick={onConfigChanged} />\n                        <CheckBoxItem\n                            id=\"moveGradients\"\n                            label=\"Move gradients to <defs/>\"\n                            section=\"optimization\"\n                            checked={config.optimization.moveGradients}\n                            onClick={onConfigChanged} />\n                        <CheckBoxItem\n                            id=\"addFlipInterface\"\n                            label=\"Add Flip interface into SVGHMI\"\n                            section=\"optimization\"\n                            checked={config.optimization.addFlipInterface}\n                            onClick={onConfigChanged} />\n                        <CheckBoxItem\n                            id=\"convertShapeToPath\"\n                            label=\"Shape to Path\"\n                            section=\"svgo\"\n                            checked={config.svgo.includes(\"convertShapeToPath\")}\n                            onClick={onConfigChanged} />\n                        <CheckBoxItem\n                            id=\"polyToPath\"\n                            label=\"Poly to Path\"\n                            section=\"optimization\"\n                            checked={config.optimization.polyToPath}\n                            onClick={onConfigChanged} />\n                        <CheckBoxItem\n                            id=\"convertColors\"\n                            label=\"convert colors from rgb() to #rrggbb, from #rrggbb to #rgb\"\n                            section=\"svgo\"\n                            checked={config.svgo.includes(\"convertColors\")}\n                            onClick={onConfigChanged} />\n                        <CheckBoxItem\n                            id=\"removeDimensions\"\n                            label=\"Remove Width/Height and add viewBox if it's missing \"\n                            section=\"svgo\"\n                            checked={config.svgo.includes(\"removeDimensions\")}\n                            onClick={onConfigChanged} />\n                        <CheckBoxItem\n                            id=\"connectBgColor\"\n                            label=\"Attach bgColorXX to BasicColor interface property\"\n                            section=\"optimization\"\n                            checked={config.optimization.connectBgColor}\n                            onClick={onConfigChanged} />\n                        {ShowColorControl}\n                        <InputFieldItem\n                            section=\"svgo\"\n                            id=\"removeAttrs\"\n                            header=\"Remove user defined Ids (comma separated)\"\n                            labels={removeIds}\n                            onChange={onConfigChanged} />\n                    </div>\n                </div>\n            </div>\n            <div className=\"wrap-collabsible\">\n                <input id=\"collapsible2\" className=\"toggle\" type=\"checkbox\" />\n                <label htmlFor=\"collapsible2\" className=\"lbl-toggle\">Options Help</label>\n                <div className=\"collapsible-content\">\n                    <div className=\"content-inner\">\n                        <div className=\"option-text\">\n                            <h4>Add default values</h4>\n                            <p className=\"paragraphDesc\">Linear and Radial gradients can be without some attributes.\n                                For example <i>\"stop-color\" and \"stop-opacity\"</i>,\n                                for LinearGradient can be <i>\"x1\", \"x2\", \"y1\", \"y2\"</i>, for RadialGradient can be <i>\"cx\", \"cy\"</i>.\n                                When this option is activated program adds default value for \"stop-color\" it will be black color,\n                                for \"stop-opacity\" is null.\n                            </p>\n                        </div>\n                        <div className=\"option-text\">\n                            <h4 className=\"option-header\">Remove gradientTransform</h4>\n                            <p className=\"paragraphDesc\">Some Vector Graphics Editors can add <i>gradientTransform</i> attributes to Gradients,\n                                and <i>WinCC Unified</i> don't \"understand\" it and displays it as black.\n                                This option try to recalculate transformed coordinates to x and y. Sometimes it can break gradient.</p>\n                        </div>\n                        <div className=\"option-text\">\n                            <h4 className=\"option-header\">Space to comma delimiter</h4>\n                            <p className=\"paragraphDesc\">This option change space separated parameters in <i>gradientTransform</i> attributes to comma separated\n                                because <i>WinCC Unified</i> don't \"understand\" it and breaks it.</p>\n                        </div>\n                        <div className=\"option-text\">\n                            <h4 className=\"option-header\">Delete <i>href</i> and <i>xlink:href</i> in gradients</h4>\n                            <p className=\"paragraphDesc\">Some gradients can link to other gradients. And WinCC doesn't \"understand\" such gradients. and displays it as black. Thus these attributes must be removed to display correctly.</p>\n                        </div>\n                        <div className=\"option-text\">\n                            <h4 className=\"option-header\">Move Gradients to \"defs\"</h4>\n                            <p className=\"paragraphDesc\">Moving all gradients in document to <i>defs</i> element.</p>\n                        </div>\n\n                        <div className=\"option-text\">\n                            <h4 className=\"option-header\">Add Flip interface</h4>\n                            <p className=\"paragraphDesc\">Optionally you can add a flip property to mirror the widget horizontally.</p>\n                        </div>\n\n                        <div className=\"option-text\">\n                            <h4 className=\"option-header\">Convert Shape to Path</h4>\n                            <p className=\"paragraphDesc\">Optionally you can convert all shapes like (rectangle, circle ellipse, etc.) to path element.</p>\n                        </div>\n\n                        <div className=\"option-text\">\n                            <h4 className=\"option-header\">Convert Poly to Path</h4>\n                            <p className=\"paragraphDesc\">WinCC doesn't \"understand\" polyline and polygon, so by default it will be converted to path element.</p>\n                        </div>\n\n                        <div className=\"option-text\">\n                            <h4 className=\"option-header\">Convert colors from rgb() to #rrggbb, from #rrggbb to #rgb</h4>\n                            <p className=\"paragraphDesc\">Optionally you can unify colors to one type.</p>\n                        </div>\n\n                        <div className=\"option-text\">\n                            <h4 className=\"option-header\">Remove Width and Height</h4>\n                            <p className=\"paragraphDesc\">Remove from svg attributes width and height for better display in WinCC.</p>\n                        </div>\n\n                        <div className=\"option-text\">\n                            <h4 className=\"option-header\">Attach bgColor to BasicColor</h4>\n                            <p className=\"paragraphDesc\">You can specify the ids of the elements you want to change the color from the WinCC poperties. By default, the application searches for all IDs with the name <i>bgColor</i> and binds the fill attribute of svg element to the property with name BasicColor. All ids that have <i>bgColor</i> in the name will be bind to BasicColor. Separated by commas, you can specify several ID names to which you want to assign color change properties. For example, the string <i>bgColor,AlternateColor,AnotherColor</i> will result in the creation of three property fields <i>BasicColor</i>, <i>AlternateColor1</i>, <i>AlternateColor2</i>. If the elements with the specified IDs are not found in the svg document, then the property field associated with it will not be added.</p>\n                        </div>\n                        <div className=\"option-text\">\n                            <h4 className=\"option-header\">Delete user defined attributes</h4>\n                            <p className=\"paragraphDesc\">Optionaly you can delete from svg attributes what you want. Because some vector editors can add there custom attributes. And WinCC will throw the error if find it.</p>\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default SvghmiPreferences;\n","import { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport Navbar from '../navBar/navBar';\nimport AppInfo from '../app-info/app-info';\nimport Dropfiles from '../dropfiles/dropfiles';\nimport SvghmiPreferences from '../svghmi-preferences/svghmi-preferences';\n\nimport { API_SERVER, CONFIG_DEFAULT } from './../../config/constant';\n\nimport '../app/baner.css';\n\n\nclass Main extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            clientId: uuidv4().split('-').join(''),\n            downloadId: '',\n            files: [],\n            optimizeConf: CONFIG_DEFAULT,\n            optimized: false,\n            uploaded: false,\n            loader: false,\n            error: false,\n        }\n    }\n\n    async componentDidMount() {\n        try {\n            const res = await fetch('https://geolocation-db.com/json/');\n            const data = await res.json();\n            await fetch(`${API_SERVER}/users/user_from`, {\n                method: 'POST',\n                mode: 'cors',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(data),\n            })\n        } catch (Err) {\n            console.log(Err)\n        }\n    }\n\n    setFiles = (files) => {\n        this.setState({ files });\n    }\n\n    optimizeFiles = async (conf) => {\n        this.setState({\n            files: [],\n            loader: true,\n        });\n        // remove empty bgColor ids\n        const ids = this.state.optimizeConf.optimization.bgColorId.filter((elem) => elem !== '');\n        const { optimizeConf } = this.state;\n        optimizeConf.optimization.bgColorId = ids;\n        if (ids.length === 1 && ids[0] === '') {\n            optimizeConf.optimization.connectBgColor = false;\n        }\n        const options = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(optimizeConf),\n        };\n\n        try {\n            const response = await fetch(`${API_SERVER}/convertor/optimize/${this.state.clientId}`, options);\n            await response.json()\n            if (response.status) {\n                this.setState((prevState) => ({\n                    optimized: true,\n                    uploaded: false,\n                    downloadId: prevState.clientId,\n                    clientId: uuidv4().split('-').join(''),\n                    loader: false,\n                    error: false,\n                }));\n            }\n        } catch (Err) {\n            console.error('Something went wrong...');\n            this.setState((prevState) => ({\n                optimized: false,\n                uploaded: false,\n                downloadId: prevState.clientId,\n                clientId: uuidv4().split('-').join(''),\n                loader: false,\n                error: true,\n            }));\n        }\n    }\n\n    onConfigChanged = (section, id, value) => {\n        if (section === 'optimization') {\n            this.setState((prev) => {\n                const newConf = { ...prev.optimizeConf };\n                newConf[section][id] = value;\n                return { optimizeConf: newConf };\n            });\n        }\n        if (section === 'svgo') {\n            if (id === 'removeAttrs') {\n                this.setState((prev) => {\n                    let newConf = { ...prev.optimizeConf };\n                    newConf.svgo = newConf.svgo.map((elem) => {\n                        if (elem.name === 'removeAttrs') {\n                            return {\n                                name: 'removeAttrs',\n                                params: {\n                                    attrs: `(${value})`,\n                                },\n                            };\n                        }\n                        return elem;\n                    })\n                    newConf.svgo = newConf.svgo.filter(elem => elem !== id);\n                    return { optimizeConf: newConf };\n                });\n                return;\n            }\n            this.setState((prev) => {\n                let newConf = { ...prev.optimizeConf };\n                if (newConf.svgo.includes(id)) {\n                    newConf.svgo = newConf.svgo.filter(elem => elem !== id);\n                } else {\n                    newConf.svgo.push(id);\n                }\n                return { optimizeConf: newConf };\n            });\n        }\n    }\n\n    render() {\n        return (\n            <>\n                <Navbar />\n                <header className=\"color-full clear-fix\">\n                    <div className=\"text_color_full block3\">\n                        SVG to <span className='svghmi'>SVGHMI</span>\n                    </div>\n                </header>\n                <AppInfo />\n                <Dropfiles\n                    files={this.state.files}\n                    setFiles={this.setFiles}\n                    onUploaded={() => (this.setState({ optimized: false, uploaded: true }))}\n                    id={this.state.clientId} />\n                <SvghmiPreferences\n                    error={this.state.error}\n                    onOptimize={this.optimizeFiles}\n                    downloadId={this.state.downloadId}\n                    loader={this.state.loader}\n                    uploaded={this.state.uploaded}\n                    optimized={this.state.optimized}\n                    config={this.state.optimizeConf}\n                    onConfigChanged={this.onConfigChanged} />\n            </>\n        );\n    }\n}\n\nexport default Main;\n","import { Component, useState } from 'react';\nimport { useNavigate } from \"react-router-dom\";\nimport { useDispatch, useSelector } from 'react-redux'\nimport { registerAction, loginAction } from '../../store/actions/auth';\nimport './loginComponent.css';\n\nconst mode = 'login';\n\nfunction LoginForm(props) {\n    const { message } = useSelector(state => state.message);\n    const [ login, setLogin ] = useState({\n        email_signup: '',\n        password: '',\n        fullname: '',\n        email: '',\n        createpassword: '',\n        repeatpassword: '',\n    });\n    \n    const navigate = useNavigate();\n    const dispatch = useDispatch();\n  \n    // Validation functions\n    const isValidEmail = (email) => {\n      return /\\S+@\\S+\\.\\S+/.test(email);\n    }\n\n    const isPassIdentical = () =>  {\n        return login.createpassword === login.repeatpassword;\n    }\n\n    const isLoginFormValid = () => {\n        if (isValidEmail(login.email) && login.password && login.password !== '') {\n            return true;\n        }\n        return false;\n    }\n\n    const isSignupFormValid = () => {\n        if (isValidEmail(login.email_signup) && \n        login.fullname &&\n        isPassIdentical()) {\n            return true;\n        }\n        return false;\n    }\n\n    // Save credentials in state\n    const onHandleChange = (e) => {\n        const { id, value } = e.target;\n        setLogin({...login, \n            [id]: value,\n        })\n    }\n\n    const onForgot = () => {\n        navigate(`/forgot_password`);\n    }\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n        if (props.mode === 'signup' && isSignupFormValid()) {\n            dispatch(registerAction(\n                login.fullname,\n                login.email_signup,\n                login.createpassword))\n            .then(() => {\n                navigate(`/email_sent`);\n            })\n            .catch(() => {\n                console.error('something goes wrong...');\n            });\n        } else {\n            dispatch(loginAction(login.email, login.password))\n            .then(() => {\n                navigate('/');\n            })\n            .catch(() => {\n                setLogin({...login, \n                    email: '',\n                    password: '',\n                });\n            });\n        }\n    }\n    const emailSignUpClass = isValidEmail(login.email_signup) ? 'form-group__input' : 'form-group__input error__input';\n    const emailLoginClass = isValidEmail(login.email) ? 'form-group__input' : 'form-group__input error__input';\n    let submitClass = 'buttonLogin button-login--primary full-width';\n    if (props.mode === 'signup' && !isSignupFormValid()) {\n        submitClass += ' button-login-disabled';\n    } else if (props.mode === 'login' && !isLoginFormValid()) {\n        submitClass += ' button-login-disabled';\n    }\n\n    const repeatClass = isPassIdentical() ? 'form-group__input' : 'form-group__input error__input';\n    const errorMessage = message ? <h5 className=\"login-message\">{message}</h5> : null;\n\n    return (\n        <form onSubmit={onSubmit}>\n            <div className=\"form-block__input-wrapper\">\n                <div className=\"form-group form-group--login\">                  \n                    <input className={emailLoginClass} type=\"text\" id=\"email\" label=\"email\" disabled={props.mode !== 'login'} value={login.email} onChange={onHandleChange} placeholder='email'/>\n                    <input className=\"form-group__input\" type=\"password\" id=\"password\" label=\"password\" disabled={props.mode !== 'login'} value={login.password} onChange={onHandleChange} placeholder='password' />\n                </div>\n                <div className=\"form-group form-group--signup\">\n                    <input className=\"form-group__input\" type=\"text\" id=\"fullname\" label=\"full name\" disabled={props.mode !== 'signup'} value={login.fullname} onChange={onHandleChange} placeholder='full name' />\n                    <input className={emailSignUpClass} type=\"email\" id=\"email_signup\" label=\"email\" disabled={props.mode !== 'signup'} value={login.email_signup} onChange={onHandleChange} placeholder='email' />\n                    <input className=\"form-group__input\" type=\"password\" id=\"createpassword\" label=\"password\" disabled={props.mode !== 'signup'} value={login.createpassword} onChange={onHandleChange} placeholder='password' />\n                    <input className={repeatClass} type=\"password\" id=\"repeatpassword\" label=\"repeat password\" disabled={props.mode !== 'signup'} value={login.repeatpassword} onChange={onHandleChange} placeholder='repeat password' />\n                </div>\n            </div>\n            <button className={submitClass} type=\"submit\">{props.mode === 'login' ? 'Log In' : 'Sign Up'}</button>\n            { errorMessage }\n            { props.mode === 'login' ? <button className=\"button-forgot\" onClick={onForgot} >Forgot password?</button> : null }\n        </form>\n    )\n}\n\nclass LoginComponent extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            mode: this.props.mode,\n        }\n    }\n\n    toggleMode() {\n        var newMode = this.state.mode === 'login' ? 'signup' : 'login';\n        this.setState({ mode: newMode});\n    }\n\n    render() {\n        return (\n            <div className={`login-form-app login-form-app--is-${mode}`}>\n                <div className={`form-block-wrapper form-block-wrapper--is-${this.state.mode}`} ></div>\n                <section className={`form-block form-block--is-${this.state.mode}`}>\n                    <header className=\"form-block__header\">\n                        <h1>{this.state.mode === 'login' ? 'Welcome back!' : 'Sign up'}</h1>\n                        <div className=\"form-block__toggle-block\">\n                            <span>{this.state.mode === 'login' ? 'Don\\'t' : 'Already'} have an account? Click here &#8594;</span>\n                            <input className=\"in-log-checkbox\" id=\"form-toggler\" type=\"checkbox\" onClick={this.toggleMode.bind(this)} />\n                            <label htmlFor=\"form-toggler\"></label>\n                        </div>\n                    </header>\n                    <LoginForm mode={this.state.mode}/>\n                </section>\n            </div>\n        )\n    }\n}\n\nexport default LoginComponent;\n","import LoginComponent from '../loginComponent/loginComponent';\n\nconst Login = (props) => {\n    return (\n        <LoginComponent\n            mode={props.mode}\n        />\n    )\n}\n\nexport default Login;\n","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useNavigate } from \"react-router-dom\";\n\nimport './profileComponent.css';\n\nfunction ProfileComponent() {\n    const { email, name, isLoggedIn, level } = useSelector(state => state.auth);\n    const navigate = useNavigate();\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        if (!isLoggedIn) {\n            navigate('/');\n        }\n    })\n\n    return (\n        <div className=\"profile-wrapper\">\n            <h1>Email = {email}</h1>\n            <h1>Name = {name}</h1>\n        </div>\n    );\n}\n\nexport default ProfileComponent;\n","import Navbar from '../navBar/navBar';\nimport ProfileComponent from '../profileComponent/profileComponent';\n\nfunction ProfilePage() {\n    \n    return (\n        <>\n            <Navbar />\n            <ProfileComponent />\n        </>\n    )\n}\n\nexport default ProfilePage;\n","import './messageTemplate.css';\n\nfunction MessageTemplate(props) {\n    const messageClass = props.is404 ? 'error' : 'message-template-wrap';\n    return (\n        <>\n            <div className=\"moon\"></div>\n            <div className=\"moon__crater moon__crater1\"></div>\n            <div className=\"moon__crater moon__crater2\"></div>\n            <div className=\"moon__crater moon__crater3\"></div>\n\n            <div className=\"star star1\"></div>\n            <div className=\"star star2\"></div>\n            <div className=\"star star3\"></div>\n            <div className=\"star star4\"></div>\n            <div className=\"star star5\"></div>\n\n            <div className={messageClass}>\n                {props.children}\n            </div>\n\n            <div className=\"astronaut\">\n                <div className=\"astronaut__backpack\"></div>\n                <div className=\"astronaut__body\"></div>\n                <div className=\"astronaut__body__chest\"></div>\n                <div className=\"astronaut__arm-left1\"></div>\n                <div className=\"astronaut__arm-left2\"></div>\n                <div className=\"astronaut__arm-right1\"></div>\n                <div className=\"astronaut__arm-right2\"></div>\n                <div className=\"astronaut__arm-thumb-left\"></div>\n                <div className=\"astronaut__arm-thumb-right\"></div>\n                <div className=\"astronaut__leg-left\"></div>\n                <div className=\"astronaut__leg-right\"></div>\n                <div className=\"astronaut__foot-left\"></div>\n                <div className=\"astronaut__foot-right\"></div>\n                <div className=\"astronaut__wrist-left\"></div>\n                <div className=\"astronaut__wrist-right\"></div>\n                \n                <div className=\"astronaut__cord\">\n                    <canvas id=\"cord\" height=\"500px\" width=\"500px\"></canvas>\n                </div>\n                <div className=\"astronaut__head\">\n                    <canvas id=\"visor\" width=\"60px\" height=\"60px\"></canvas>\n                    <div className=\"astronaut__head-visor-flare1\"></div>\n                    <div className=\"astronaut__head-visor-flare2\"></div>\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default MessageTemplate;","import { NavLink as Link } from \"react-router-dom\";\nimport MessageTemplate from \"../messageTemplate/messageTemplate\";\n\nimport './paymentResult.css';\n\nfunction PaymentResult(props) {\n    let iconClass = '';\n    let bgColorClass = 'payment_header';\n    let HeaderText = '';\n    if (props.type === 'success') {\n        iconClass = 'fa fa-check';\n        bgColorClass += ' payment_successed';\n        HeaderText = 'Payment Success !';\n    }\n    if (props.type === 'fail') {\n        iconClass = 'fa fa-times';\n        bgColorClass += ' payment_failed';\n        HeaderText = 'Payment Failed';\n    }\n    return (\n        <MessageTemplate>\n            <div className=\"payment\">\n            <div className={bgColorClass} >\n               <div className=\"payment_check\"><i className={iconClass} aria-hidden=\"true\"></i></div>\n            </div>\n            <div className=\"payment_content\">\n               <h1>{HeaderText}</h1>\n               <p>Lorem ipsum, or lipsum as it is sometimes known, is dummy text used in laying out print, graphic or web designs. </p>\n               <Link to=\"/\">Go to Home</Link>\n            </div>\n         </div>\n        </MessageTemplate>\n    )\n}\n\nexport default PaymentResult;","import { useNavigate } from \"react-router-dom\";\nimport MessageTemplate from \"../messageTemplate/messageTemplate\";\nimport './notFoundPage.css';\n\nfunction NotFoundPage(props) {\n    const navigate = useNavigate();\n    const onClick = () => {\n        navigate('/');\n    }\n\n    return (\n        <MessageTemplate is404>\n            <div className=\"error__title\">404</div>\n            <div className=\"error__subtitle\">Hmmm...</div>\n            <div className=\"error__description\">It looks like one of the  developers fell asleep</div>\n            <button className=\"error__button error__button--active\" onClick={onClick}>HOME</button>\n        </MessageTemplate>\n    )\n}\n\nexport default NotFoundPage;\n","import './pricingElement.css';\n\nfunction PricingElement(props) {\n    return (\n        <div className=\"pricing-table\">\n            <div className=\"pricing-table-header\">\n                <h1>{props.header}</h1>\n            </div>\n\n            <div className=\"pricing-table-content\">\n                <ul>\n                    <li><strong>75GB</strong> Disk Space</li>\n                    <li><strong>50</strong> Email Addresses</li>\n                    <li><strong>20</strong> Subdomains</li>\n                    <li><strong>50</strong> MySQL Databases</li>\n                </ul>\n            </div>\n\n            <div className=\"pricing-table-footer\">\n                <h2><sup>$</sup>{props.price}</h2>\n                <a href=\"https://cryptopay.com\">Purchase</a>\n            </div>\n        </div>\n    )\n}\n\nexport default PricingElement;\n","import PricingElement from '../pricingElement/pricingElement';\n\nimport './pricingTable.css';\n\nfunction PricingTable() {\n    return (\n        <div className=\"pricing-main-container\" >\n            <div className=\"pricing-container\">\n                <PricingElement header=\"1 Month\" price=\"10\" />\n                <PricingElement header=\"3 Month\" price=\"30\" />\n                <PricingElement header=\"6 Month\" price=\"55\" />\n            </div>\n        </div>\n    )\n}\n\nexport default PricingTable;\n","import { NavLink as Link, useParams } from \"react-router-dom\";\nimport MessageTemplate from \"../messageTemplate/messageTemplate\";\n\nimport './commonMessage.css';\n\nfunction CommonMessage(props) {\n    const params = useParams();\n\n    return (\n        <MessageTemplate>\n            <div className=\"message_container\">\n            <div className=\"message_header\" >\n               <div className=\"message_check\"><i className=\"fa fa-check\" aria-hidden=\"true\"></i></div>\n            </div>\n            <div className=\"message_content\">\n                {params.email ? <h5>{params.email}</h5> : null}\n                <h1>{props.header}</h1>\n                <p>{props.message}</p>\n                <Link to=\"/\">Go to Home</Link>\n            </div>\n         </div>\n        </MessageTemplate>\n    )\n}\n\nexport default CommonMessage;","import { useNavigate } from \"react-router-dom\";\nimport { useState } from 'react';\nimport MessageTemplate from \"../messageTemplate/messageTemplate\";\nimport { API_SERVER } from \"../../config/constant\";\n\nimport './forgotPassword.css';\n\nfunction ForgotPassword() {\n    const [email, setEmail] = useState('');\n    const [errorMsg, setErrorMsg] = useState('');\n\n    const navigate = useNavigate();\n\n    // Validation functions\n    const isValidEmail = (email) => {\n        return /\\S+@\\S+\\.\\S+/.test(email);\n        }\n\n    // Save credentials in state\n    const onChange = (e) => {\n        const { value } = e.target;\n        setEmail(value);\n    }\n\n    const requestReset = (email) => {\n        return fetch(`${API_SERVER}/users/reset_password`, {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              email,\n            }),\n          })\n          .then((response) => (response.json()))\n          .then((data) => {\n            if (data.error) {\n              throw new Error(\"Not 2xx response\", {cause: data});\n            }\n            return data;\n          });\n    }\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n        requestReset(email)\n        .then(() => {\n            navigate(`/reset_email_sent/${email}`);\n        })\n        .catch((error) => {\n            const message = (error.cause && error.cause.msg) ?\n                error.cause.msg : '';\n            setErrorMsg(message);\n            setEmail('');\n        });\n    }\n    let submitClass = 'buttonLogin button-login--primary full-width';\n    if (!isValidEmail(email)) submitClass += ' button-login-disabled';\n\n    return (\n        <MessageTemplate>\n            <section className={`form-block form-block--is-login`}>\n                <form onSubmit={onSubmit}>\n                    <h3 className=\"form-block__header\" >Forgot your password?</h3>\n                    <div className=\"form-group form-group--login\">                        \n                        <input className=\"form-group__input\" type=\"text\" id=\"email\" label=\"email\" value={email} onChange={onChange} placeholder='name@domain.com'/>\n                    </div>\n                    <button className={submitClass} type=\"submit\">Reset Password</button>\n                </form>\n            </section>\n            {errorMsg ? <h5 className=\"login-message\" >{errorMsg}</h5> : null}\n        </MessageTemplate>\n    )\n}\n\n\nexport default ForgotPassword;\n","import { useParams, useNavigate } from 'react-router-dom';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { logoutAction } from \"../../store/actions/auth\";\n\nimport MessageTemplate from \"../messageTemplate/messageTemplate\";\nimport { API_SERVER } from '../../config/constant';\n\nimport './resetPasswordForm.css';\n\nfunction ResetPasswordForm() {\n    const params = useParams();\n    const [errorMsg, setErrorMsg] = useState('');\n    const [pass1, setPass1] = useState('');\n    const [pass2, setPass2] = useState('');\n\n    const navigate = useNavigate();\n    const dispatch = useDispatch();\n\n    // Save credentials in state\n    const onChange1 = (e) => {\n        const { value } = e.target;\n        setPass1(value);\n    }\n    // Save credentials in state\n    const onChange2 = (e) => {\n        const { value } = e.target;\n        setPass2(value);\n    }\n\n    const requestSetPassword = () => {\n        return fetch(`${API_SERVER}/users/reset_password/${params.token}`, {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              id: params.id,\n              password: pass1,\n            }),\n          })\n          .then((response) => (response.json()))\n          .then((data) => {\n            if (data.error) {\n              throw new Error(\"Not 2xx response\", {cause: data});\n            }\n            return data;\n          });\n    }\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n        requestSetPassword()\n        .then(() => {\n            dispatch(logoutAction());\n            navigate(`/reset_password_successfull`);\n        })\n        .catch((error) => {\n            const message = (error.cause && error.cause.msg) ?\n                error.cause.msg : '';\n            console.log(message)\n            if (message === '') setErrorMsg('something goes wrong');\n            setErrorMsg(message);\n            setPass1('');\n            setPass2('');\n        });\n    }\n\n    const isPassIdentical = () =>  {\n        return pass1 === pass2;\n    }\n\n    const repeatClass = isPassIdentical() ? 'form-group__input' : 'form-group__input error__input';\n\n    return (\n        <MessageTemplate>\n            <section className={`form-block form-block--is-login`}>\n                <form onSubmit={onSubmit}>\n                    <h3 className=\"form-block__header\" >Set new password</h3>\n                    <div className=\"form-group form-group--login\">                        \n                        <input className=\"form-group__input\" type=\"password\" id=\"password\" label=\"password\" value={pass1} onChange={onChange1} placeholder='password' />\n                        <input className={repeatClass} type=\"password\" id=\"repeatpassword\" label=\"repeat password\" value={pass2} onChange={onChange2} placeholder='repeat password' />\n                    </div>\n                    <button className=\"buttonLogin button-login--primary\" type=\"submit\">Set Password</button>\n                </form>\n            </section>\n            {errorMsg ? <h5 className=\"login-message\" >{errorMsg}</h5> : null}\n        </MessageTemplate>\n    )\n}\n\nexport default ResetPasswordForm;\n","import { useState, useEffect } from \"react\";\nimport { NavLink as Link, useParams } from \"react-router-dom\";\nimport MessageTemplate from \"../messageTemplate/messageTemplate\";\nimport { API_SERVER } from '../../config/constant';\n\nfunction ConfirmationPage(props) {\n    const params = useParams();\n    const [error, setError] = useState('');\n\n    useEffect(() => {\n        fetch(`${API_SERVER}/users/email/confirm/${params.id}`, {})\n        .then((res) => res.json())\n        .then((data) => {\n            console.log(data)\n            if (data.error) {\n                setError(data.msg);\n            } else {\n                setError('');\n            }\n        })\n        .catch((err) => {\n            setError('Network error');\n        })\n    });\n\n\n    return (\n         <MessageTemplate>\n            <div className=\"message_container\">\n                <div className=\"message_header\" >\n                    <div className=\"message_check\"><i className=\"fa fa-check\" aria-hidden=\"true\"></i></div>\n                </div>\n                <div className=\"message_content\">\n                    <h1>{params.email}</h1>\n                    {!error ? <p><p>Your email successfully confirmed!</p></p> : null}\n                    {error ? <p>{error}</p> : null}\n                    <Link to=\"/\">Go to Home</Link>\n                </div>\n            </div> \n         </MessageTemplate>\n    )\n}\n\nexport default ConfirmationPage;\n","import { Routes, Route } from 'react-router-dom';\nimport Main from '../pages/main';\nimport Login from '../pages/login';\nimport ProfilePage from '../pages/profile';\nimport PaymentResult from '../paymentResult/paymentResult';\nimport NotFoundPage from '../notFoundPage/notFoundPage';\nimport PricingTable from '../pricingTable/pricingTable';\nimport CommonMessage from '../commonMessage/commonMessage';\nimport ForgotPassword from '../forgotPassword/forgotPassword';\nimport ResetPasswordForm from '../resetPasswordForm/resetPasswordForm';\nimport ConfirmationPage from '../pages/confirmationPage';\n\nimport './app.css';\n\n\nfunction App() {\n    return (\n        <div className=\"app\">\n            <Routes>\n                <Route exact path=\"/\" element={<Main />} />\n                <Route exact path=\"/login\" element={<Login mode=\"login\" />} />\n                <Route exact path=\"/signup\" element={<Login mode=\"signup\" />} />\n                <Route exact path=\"/profile\" element={<ProfilePage />} />\n                <Route exact path=\"/success_purchase\" element={<PaymentResult type=\"success\" />} />\n                <Route exact path=\"/failed_purchase\" element={<PaymentResult type=\"fail\" />} />\n                <Route exact path=\"/test\" element={<PricingTable />} />\n                <Route exact path=\"/forgot_password\" element={<ForgotPassword />} />\n                <Route exact path=\"/reset_password/:token/:id\" element={<ResetPasswordForm />} />\n                <Route exact path=\"/reset_password1\" element={<ResetPasswordForm />} />\n                <Route exact path=\"/email_sent\" element={<CommonMessage header=\"We sent you confirmation email.\" \n                    message=\"Please follow the instraction in email\"/>} />\n                <Route exact path=\"/signup_confirm/:email/:id\" element={<ConfirmationPage />} />\n                <Route exact path=\"/reset_email_sent/:email\" element={<CommonMessage header=\"We sent you reset link.\" \n                    message=\"Please follow the instraction in email\"/>} />\n                <Route exact path=\"/reset_password_successfull\" element={<CommonMessage header=\"You set new password!\" \n                    message=\"Great, you set new password, and can continue use our service\"/>} />\n                <Route path=\"*\" element={<NotFoundPage />} />\n            </Routes>\n        </div>\n    );\n}\n\nexport default App;\n","import {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n} from \"../actions/types\";\n\nconst name = JSON.parse(localStorage.getItem('name'));\nconst email = JSON.parse(localStorage.getItem('email'));\nconst token = JSON.parse(localStorage.getItem('token'));\nconst expires_in = JSON.parse(localStorage.getItem('expires_in'));\nconst level = JSON.parse(localStorage.getItem('level'));\n\nconst initialState = token\n  ? { isLoggedIn: true, name, email, token, expires_in, level }\n  : { isLoggedIn: false, name: null, email: null, token: null, expires_in: null, level: null };\n\nexport default function auth(state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case REGISTER_SUCCESS:\n      return {\n        ...state,\n        isLoggedIn: false,\n      };\n    case REGISTER_FAIL:\n      return {\n        ...state,\n        isLoggedIn: false,\n      };\n    case LOGIN_SUCCESS:\n      return {\n        ...state,\n        isLoggedIn: true,\n        name: payload.name,\n        email: payload.email,\n        token: payload.token,\n        expires_in: payload.expires_in,\n        level: payload.level,\n      };\n    case LOGIN_FAIL:\n      return {\n        ...state,\n        isLoggedIn: false,\n        name: null,\n        email: null,\n        token: null,\n        expires_in: null,\n        level: null,\n      };\n    case LOGOUT:\n      return {\n        ...state,\n        isLoggedIn: false,\n        name: null,\n        email: null,\n        token: null,\n        expires_in: null,\n        level: null,\n      };\n    default:\n      return state;\n  }\n}\n","import { SET_MESSAGE, CLEAR_MESSAGE } from \"../actions/types\";\n\nconst initialState = {\n  message: '',\n};\n\nexport default function message(state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case SET_MESSAGE:\n      return { message: payload };\n\n    case CLEAR_MESSAGE:\n      return { message: \"\" };\n\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport auth from \"../reducers/auth\";\nimport message from \"../reducers/message\";\n\nexport default combineReducers({\n  auth,\n  message,\n});\n","import { createStore, applyMiddleware } from 'redux'\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst middleware = [thunk];\n\nconst store = createStore(rootReducer, applyMiddleware(...middleware));\n\nexport { store };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './components/app/app';\n// import { BrowserRouter as Router } from 'react-router-dom';\nimport { HashRouter as Router } from 'react-router-dom';\nimport { BASE_TITLE } from './config/constant';\nimport './index.css';\nimport { store } from './store';\n\n\ndocument.title = `${BASE_TITLE} | Professional Engineering Tool for WinCC Unified widgets`;\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router>\n        <App />\n      </Router>\n    </Provider>\n  </React.StrictMode >,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}