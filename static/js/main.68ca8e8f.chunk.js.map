{"version":3,"sources":["config/constant.js","hooks/useGaTracker.js","store/actions/types.js","services/auth.service.js","store/actions/auth.js","components/navBar/navBar.js","components/footer/footer.js","components/app-info/app-info.js","components/controls/controls.js","components/dropfiles/dropfiles.js","components/checkBoxItem/checkBoxItem.js","components/inputFieldItem/inputFieldItem.js","components/error/error.js","components/svghmi-preferences/svghmi-preferences.js","components/pricingElement/pricingElement.js","components/pricingTable/pricingTable.js","components/loader/loader.js","services/payment.service.js","components/payment/payment.js","components/pages/main.js","components/loginComponent/loginComponent.js","components/pages/login.js","components/profileComponent/profileComponent.js","components/pages/profile.js","components/messageTemplate/messageTemplate.js","components/paymentResult/paymentResult.js","components/notFoundPage/notFoundPage.js","components/commonMessage/commonMessage.js","components/forgotPassword/forgotPassword.js","components/resetPasswordForm/resetPasswordForm.js","components/pages/confirmationPage.js","components/examplesComponent/examplesComponent.js","components/pages/examplesPage.js","components/app/app.js","store/reducers/auth.js","store/reducers/message.js","store/reducers/index.js","store/index.js","index.js"],"names":["API_SERVER","API_CRYPTOCLOUD","AUTH_CRYPTOCLOUD","CONFIG_DEFAULT","svgo","name","params","attrs","optimization","delRefs","moveGradients","addDefaults","spaceToComma","connectBgColor","polyToPath","bgColorId","addFlipInterface","pretify","useGaTracker","location","useLocation","useState","initialized","setInitialized","useEffect","window","href","includes","ReactGA","initialize","pageview","pathname","search","REGISTER_SUCCESS","REGISTER_FAIL","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","SET_MESSAGE","CLEAR_MESSAGE","changePassword","password","token","fetch","method","headers","body","JSON","stringify","res","json","data","console","error","changeEmail","email","localStorage","setItem","getPremiumDate","registerAction","username","dispatch","then","response","Error","cause","register","type","payload","Promise","resolve","message","msg","reject","loginAction","access_token","id","user","level","expires_in","login","user_id","changeNameAction","changeName","logoutAction","removeItem","Navbar","useSelector","state","auth","isLoggedIn","useDispatch","navigate","useNavigate","SignUp","className","to","LogOut","onClick","activestyle","color","Footer","target","rel","AppInfo","align","Controls","props","downloadId","optimized","onOptimize","uploaded","loader","onDownload","element","document","createElement","download","appendChild","click","Err","event","category","action","label","spanClass","spanText","btnClass","Dropfiles","files","setFiles","onUploaded","onClear","onDelete","newFiles","filter","x","length","log","accept","uploadOnDrop","onChange","incommingFiles","value","maxFiles","maxFileSize","url","onUploadFinish","map","file","preview","CheckBoxItem","checked","section","style","display","htmlFor","width","height","viewBox","points","InputFieldItem","labels","header","e","replace","split","text","SvghmiPreferences","config","onConfigChanged","ShowColorControl","removeIds","forEach","elem","str","slice","delGradientTransform","PricingElement","month","price","onPurchase","PricingTable","Loader","createInvoice","amount","currency","shop_id","order_id","saveInvoice","period","invoice","getActiveInvoice","Payment","setLoader","setError","ready","setReady","link","setLink","status","pay_url","getLastInvoice","onNewInvoice","LinkElement","ErrorMessage","Main","uuidv4","join","clientId","setClientId","setDownloadId","optimizeConf","setOptimizeConf","setOptimized","setUploaded","optimizeFiles","conf","ids","options","prev","newConf","LoginForm","email_signup","fullname","createpassword","repeatpassword","setLogin","isValidEmail","test","isPassIdentical","isSignupFormValid","onHandleChange","emailSignUpClass","emailLoginClass","submitClass","mode","repeatClass","errorMessage","onSubmit","preventDefault","catch","disabled","placeholder","LoginComponent","newMode","this","setState","toggleMode","bind","Component","Login","ProfileComponent","userEmail","setUserEmail","userName","setUserName","pass1","setPass1","pass2","setPass2","emailMsg","setEmailMsg","nameMsg","setNameMsg","passMsg","setPassMsg","premium","setPremium","fetchVal","premium_expired","onSubmitEmail","onSubmitPassword","passDisabled","nameDisabled","emailDisabled","ExpiresOn","src","alt","ProfilePage","MessageTemplate","messageClass","is404","children","PaymentResult","iconClass","bgColorClass","HeaderText","NotFoundPage","CommonMessage","useParams","ForgotPassword","setEmail","errorMsg","setErrorMsg","requestReset","ResetPasswordForm","ConfirmationPage","err","ExamplesComponent","ExamplesPage","App","exact","path","parse","getItem","initialState","combineReducers","middleware","thunk","store","createStore","rootReducer","applyMiddleware","title","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.68ca8e8f.chunk.js","sourcesContent":["const local_api_url = 'http://localhost:2800/api';\nconst global_api_url = 'https://server.cirillsokolov.com:2800/api';\nconst env = process.env.NODE_ENV;\nexport const GA_ID = 'G-K7FGW03X55';\nexport const BASE_TITLE = 'SVG to SVGHMI';\nexport const API_SERVER = env === 'production' ? global_api_url : local_api_url;\nexport const API_CRYPTOCLOUD = 'https://api.cryptocloud.plus/v1';\nexport const AUTH_CRYPTOCLOUD = 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpZCI6MjE0NCwiZXhwIjo4ODA2NTkxNDc3Mn0.KeYgruMO8EMj9Q_vt-jw469qtHo6OozBg8kxs1RzHHY';\nexport const SHOP_ID = 'W5iMrW2Dlt3zScY9';\nexport const CONFIG_DEFAULT = {\n    svgo: [\n        'convertStyleToAttrs',\n        'removeUnusedNS',\n        'convertColors',\n        'removeEditorsNSData',\n        'removeDoctype',\n        'removeDimensions',\n        'removeMetadata',\n        'sortDefsChildren',\n        'sortAttrs',\n        'moveGroupAttrsToElems',\n        'convertTransform',\n        {\n            name: 'removeAttrs',\n            params: {\n                attrs: '()',\n            },\n        },\n    ],\n    optimization: {\n        delRefs: true,\n        moveGradients: true,\n        addDefaults: true,\n        spaceToComma: true,\n        connectBgColor: true,\n        polyToPath: true,\n        bgColorId: ['bgColor'],\n        addFlipInterface: true,\n        pretify: true,\n    }\n}","import { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport ReactGA from 'react-ga4';\n\nimport { GA_ID } from '../config/constant';\n\nconst useGaTracker = () => {\n    const location = useLocation();\n    const [initialized, setInitialized] = useState(false);\n\n    useEffect(() => {\n        if (!window.location.href.includes('localhost')) {\n            ReactGA.initialize(GA_ID);\n        }\n        setInitialized(true);\n    }, []);\n\n    useEffect(() => {\n        if (initialized) {\n            ReactGA.pageview(location.pathname + location.search);\n        }\n    }, [initialized, location]);\n}\n\nexport default useGaTracker;\n","export const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\nexport const LOGOUT = \"LOGOUT\";\nexport const NAME_CHANGED = \"NAME_CHANGED\";\nexport const NAME_CHANGE_FAILED = \"NAME_CHANGE_FAILED\";\n\nexport const SET_MESSAGE = \"SET_MESSAGE\";\nexport const CLEAR_MESSAGE = \"CLEAR_MESSAGE\";\n","import { API_SERVER } from '../config/constant';\n\n\nexport const register = (name, email, password) => {\n    return fetch(`${API_SERVER}/users/register`, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n            email,\n            password,\n            name,\n        }),\n    })\n        .then((response) => (response.json()))\n        .then((data) => {\n            if (data.error) {\n                throw new Error(\"Not 2xx response\", { cause: data });\n            }\n            return data;\n        });\n};\n\nexport const login = (email, password) => {\n    return fetch(`${API_SERVER}/users/login`, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n            email,\n            password,\n        }),\n    })\n        .then((response) => (response.json()))\n        .then((data) => {\n            if (data.error) {\n                throw new Error(\"Not 2xx response\", { cause: data });\n            }\n            if (data.access_token) {\n                localStorage.setItem(\"name\", JSON.stringify(data.name));\n                localStorage.setItem(\"user_id\", JSON.stringify(data.id));\n                localStorage.setItem(\"email\", JSON.stringify(data.user));\n                localStorage.setItem(\"token\", JSON.stringify(data.access_token));\n                localStorage.setItem(\"level\", JSON.stringify(data.level));\n                localStorage.setItem(\"expires_in\", JSON.stringify(data.expires_in));\n            }\n            return data;\n        })\n};\n\nexport const changeName = (name, token) => {\n    return fetch(`${API_SERVER}/users/change_credentials/name`, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify({\n            name,\n        }),\n    })\n        .then((response) => (response.json()))\n        .then((data) => {\n            if (data.error) {\n                throw new Error(\"Not 2xx response\", { cause: data });\n            }\n            localStorage.setItem(\"name\", JSON.stringify(name));\n        })\n};\n\nexport const logout = () => {\n    localStorage.removeItem(\"name\");\n    localStorage.removeItem(\"email\");\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"user_id\");\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"expires_in\");\n};\n\nexport const changePassword = async (password, token) => {\n    try {\n        const res = await fetch(`${API_SERVER}/users/change_credentials/password`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Token ${token}`,\n            },\n            body: JSON.stringify({\n                password,\n            }),\n        });\n        const data = await res.json();\n        return data;\n    } catch (err) {\n        console.error(err);\n        return null;\n    }\n}\n\nexport const changeEmail = async (email, token) => {\n    try {\n        const res = await fetch(`${API_SERVER}/users/change_credentials/email`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Token ${token}`,\n            },\n            body: JSON.stringify({\n                email,\n            }),\n        });\n        const data = await res.json();\n        localStorage.setItem(\"email\", JSON.stringify(email));\n        return data;\n    } catch (err) {\n        console.error(err);\n        return null;\n    }\n}\n\nexport const getPremiumDate = async (token) => {\n    try {\n        const res = await fetch(`${API_SERVER}/users/premium/info`, {\n            headers: {\n                'Authorization': `Token ${token}`,\n            },\n        });\n        const data = await res.json();\n        return data;\n    } catch (err) {\n        console.error(err);\n        return null;\n    }\n}","import {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n  NAME_CHANGED,\n  NAME_CHANGE_FAILED,\n  SET_MESSAGE,\n} from \"./types\";\n\nimport { register, login, logout, changeName } from '../../services/auth.service';\nexport const registerAction = (username, email, password) => (dispatch) => {\n  return register(username, email, password).then(\n    (response) => {\n      dispatch({\n        type: REGISTER_SUCCESS,\n      });\n\n      dispatch({\n        type: SET_MESSAGE,\n        payload: 'Message from nodejs',\n        // payload: response.data.message,\n      });\n\n      return Promise.resolve();\n    },\n    (error) => {\n      const message = (error.cause && error.cause.msg) ?\n      error.cause.msg : '';\n\n      dispatch({\n        type: REGISTER_FAIL,\n      });\n\n      dispatch({\n        type: SET_MESSAGE,\n        payload: message,\n      });\n\n      return Promise.reject();\n    }\n  );\n};\n\nexport const loginAction = (username, password) => (dispatch) => {\n  return login(username, password).then(\n    (data) => {\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: {\n          name: data.name,\n          user_id: data.id,\n          email: data.user,\n          level: data.level,\n          token: data.access_token,\n          expires_in: data.expires_in,\n        },\n      });\n      return Promise.resolve();\n    },\n    (error) => {\n      const message = (error.cause && error.cause.msg) ?\n      error.cause.msg : '';\n      dispatch({\n        type: LOGIN_FAIL,\n      });\n\n      dispatch({\n        type: SET_MESSAGE,\n        payload: message,\n      });\n\n      return Promise.reject();\n    }\n  );\n};\n\nexport const changeNameAction = (name, token) => (dispatch) => {\n  return changeName(name, token).then(\n    (data) => {\n      dispatch({\n        type: NAME_CHANGED,\n        payload: {\n          name,\n        },\n      });\n      return Promise.resolve();\n    },\n    (error) => {\n      const message = (error.cause && error.cause.msg) ?\n      error.cause.msg : '';\n      dispatch({\n        type: NAME_CHANGE_FAILED,\n      });\n\n      dispatch({\n        type: SET_MESSAGE,\n        payload: message,\n      });\n\n      return Promise.reject();\n    }\n  );\n};\n\nexport const logoutAction = () => (dispatch) => {\n  logout();\n\n  dispatch({\n    type: LOGOUT,\n  });\n};\n","import { NavLink as Link } from \"react-router-dom\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useNavigate } from \"react-router-dom\";\nimport { logoutAction } from \"../../store/actions/auth\";\n\nimport './navBar.css'\n\nconst Navbar = () => {\n    const { name } = useSelector(state => state.auth);\n    const { isLoggedIn } = useSelector(state => state.auth);\n    \n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n\n    const SignUp  = () => (\n        <nav className=\"nav_btn\">\n            <Link className=\"nav_btn_link\" to=\"/signup\">Sign Up</Link>\n        </nav>\n    );\n    const LogOut = () => (\n        <button className=\"nav_btn nav_btn_link\" type=\"button\"\n            onClick={()=> {\n                dispatch(logoutAction());\n                navigate('/');\n            }}>\n                Log Out\n        </button>\n    );\n    return (\n        <>\n           <nav className=\"nav_block\">\n            <Link className=\"nav_logo\" to=\"/\">\n                SVGHMI\n            </Link>\n            <div className=\"nav_menu\">\n                <Link className=\"nav_link\"\n                  to={ isLoggedIn ? '/profile': '/login' }\n                  activestyle={{ color: 'black' }}\n                >\n                    {isLoggedIn ? name : 'Log In'}\n                </Link>\n                {isLoggedIn ? <LogOut /> : <SignUp />}\n            </div>\n           </nav> \n        </>\n    );\n};\nexport default Navbar;","import './footer.css';\n\nfunction Footer() {\n    return (\n        <footer className=\"footer-distributed\">\n\n            <div className=\"footer-left\">\n                <h3>SVGHMI<span>.PRO</span></h3>\n                <p className=\"footer-links\">\n                    <a href=\"/\" className=\"link-1\">Home</a>\n                    <a href=\"/\">Pricing</a>\n                    <a href=\"/\">About</a>\n                </p>\n                <p className=\"footer-company-name\">SVGHMI.PRO © 2022</p>\n            </div>\n\n            <div className=\"footer-center\">\n                <div>\n                    <i className=\" \tfas fa-exclamation\"></i>\n                    <p>Thank you!<span>If you have questions just write me</span></p>\n                </div>\n                <div>\n                    <i className=\"fa fa-envelope\"></i>\n                    <p><a href=\"mailto:cirillsokolov@proton.me\">cirillsokolov@proton.me</a></p>\n                </div>\n            </div>\n\n            <div className=\"footer-right\">\n                <p className=\"footer-company-about\">\n                    <span>About the project</span>\n                    The service is intended for engineers who want to make beautiful and dynamic Siemens WinCC Unified visualizations without spending a lot of time on it.\n                </p>\n                <div className=\"footer-icons\">\n                    <a\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        href=\"https://www.youtube.com/channel/UCRd8ITMupPNvXJ6Cu58TvdQ\">\n                            <i className=\"fab fa-youtube\"></i>\n                    </a>\n                    <a\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        href=\"https://www.linkedin.com\">\n                            <i className=\"fab fa-linkedin\"></i>\n                    </a>\n                    <a\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        href=\"https://github.com/allovaro\">\n                            <i className=\"fab fa-github\"></i>\n                    </a>\n                </div>\n            </div>\n        </footer>\n    );\n}\n\nexport default Footer;\n","import \"./app-info.css\";\n\nconst AppInfo = () => {\n    return (\n        <div className=\"app-info\">\n            <div className=\"row\">\n                <div className=\"column\">\n                    <h4>Create Widgets</h4>\n                    <p align=\"justify\">This free online widget converter \n                    lets you convert your svg images to the TIA Portal WinCC\n                    Unified dynamic widgets (SVGHMI) format. Additionally you\n                    can select optional effects to enhance the better result widget.\n                    </p></div>\n                <div className=\"column\">\n                    <h4>Gradients</h4>\n                    <p align=\"justify\">\n                    This widget converter will convert your shapes and objects to\n                    proper format for TIA Portal WinCC Unified. It will lead to the correct display\n                    of gradients automaticaly. You'll no longer see black areas instead\n                    of beautiful gradients.\n                    </p>\n                </div>\n                <div className=\"column\">\n                    <h4>Dynamic Colors</h4>\n                    <p align=\"justify\">\n                    This converter allows you to automatically specify which object's color\n                    is to be made changeable. Your widget will be managed\n                    in the same way as the TIA Portal library component.\n                    </p>\n                </div>\n            </div> \n            {/* <h1>A simple tool for creating dynamic widgets (SVGHMI)</h1>\n            <p className=\"infoBlock\">With this tool your can easily convert your SVG files to Siemens WinCC Unified format <i>SVGHMI</i> and create dynamic widgets in just a couple of steps</p>\n            <ul>\n                <li>First of all you need some svg file for convertion</li>\n                <li>Choose or Drag'n'Drop you files into field below</li>\n                <li>Push upload button</li>\n                <li>Push Convert button</li>\n                <li>And finaly download your ready zip archive</li>\n            </ul>\n            <p className=\"infoBlock\">If you want more flexibility you can tune convertion process with some options</p> */}\n        </div>\n    )\n}\n\nexport default AppInfo;","import ReactGA from 'react-ga4';\nimport { API_SERVER } from \"../../config/constant\";\n\nimport './controls.css';\n\nconst Controls = (props) => {\n    const { downloadId, optimized, onOptimize, uploaded, loader } = props;\n \n    // Create link and download zip file\n    const onDownload = async () => {\n        try {\n            const element = document.createElement(\"a\");\n            element.href = `${API_SERVER}/convertor/download/${downloadId}`;\n            element.download = 'svghmi.zip'\n            document.body.appendChild(element); // Required for this to work in FireFox\n            element.click(); // simulate link click\n        } catch (Err) {\n            console.error('Something went wrong with downloading...');\n        }\n    }\n\n    const onClick = async () => {\n        if (uploaded && !optimized) {\n            onOptimize();\n            ReactGA.event({\n                category: \"Convertion\",\n                action: \"optimize svg files\",\n                label: \"optimize\",\n            });\n        } else if (optimized) {\n            onDownload();\n            ReactGA.event({\n                category: \"Convertion\",\n                action: \"download svghmi.zip\",\n                label: \"download\",\n            });\n        }\n    }\n\n    let spanClass = loader ? 'loader' : 'btnText';\n    let spanText = optimized ? 'Download' : 'Convert';\n    let btnClass = 'btnCtrl';\n    if (loader) {\n        spanText = '';\n    }\n    if (!uploaded && !optimized) {\n        btnClass += ' btnDisabled';\n        spanText = 'Upload before';\n    }\n\n    return (\n        <>\n            <button \n                className={btnClass}\n                onClick={onClick}>\n                    <span className={spanClass}>{spanText}</span>\n            </button>\n        </>\n    );\n}\n\nexport default Controls;\n","import { Dropzone, FileItem } from \"@dropzone-ui/react\";\nimport { useSelector } from 'react-redux';\nimport ReactGA from 'react-ga4';\nimport { API_SERVER } from \"../../config/constant\";\nimport Controls from \"../controls/controls\";\n\nimport './dropfiles.css';\n\nfunction Dropfiles(props) {\n    const { id, files, setFiles, onUploaded, onClear } = props;\n\n    const { level } = useSelector(state => state.auth);\n\n    const updateFiles = (incommingFiles) => {\n        setFiles(incommingFiles);\n        if (incommingFiles.length === 0) {\n            onClear();\n        }\n    };\n\n    const onDelete = (id) => {\n        const newFiles = files.filter((x) => x.id !== id);\n        if (newFiles.length === 0) {\n            onClear();\n            console.log('onClear event generated')\n        }\n        ReactGA.event({\n            category: \"Convertion\",\n            action: \"delete svg files\",\n            label: \"delete\",\n        });\n        setFiles(newFiles);\n    };\n\n    const uploadFinished = (files) => {\n        ReactGA.event({\n            category: \"Convertion\",\n            action: \"upload svg files\",\n            label: \"upload\",\n            value: files.length,\n        });\n        onUploaded();\n    }\n\n    return (\n        <div className=\"dropfiles\">\n            <h3 className=\"dropfile-header\">Upload your files here</h3>\n            <Dropzone\n                accept=\".svg\"\n                label=\"Drop files here\"\n                uploadOnDrop\n                onChange={updateFiles}\n                value={files}\n                maxFiles={level === 'premium' ? 100 : 1}\n                maxFileSize={level === 'premium' ? 2097152 : 102400}\n                url={`${API_SERVER}/convertor/upload-files/${id}`}\n                onUploadFinish={uploadFinished} >\n                {files.map((file) => (\n                    <FileItem onDelete={onDelete} {...file} preview />\n                ))}\n            </Dropzone>\n            <Controls\n                onOptimize={props.onOptimize}\n                downloadId={props.downloadId}\n                loader={props.loader}\n                uploaded={props.uploaded}\n                optimized={props.optimized} />\n        </div>\n    );\n}\n\nexport default Dropfiles;\n","import ReactGA from 'react-ga4';\n\nimport './checkBoxItem.css';\n\nconst CheckBoxItem = (props) => {\n    const { checked, onClick, id, section, label } = props;\n\n    const onCheck = () => {\n        ReactGA.event({\n            category: 'Options',\n            action: `toggle ${id}`,\n            label: 'toggle option',\n            value: !checked ? 1 : 0,\n        });\n        onClick(section, id, !checked);\n    }\n\n    return (\n        <div className=\"cbx-item\">\n            <input\n                className=\"inp-cbx\"\n                id={id}\n                checked={checked}\n                onChange={onCheck}\n                type=\"checkbox\"\n                style={{display: \"none\"}} />\n            <label className=\"cbx\"htmlFor={id}>\n                <span>\n                    <svg width=\"12px\" height=\"10px\" viewBox=\"0 0 12 10\">\n                        <polyline points=\"1.5 6 4.5 9 10.5 1\"></polyline>\n                    </svg>\n                </span>\n                <span>{label}</span>\n            </label>\n        </div>\n    )\n}\n\nexport default CheckBoxItem;","import './inputFieldItem.css';\n\nconst InputFieldItem = (props) => {\n    const { labels, onChange, id, section, header } = props;\n\n    const onIdChange = (e) => {\n        const value = e.target.value.replace(' ', '').split(',');\n        onChange(section, id, value);\n    }\n\n    return (\n        <label htmlFor=\"inp\" className=\"inp\">\n            <input type=\"text\" id=\"inp\" value={labels} onChange={onIdChange} />\n                <span className=\"label\">{header}</span>\n                <span className=\"focus-bg\"></span>\n        </label>\n    )\n}\n\nexport default InputFieldItem;","import './error.css';\n\nconst Error = (props) => {\n    return (\n        <div className=\"error-message\">\n            <span className=\"error-text\">{props.text}</span>\n        </div>\n    )\n}\n\nexport default Error;\n","import CheckBoxItem from \"../checkBoxItem/checkBoxItem\";\nimport InputFieldItem from \"../inputFieldItem/inputFieldItem\";\nimport Error from \"../error/error\";\n\nimport './svghmi-preferences.css';\n\nconst SvghmiPreferences = (props) => {\n    const { config, onConfigChanged, error } = props;\n\n    const ShowColorControl = config.optimization.connectBgColor ? \n        <InputFieldItem\n            section=\"optimization\"\n            id=\"bgColorId\"\n            header=\"Element's IDs (comma separated)\"\n            labels={config.optimization.bgColorId}\n            onChange={onConfigChanged} />\n        : null;\n    \n    let removeIds = '';\n    config.svgo.forEach(elem => {\n        if (elem.name === 'removeAttrs') {\n            const str = elem.params.attrs;\n            removeIds = str.slice(1, str.length - 1);\n        }\n    });\n\n    return (\n        <div className='svghmi-preferences'>\n            {error ? <Error text=\"=( Sorry, something went wrong, try another svg files...\" /> : null}\n            <div className=\"wrap-collabsible\">\n                <input id=\"collapsible1\" className=\"toggle\" type=\"checkbox\" />\n                <label htmlFor=\"collapsible1\" className=\"lbl-toggle\">Options</label>\n                <div className=\"collapsible-content\">\n                    <div className=\"content-inner\">\n                        <CheckBoxItem\n                            id=\"addDefaults\"\n                            label=\"Add default values into Gradients\"\n                            section=\"optimization\"\n                            checked={config.optimization.addDefaults}\n                            onClick={onConfigChanged} />\n                        <CheckBoxItem\n                            id=\"pretify\"\n                            label=\"Pretify svg\"\n                            section=\"optimization\"\n                            checked={config.optimization.pretify}\n                            onClick={onConfigChanged} />\n                        <CheckBoxItem\n                            id=\"delGradientTransform\"\n                            label=\"Remove <gradientTransform> attribute and recalculate x(cx), y(cy)\"\n                            section=\"optimization\"\n                            checked={config.optimization.delGradientTransform}\n                            onClick={onConfigChanged} />\n                        <CheckBoxItem\n                            id=\"spaceToComma\"\n                            label=\"Change whitespaces to comma delimiter in gradientTransform attributes\"\n                            section=\"optimization\"\n                            checked={config.optimization.spaceToComma}\n                            onClick={onConfigChanged} />\n                        <CheckBoxItem\n                            id=\"delRefs\"\n                            label=\"Delete href and xlink:href in gradients\"\n                            section=\"optimization\"\n                            checked={config.optimization.delRefs}\n                            onClick={onConfigChanged} />\n                        <CheckBoxItem\n                            id=\"moveGradients\"\n                            label=\"Move gradients to <defs/>\"\n                            section=\"optimization\"\n                            checked={config.optimization.moveGradients}\n                            onClick={onConfigChanged} />\n                        <CheckBoxItem\n                            id=\"addFlipInterface\"\n                            label=\"Add Flip interface into SVGHMI\"\n                            section=\"optimization\"\n                            checked={config.optimization.addFlipInterface}\n                            onClick={onConfigChanged} />\n                        <CheckBoxItem\n                            id=\"convertShapeToPath\"\n                            label=\"Shape to Path\"\n                            section=\"svgo\"\n                            checked={config.svgo.includes(\"convertShapeToPath\")}\n                            onClick={onConfigChanged} />\n                        <CheckBoxItem\n                            id=\"polyToPath\"\n                            label=\"Poly to Path\"\n                            section=\"optimization\"\n                            checked={config.optimization.polyToPath}\n                            onClick={onConfigChanged} />\n                        <CheckBoxItem\n                            id=\"convertColors\"\n                            label=\"convert colors from rgb() to #rrggbb, from #rrggbb to #rgb\"\n                            section=\"svgo\"\n                            checked={config.svgo.includes(\"convertColors\")}\n                            onClick={onConfigChanged} />\n                        <CheckBoxItem\n                            id=\"removeDimensions\"\n                            label=\"Remove Width/Height and add viewBox if it's missing \"\n                            section=\"svgo\"\n                            checked={config.svgo.includes(\"removeDimensions\")}\n                            onClick={onConfigChanged} />\n                        <CheckBoxItem\n                            id=\"connectBgColor\"\n                            label=\"Attach bgColorXX to BasicColor interface property\"\n                            section=\"optimization\"\n                            checked={config.optimization.connectBgColor}\n                            onClick={onConfigChanged} />\n                        {ShowColorControl}\n                        <InputFieldItem\n                            section=\"svgo\"\n                            id=\"removeAttrs\"\n                            header=\"Remove user defined Ids (comma separated)\"\n                            labels={removeIds}\n                            onChange={onConfigChanged} />\n                    </div>\n                </div>\n            </div>\n            <div className=\"wrap-collabsible\">\n                <input id=\"collapsible2\" className=\"toggle\" type=\"checkbox\" />\n                <label htmlFor=\"collapsible2\" className=\"lbl-toggle\">Options Help</label>\n                <div className=\"collapsible-content\">\n                    <div className=\"content-inner\">\n                        <div className=\"option-text\">\n                            <h4>Add default values</h4>\n                            <p className=\"paragraphDesc\">Linear and Radial gradients can be without some attributes.\n                                For example <i>\"stop-color\" and \"stop-opacity\"</i>,\n                                for LinearGradient can be <i>\"x1\", \"x2\", \"y1\", \"y2\"</i>, for RadialGradient can be <i>\"cx\", \"cy\"</i>.\n                                When this option is activated program adds default value for \"stop-color\" it will be black color,\n                                for \"stop-opacity\" is null.\n                            </p>\n                        </div>\n                        <div className=\"option-text\">\n                            <h4 className=\"option-header\">Remove gradientTransform</h4>\n                            <p className=\"paragraphDesc\">Some Vector Graphics Editors can add <i>gradientTransform</i> attributes to Gradients,\n                                and <i>WinCC Unified</i> don't \"understand\" it and displays it as black.\n                                This option try to recalculate transformed coordinates to x and y. Sometimes it can break gradient.</p>\n                        </div>\n                        <div className=\"option-text\">\n                            <h4 className=\"option-header\">Space to comma delimiter</h4>\n                            <p className=\"paragraphDesc\">This option change space separated parameters in <i>gradientTransform</i> attributes to comma separated\n                                because <i>WinCC Unified</i> don't \"understand\" it and breaks it.</p>\n                        </div>\n                        <div className=\"option-text\">\n                            <h4 className=\"option-header\">Delete <i>href</i> and <i>xlink:href</i> in gradients</h4>\n                            <p className=\"paragraphDesc\">Some gradients can link to other gradients. And WinCC doesn't \"understand\" such gradients. and displays it as black. Thus these attributes must be removed to display correctly.</p>\n                        </div>\n                        <div className=\"option-text\">\n                            <h4 className=\"option-header\">Move Gradients to \"defs\"</h4>\n                            <p className=\"paragraphDesc\">Moving all gradients in document to <i>defs</i> element.</p>\n                        </div>\n\n                        <div className=\"option-text\">\n                            <h4 className=\"option-header\">Add Flip interface</h4>\n                            <p className=\"paragraphDesc\">Optionally you can add a flip property to mirror the widget horizontally.</p>\n                        </div>\n\n                        <div className=\"option-text\">\n                            <h4 className=\"option-header\">Convert Shape to Path</h4>\n                            <p className=\"paragraphDesc\">Optionally you can convert all shapes like (rectangle, circle ellipse, etc.) to path element.</p>\n                        </div>\n\n                        <div className=\"option-text\">\n                            <h4 className=\"option-header\">Convert Poly to Path</h4>\n                            <p className=\"paragraphDesc\">WinCC doesn't \"understand\" polyline and polygon, so by default it will be converted to path element.</p>\n                        </div>\n\n                        <div className=\"option-text\">\n                            <h4 className=\"option-header\">Convert colors from rgb() to #rrggbb, from #rrggbb to #rgb</h4>\n                            <p className=\"paragraphDesc\">Optionally you can unify colors to one type.</p>\n                        </div>\n\n                        <div className=\"option-text\">\n                            <h4 className=\"option-header\">Remove Width and Height</h4>\n                            <p className=\"paragraphDesc\">Remove from svg attributes width and height for better display in WinCC.</p>\n                        </div>\n\n                        <div className=\"option-text\">\n                            <h4 className=\"option-header\">Attach bgColor to BasicColor</h4>\n                            <p className=\"paragraphDesc\">You can specify the ids of the elements you want to change the color from the WinCC poperties. By default, the application searches for all IDs with the name <i>bgColor</i> and binds the fill attribute of svg element to the property with name BasicColor. All ids that have <i>bgColor</i> in the name will be bind to BasicColor. Separated by commas, you can specify several ID names to which you want to assign color change properties. For example, the string <i>bgColor,AlternateColor,AnotherColor</i> will result in the creation of three property fields <i>BasicColor</i>, <i>AlternateColor1</i>, <i>AlternateColor2</i>. If the elements with the specified IDs are not found in the svg document, then the property field associated with it will not be added.</p>\n                        </div>\n                        <div className=\"option-text\">\n                            <h4 className=\"option-header\">Delete user defined attributes</h4>\n                            <p className=\"paragraphDesc\">Optionaly you can delete from svg attributes what you want. Because some vector editors can add there custom attributes. And WinCC will throw the error if find it.</p>\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default SvghmiPreferences;\n","import './pricingElement.css';\n\nfunction PricingElement(props) {\n    return (\n        <div className=\"pricing-table\">\n            <div className=\"pricing-table-header\">\n                <h1>{props.month} MONTH</h1>\n            </div>\n\n            <div className=\"pricing-table-content\">\n                <ul>\n                    <li><strong>100</strong> Files per batch</li>\n                    <li><strong>2Mb</strong> Max file size</li>\n                    <li><strong>{props.month}</strong> Month of premium</li>\n                </ul>\n            </div>\n\n            <div className=\"pricing-table-footer\">\n                <h2><sup>$</sup>{props.price}</h2>\n                <button onClick={() => props.onPurchase(props.price, props.month)} >Purchase</button>\n            </div>\n        </div>\n    )\n}\n\nexport default PricingElement;\n","import PricingElement from '../pricingElement/pricingElement';\n\nimport './pricingTable.css';\n\nfunction PricingTable(props) {\n    return (\n        \n        <div className=\"pricing-container\">\n            <PricingElement month=\"1\" price=\"10\" onPurchase={props.onPurchase} />\n            <PricingElement month=\"3\" price=\"27\" onPurchase={props.onPurchase} />\n            <PricingElement month=\"6\" price=\"55\" onPurchase={props.onPurchase} />\n        </div>\n    )\n}\n\nexport default PricingTable;\n","import './loader.css';\n\nfunction Loader() {\n    return (<div className=\"loader-block\"></div>)\n}\n\nexport default Loader;\n","import { API_SERVER, API_CRYPTOCLOUD, AUTH_CRYPTOCLOUD, SHOP_ID } from '../config/constant';\n\n\nexport const createInvoice = async (amount, user_id, currency, email) => {\n    try {\n        const res = await fetch(`${API_CRYPTOCLOUD}/invoice/create`, {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n              'Authorization': `Token ${AUTH_CRYPTOCLOUD}`,\n            },\n            body: JSON.stringify({\n                shop_id: SHOP_ID,\n                amount,\n                order_id: user_id,\n                currency,\n                email,\n            }),\n        });\n        const data = await res.json();\n        return data;\n    } catch (err) {\n        console.error(err);\n        return null;\n    }\n}\n\nexport const saveInvoice = async (period, user_id, invoice, token) => {\n    try {\n        const res = await fetch(`${API_SERVER}/payment/invoice`, {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n              'Authorization': `Token ${token}`,\n            },\n            body: JSON.stringify({\n                period,\n                user_id,\n                invoice,\n            }),\n        });\n        const data = await res.json();\n        return data;\n    } catch (err) {\n        console.error(err);\n        return null;\n    }\n}\n\nexport const checkInvoice = async (uuid) => {\n    try {\n        const res = await fetch(`${API_CRYPTOCLOUD}/invoice/info`, {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n              'Authorization': `Token ${AUTH_CRYPTOCLOUD}`,\n            },\n            body: JSON.stringify({\n                uuid,\n            }),\n        });\n        const data = await res.json();\n        return data;\n    } catch (err) {\n        console.error(err);\n        return null;\n    }\n}\n\nexport const getActiveInvoice = async (user_id, token) => {\n    try {\n        const res = await fetch(`${API_SERVER}/payment/invoice/active`, {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n              'Authorization': `Token ${token}`,\n            },\n            body: JSON.stringify({\n                user_id,\n            }),\n        });\n        const data = await res.json();\n        return data;\n    } catch (err) {\n        return null;\n    }\n}\n\n","import { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router';\nimport ReactGA from 'react-ga4';\n\nimport PricingTable from '../pricingTable/pricingTable';\nimport Loader from '../loader/loader';\nimport { createInvoice, saveInvoice, getActiveInvoice } from '../../services/payment.service';\nimport { logoutAction } from \"../../store/actions/auth\";\n\nimport './payment.css';\n\nfunction Payment(props) {\n    const [loader, setLoader] = useState(false);\n    const [error, setError] = useState(false);\n    const [ready, setReady] = useState(false);\n    const [link, setLink] = useState(null);\n    const { user_id, isLoggedIn, token, email } = useSelector(state => state.auth);\n\n    const dispatch = useDispatch();\n\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        if (!isLoggedIn) {\n            return;\n        }\n        async function getLastInvoice() {\n            const data = await getActiveInvoice(user_id, token);\n            if (data.error && data.msg === 'Token expired') {\n                dispatch(logoutAction());\n                navigate('/');\n            }\n            if (data.status) {\n                setReady(true);\n                setLink(data.invoice.pay_url);\n            }\n        }\n        getLastInvoice();\n    }, [token, user_id, isLoggedIn, dispatch, navigate]);\n\n    const onPurchase = async (amount, period) => {\n        if (!isLoggedIn) {\n            navigate('/signup');\n            return;\n        }\n        setLoader(true);\n        const invoice = await createInvoice(amount, user_id, 'USD', email);\n        if (invoice && invoice.status === 'success') {\n            await saveInvoice(period, user_id, invoice, token);\n            setLoader(false);\n            setReady(true);\n            setLink(invoice.pay_url);\n            ReactGA.event({\n                category: \"Payment\",\n                action: \"create invoice\",\n                label: \"invoice\",\n                value: period,\n            });\n            return;\n        }\n        setError(true);\n        setLoader(false);\n    }\n\n    const onNewInvoice = () => {\n        setReady(false);\n        setError(false);\n    }\n\n    const LinkElement = () => (\n        <div className=\"link-block\">\n            <h1 className=\"link-header\">Invoice is ready!</h1>\n            <p className=\"link-text\">Now you can follow the link for paying your premium account</p>\n            <a target=\"_blank\" rel=\"noopener noreferrer\" href={link} className=\"a_link fas fa-check-circle\"> Pay Link</a>\n            <div>\n                <button className=\"new_invoice_btn\" onClick={onNewInvoice}>create new invoice</button>\n            </div>\n        </div>\n    );\n\n    const ErrorMessage = () => (\n        <div className=\"link-block\">\n            <h1 className=\"link-header\">Oops!</h1>\n            <p className=\"link-text\">Sorry, something went wrong. Cannot create invoice.</p>\n        </div>\n    );\n\n    return (\n        <div className=\"payment-content\">\n            <div className=\"payment-promo\">\n                <h1 className=\"payment-header\"><i className=\"fas fa-arrow-down\"></i> Choose your premium plan here <i className=\"fas fa-arrow-down\"></i></h1>\n                <p><span className=\"payment-promo-features\">Features </span>want more options and convenience? Try premium access.\n                    You will have access to batch file\n                    conversion of up to <span className=\"payment-promo-highlight\">100 files </span>\n                    at a time and the maximum size of one file will be increased\n                    up to <span className=\"payment-promo-highlight\">2 Mb</span>.\n                    You can easily <span className=\"payment-promo-highlight\">pay with crypto </span>\n                    or if you do not have it, directly by card.</p>\n                <p><span className=\"payment-promo-features\">Donate </span>\n                    this donation will let me know that it is worth further developing this service and some motivation.</p>\n                <p className=\"cannot-donate\"><span className=\"payment-promo-features\">Options* </span>\n                    if you have no chance to donate, but you absolutely need full functionality,\n                    just write to me and we will think along with you!</p>\n            </div>\n            {loader ? <Loader /> : null}\n            {ready ? <LinkElement /> : null}\n            {error ? <ErrorMessage /> : null}\n            {!ready ? <PricingTable onPurchase={onPurchase} /> : null}\n            <div className=\"payment-promo-options\">\n                <p>**Depending on the payment method chosen, the commission of the crypto processing service may change</p>\n            </div>\n        </div>\n    );\n}\n\nexport default Payment;\n","import { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { v4 as uuidv4 } from 'uuid';\nimport Navbar from '../navBar/navBar';\nimport Footer from '../footer/footer';\nimport AppInfo from '../app-info/app-info';\nimport Dropfiles from '../dropfiles/dropfiles';\nimport SvghmiPreferences from '../svghmi-preferences/svghmi-preferences';\nimport Payment from '../payment/payment';\n// import FaqComponent from '../faqComponent/faqComponent';\n\nimport { API_SERVER, CONFIG_DEFAULT } from './../../config/constant';\n\nimport '../app/baner.css';\n\nfunction Main(props) {\n    const [clientId, setClientId] = useState(uuidv4().split('-').join(''));\n    const [downloadId, setDownloadId] = useState('');\n    const [files, setFiles] = useState([]);\n    const [optimizeConf, setOptimizeConf] = useState(CONFIG_DEFAULT);\n    const [optimized, setOptimized] = useState(false);\n    const [uploaded, setUploaded] = useState(false);\n    const [loader, setLoader] = useState(false);\n    const [error, setError] = useState(false);\n \n    const { user_id } = useSelector(state => state.auth);\n\n    const optimizeFiles = async (conf) => {\n        setFiles([]);\n        setLoader(true);\n        const ids = optimizeConf.optimization.bgColorId.filter((elem) => elem !== '');\n        optimizeConf.optimization.bgColorId = ids;\n        if (ids.length === 1 && ids[0] === '') {\n            optimizeConf.optimization.connectBgColor = false;\n        }\n        const options = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ ...optimizeConf, user: user_id }),\n        };\n\n        try {\n            fetch(`${API_SERVER}/convertor/optimize/${clientId}`, options).then(res => {\n                if (res.status>=200 && res.status <300) {\n                  return res.json()\n                }else{\n                  throw new Error();\n                }\n            }).then(data=> {\n                console.log(data);\n                setOptimized(true);\n                setUploaded(false);\n                setDownloadId(clientId);\n                setClientId(uuidv4().split('-').join(''));\n                setLoader(false);\n                setError(false);\n            });\n\n        } catch (Err) {\n            console.error(Err)\n            setOptimized(false);\n            setUploaded(false);\n            setDownloadId(clientId);\n            setClientId(uuidv4().split('-').join(''));\n            setLoader(false);\n            setError(true);\n        }\n    }\n\n    const onConfigChanged = (section, id, value) => {\n        if (section === 'optimization') {\n            setOptimizeConf((prev) => {\n                const newConf = { ...prev };\n                newConf[section][id] = value;\n                return newConf;\n            });\n        }\n        if (section === 'svgo') {\n            if (id === 'removeAttrs') {\n                setOptimizeConf((prev) => {\n                    const newConf = { ...prev };\n                    newConf.svgo = newConf.svgo.map((elem) => {\n                        if (elem.name === 'removeAttrs') {\n                            return {\n                                name: 'removeAttrs',\n                                params: {\n                                    attrs: `(${value})`,\n                                },\n                            };\n                        }\n                        return elem;\n                    })\n                    newConf.svgo = newConf.svgo.filter(elem => elem !== id);\n                    return { ...newConf };\n                });\n                return;\n            }\n            setOptimizeConf((prev) => {\n                const newConf = { ...prev };\n                if (newConf.svgo.includes(id)) {\n                    newConf.svgo = newConf.svgo.filter(elem => elem !== id);\n                    return newConf;\n                }\n                newConf.svgo = [ ...newConf.svgo, id ];\n                return newConf;\n            });\n        }\n    }\n    return (\n        <>\n            <Navbar />\n            <header className=\"color-full clear-fix\">\n                <div className=\"text_color_full block3\">\n                    SVG to <span className='svghmi'>SVGHMI</span>\n                </div>\n            </header>\n            <AppInfo />\n            <Dropfiles\n                files={files}\n                setFiles={setFiles}\n                onUploaded={() => { setOptimized(false); setUploaded(true);}}\n                onClear={() => { setOptimized(false); setUploaded(false);}}\n                id={clientId}\n                onOptimize={optimizeFiles}\n                downloadId={downloadId}\n                loader={loader}\n                uploaded={uploaded}\n                optimized={optimized} />\n            <SvghmiPreferences\n                error={error}\n                config={optimizeConf}\n                onConfigChanged={onConfigChanged} />\n            <Payment />\n            {/* <FaqComponent /> */}\n            <Footer />\n        </>\n    );\n}\n\nexport default Main;\n","import { Component, useState } from 'react';\nimport { useNavigate } from \"react-router-dom\";\nimport { useDispatch, useSelector } from 'react-redux'\nimport ReactGA from 'react-ga4';\nimport { registerAction, loginAction } from '../../store/actions/auth';\nimport './loginComponent.css';\n\nconst mode = 'login';\n\nfunction LoginForm(props) {\n    const { message } = useSelector(state => state.message);\n    const [ login, setLogin ] = useState({\n        email_signup: '',\n        password: '',\n        fullname: '',\n        email: '',\n        createpassword: '',\n        repeatpassword: '',\n    });\n\n    const navigate = useNavigate();\n    const dispatch = useDispatch();\n  \n    // Validation functions\n    const isValidEmail = (email) => {\n      return /\\S+@\\S+\\.\\S+/.test(email);\n    }\n\n    const isPassIdentical = () =>  {\n        return login.createpassword === login.repeatpassword;\n    }\n\n    const isLoginFormValid = () => {\n        if (isValidEmail(login.email) && login.password && login.password !== '') {\n            return true;\n        }\n        return false;\n    }\n\n    const isSignupFormValid = () => {\n        if (isValidEmail(login.email_signup) && \n        login.fullname &&\n        isPassIdentical()) {\n            return true;\n        }\n        return false;\n    }\n\n    // Save credentials in state\n    const onHandleChange = (e) => {\n        const { id, value } = e.target;\n        setLogin({...login, \n            [id]: value,\n        })\n    }\n\n    const onForgot = () => {\n        navigate(`/forgot_password`);\n    }\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n        if (props.mode === 'signup' && isSignupFormValid()) {\n            dispatch(registerAction(\n                login.fullname,\n                login.email_signup,\n                login.createpassword))\n            .then(() => {\n                ReactGA.event('sign_up', { method: 'svghmi' });\n                navigate(`/email_sent`);\n            })\n            .catch(() => {\n                console.error('something goes wrong...');\n            });\n        } else {\n            dispatch(loginAction(login.email, login.password))\n            .then(() => {\n                ReactGA.event('login', { method: 'svghmi' });\n                navigate('/');\n            })\n            .catch(() => {\n                setLogin({...login, \n                    email: '',\n                    password: '',\n                });\n            });\n        }\n    }\n    const emailSignUpClass = isValidEmail(login.email_signup) ? 'form-group__input' : 'form-group__input error__input';\n    const emailLoginClass = isValidEmail(login.email) ? 'form-group__input' : 'form-group__input error__input';\n    let submitClass = 'buttonLogin button-login--primary full-width';\n    if (props.mode === 'signup' && !isSignupFormValid()) {\n        submitClass += ' button-login-disabled';\n    } else if (props.mode === 'login' && !isLoginFormValid()) {\n        submitClass += ' button-login-disabled';\n    }\n\n    const repeatClass = isPassIdentical() ? 'form-group__input' : 'form-group__input error__input';\n    const errorMessage = message ? <h5 className=\"login-message\">{message}</h5> : null;\n\n    return (\n        <form onSubmit={onSubmit}>\n            <div className=\"form-block__input-wrapper\">\n                <div className=\"form-group form-group--login\">                  \n                    <input className={emailLoginClass} type=\"text\" id=\"email\" label=\"email\" disabled={props.mode !== 'login'} value={login.email} onChange={onHandleChange} placeholder='email'/>\n                    <input className=\"form-group__input\" type=\"password\" id=\"password\" label=\"password\" disabled={props.mode !== 'login'} value={login.password} onChange={onHandleChange} placeholder='password' />\n                </div>\n                <div className=\"form-group form-group--signup\">\n                    <input className=\"form-group__input\" type=\"text\" id=\"fullname\" label=\"full name\" disabled={props.mode !== 'signup'} value={login.fullname} onChange={onHandleChange} placeholder='full name' />\n                    <input className={emailSignUpClass} type=\"email\" id=\"email_signup\" label=\"email\" disabled={props.mode !== 'signup'} value={login.email_signup} onChange={onHandleChange} placeholder='email' />\n                    <input className=\"form-group__input\" type=\"password\" id=\"createpassword\" label=\"password\" disabled={props.mode !== 'signup'} value={login.createpassword} onChange={onHandleChange} placeholder='password' />\n                    <input className={repeatClass} type=\"password\" id=\"repeatpassword\" label=\"repeat password\" disabled={props.mode !== 'signup'} value={login.repeatpassword} onChange={onHandleChange} placeholder='repeat password' />\n                </div>\n            </div>\n            <button className={submitClass} type=\"submit\">{props.mode === 'login' ? 'Log In' : 'Sign Up'}</button>\n            { errorMessage }\n            { props.mode === 'login' ? <button className=\"button-forgot\" onClick={onForgot} >Forgotten your password?</button> : null }\n        </form>\n    )\n}\n\nclass LoginComponent extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            mode: this.props.mode,\n        }\n    }\n\n    toggleMode() {\n        var newMode = this.state.mode === 'login' ? 'signup' : 'login';\n        this.setState({ mode: newMode});\n    }\n\n    render() {\n        return (\n            <div className={`login-form-app login-form-app--is-${mode}`}>\n                <div className={`form-block-wrapper form-block-wrapper--is-${this.state.mode}`} ></div>\n                <section className={`form-block form-block--is-${this.state.mode}`}>\n                    <header className=\"form-block__header\">\n                        <h1>{this.state.mode === 'login' ? 'Welcome back!' : 'Sign up'}</h1>\n                        <div className=\"form-block__toggle-block\">\n                            <span>{this.state.mode === 'login' ? 'Don\\'t' : 'Already'} have an account? Click here &#8594;</span>\n                            <input className=\"in-log-checkbox\" id=\"form-toggler\" type=\"checkbox\" onClick={this.toggleMode.bind(this)} />\n                            <label htmlFor=\"form-toggler\"></label>\n                        </div>\n                    </header>\n                    <LoginForm mode={this.state.mode}/>\n                </section>\n            </div>\n        )\n    }\n}\n\nexport default LoginComponent;\n","import LoginComponent from '../loginComponent/loginComponent';\n\nconst Login = (props) => {\n    return (\n        <LoginComponent\n            mode={props.mode}\n        />\n    )\n}\n\nexport default Login;\n","import { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useNavigate } from \"react-router-dom\";\n\nimport { changeNameAction } from '../../store/actions/auth';\nimport { changePassword, changeEmail, getPremiumDate } from '../../services/auth.service';\n\nimport Payment from '../payment/payment';\n\nimport './profileComponent.css';\n\nfunction ProfileComponent() {\n    const { email, name, isLoggedIn, level, token } = useSelector(state => state.auth);\n    const [userEmail, setUserEmail] = useState(email);\n    const [userName, setUserName] = useState(name);\n    const [pass1, setPass1] = useState('');\n    const [pass2, setPass2] = useState('');\n    const [emailMsg, setEmailMsg] = useState({});\n    const [nameMsg, setNameMsg] = useState({});\n    const [passMsg, setPassMsg] = useState({});\n    const [premium, setPremium] = useState(null);\n    const navigate = useNavigate();\n    const dispatch = useDispatch();\n\n    const isValidEmail = (email) => (/\\S+@\\S+\\.\\S+/.test(email));\n\n    useEffect(() => {\n        if (!isLoggedIn) {\n            navigate('/');\n        }\n        const fetchVal = async () => {\n            if (level === 'premium') {\n                const res = await getPremiumDate(token);\n                if (res.status) {\n                    setPremium(res.premium_expired);\n                }\n            }\n        }\n        fetchVal();\n    })\n\n    const onChangeName = (e) => {\n        setUserName(e.target.value);\n    }\n\n    const onChangeEmail = (e) => {\n        setUserEmail(e.target.value);\n    }\n\n    const onChangePass1 = (e) => {\n        setPass1(e.target.value);\n    }\n\n    const onChangePass2 = (e) => {\n        setPass2(e.target.value);\n    }\n\n    const onSubmitEmail = async (e) => {\n        e.preventDefault();\n        if (isValidEmail(userEmail)) {\n            const res = await changeEmail(userEmail, token);\n            if (res.error) {\n                setEmailMsg({\n                    style: 'error',\n                    text: res.msg,\n                });\n                return;\n            }\n            setEmailMsg({\n                style: 'success',\n                text: res.msg,\n            });\n            return\n        }\n        setEmailMsg({\n            style: 'error',\n            text: 'Email not valid',\n        });\n    }\n\n    const onSubmitName = (e) => {\n        e.preventDefault();\n        dispatch(changeNameAction(\n            userName,\n            token))\n            .then(() => {\n                setNameMsg({\n                    style: 'success',\n                    text: 'Name changed',\n                });\n            })\n            .catch((e) => {\n                console.error('something goes wrong...');\n                setNameMsg({\n                    style: 'error',\n                    text: 'Sorry, something went wrong',\n                });\n            });\n    }\n\n    const onSubmitPassword = async (e) => {\n        e.preventDefault();\n        if (pass1 === pass2) {\n            if (pass1.length < 6) {\n                setPassMsg({\n                    style: 'error',\n                    text: 'password must be at least 6 characters long',\n                });\n                return;\n            }\n            const res = await changePassword(pass1, token);\n            if (res.error) {\n                setPassMsg({\n                    style: 'error',\n                    text: res.msg,\n                });\n                return;\n            }\n            setPassMsg({\n                style: 'success',\n                text: res.msg,\n            });\n            setPass1('');\n            setPass2('');\n            return;\n        }\n        setPassMsg({\n            style: 'error',\n            text: 'Passwords is not identical',\n        });\n        setPass1('');\n        setPass2('');\n    }\n\n    const passDisabled = !!pass1 && pass1 === pass2 ? false : true;\n    const nameDisabled = !userName ? true : false;\n    const emailDisabled = !userEmail ? true : false;\n\n    const ExpiresOn = () => (\n        <h4 className=\"left-column-h\">\n            Expires on - { }<span className={level !== 'basic' ? 'level-premium' : 'level-basic'}>{premium}</span>\n        </h4>\n    );\n\n    return (\n        <>\n            <div className=\"profile-wrapper\">\n                <div className=\"profile-left\">\n                    <img className=\"profile-image-center\" src=\"/user-profile-image.svg\" alt=\"user profile template\" />\n                    <h4 className=\"left-column-h\">{name}</h4>\n                    <h4 className=\"left-column-h\">Account - <span className={level !== 'basic' ? 'level-premium' : 'level-basic'}>{level}</span></h4>\n                    {level === 'premium' ? <ExpiresOn /> : null}\n                </div>\n\n                <div className=\"profile-right\">\n                    <h2>Credentials</h2>\n                    <hr />\n                    <form className=\"form-inline\" onSubmit={onSubmitEmail} >\n                        <label htmlFor=\"email\">Email:</label>\n                        <input type=\"text\" id=\"email\" name=\"Email\" value={userEmail} onChange={onChangeEmail} />\n                        <button type=\"submit\" disabled={emailDisabled}>Change email</button>\n                    </form>\n                    {emailMsg.text ? <p className={`form-message-${emailMsg.style}`}>{emailMsg.text}</p> : null}\n                    <form className=\"form-inline\" onSubmit={onSubmitName} >\n                        <label htmlFor=\"name\">Name:</label>\n                        <input type=\"text\" id=\"name\" name=\"Name\" value={userName} onChange={onChangeName} />\n                        <button type=\"submit\" disabled={nameDisabled}>Change name</button>\n                    </form>\n                    {nameMsg.text ? <p className={`form-message-${nameMsg.style}`}>{nameMsg.text}</p> : null}\n                    <form className=\"form-inline\" onSubmit={onSubmitPassword} >\n                        <label htmlFor=\"name\">Password:</label>\n                        <input type=\"password\" id=\"password\" value={pass1} name=\"password\" onChange={onChangePass1} />\n                        <input type=\"password\" id=\"password-repeat\" value={pass2} name=\"password\" onChange={onChangePass2} />\n                        <button type=\"submit\" disabled={passDisabled}>Change password</button>\n                    </form>\n                    {passMsg.text ? <p className={`form-message-${passMsg.style}`}>{passMsg.text}</p> : null}\n                </div>\n            </div>\n            <Payment />\n        </>\n    );\n}\n\nexport default ProfileComponent;\n","import Navbar from '../navBar/navBar';\nimport ProfileComponent from '../profileComponent/profileComponent';\nimport Footer from '../footer/footer';\n\nfunction ProfilePage() {\n    \n    return (\n        <>\n            <Navbar />\n            <ProfileComponent />\n            <Footer />\n        </>\n    )\n}\n\nexport default ProfilePage;\n","import './messageTemplate.css';\n\nfunction MessageTemplate(props) {\n    const messageClass = props.is404 ? 'error' : 'message-template-wrap';\n    return (\n        <>\n            <div className=\"moon\"></div>\n            <div className=\"moon__crater moon__crater1\"></div>\n            <div className=\"moon__crater moon__crater2\"></div>\n            <div className=\"moon__crater moon__crater3\"></div>\n\n            <div className=\"star star1\"></div>\n            <div className=\"star star2\"></div>\n            <div className=\"star star3\"></div>\n            <div className=\"star star4\"></div>\n            <div className=\"star star5\"></div>\n\n            <div className={messageClass}>\n                {props.children}\n            </div>\n\n            <div className=\"astronaut\">\n                <div className=\"astronaut__backpack\"></div>\n                <div className=\"astronaut__body\"></div>\n                <div className=\"astronaut__body__chest\"></div>\n                <div className=\"astronaut__arm-left1\"></div>\n                <div className=\"astronaut__arm-left2\"></div>\n                <div className=\"astronaut__arm-right1\"></div>\n                <div className=\"astronaut__arm-right2\"></div>\n                <div className=\"astronaut__arm-thumb-left\"></div>\n                <div className=\"astronaut__arm-thumb-right\"></div>\n                <div className=\"astronaut__leg-left\"></div>\n                <div className=\"astronaut__leg-right\"></div>\n                <div className=\"astronaut__foot-left\"></div>\n                <div className=\"astronaut__foot-right\"></div>\n                <div className=\"astronaut__wrist-left\"></div>\n                <div className=\"astronaut__wrist-right\"></div>\n                \n                <div className=\"astronaut__cord\">\n                    <canvas id=\"cord\" height=\"500px\" width=\"500px\"></canvas>\n                </div>\n                <div className=\"astronaut__head\">\n                    <canvas id=\"visor\" width=\"60px\" height=\"60px\"></canvas>\n                    <div className=\"astronaut__head-visor-flare1\"></div>\n                    <div className=\"astronaut__head-visor-flare2\"></div>\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default MessageTemplate;","import { NavLink as Link } from \"react-router-dom\";\nimport MessageTemplate from \"../messageTemplate/messageTemplate\";\n\nimport './paymentResult.css';\n\nfunction PaymentResult(props) {\n    let iconClass = '';\n    let bgColorClass = 'payment_header';\n    let HeaderText = '';\n    if (props.type === 'success') {\n        iconClass = 'fa fa-check';\n        bgColorClass += ' payment_successed';\n        HeaderText = 'Payment Success !';\n    }\n    if (props.type === 'fail') {\n        iconClass = 'fa fa-times';\n        bgColorClass += ' payment_failed';\n        HeaderText = 'Payment Failed';\n    }\n\n    const text = props.type === 'success' ? 'Thank you for purchaise, now you have a premium subscription.' :\n        'Sorry, something went wrong, you can write me a letter and we will deal with it.';\n    return (\n        <MessageTemplate>\n            <div className=\"payment\">\n                <div className={bgColorClass} >\n                    <div className=\"payment_check\"><i className={iconClass} aria-hidden=\"true\"></i></div>\n                </div>\n                <div className=\"payment_content\">\n                <h1>{HeaderText}</h1>\n                <p>{text}</p>\n                {props.type === 'fail' ? <a href = \"mailto: cirillsokolov@proton.me\">cirillsokolov@proton.me</a>: null}\n                <Link to=\"/\">Go to Home</Link>\n                </div>\n            </div>\n        </MessageTemplate>\n    )\n}\n\nexport default PaymentResult;\n","import { useNavigate } from \"react-router-dom\";\nimport MessageTemplate from \"../messageTemplate/messageTemplate\";\nimport './notFoundPage.css';\n\nfunction NotFoundPage(props) {\n    const navigate = useNavigate();\n    const onClick = () => {\n        navigate('/');\n    }\n\n    return (\n        <MessageTemplate is404>\n            <div className=\"error__title\">404</div>\n            <div className=\"error__subtitle\">Hmmm...</div>\n            <div className=\"error__description\">It looks like one of the  developers fell asleep</div>\n            <button className=\"error__button error__button--active\" onClick={onClick}>HOME</button>\n        </MessageTemplate>\n    )\n}\n\nexport default NotFoundPage;\n","import { NavLink as Link, useParams } from \"react-router-dom\";\nimport MessageTemplate from \"../messageTemplate/messageTemplate\";\n\nimport './commonMessage.css';\n\nfunction CommonMessage(props) {\n    const params = useParams();\n\n    return (\n        <MessageTemplate>\n            <div className=\"message_container\">\n            <div className=\"message_header\" >\n               <div className=\"message_check\"><i className=\"fa fa-check\" aria-hidden=\"true\"></i></div>\n            </div>\n            <div className=\"message_content\">\n                {params.email ? <h5>{params.email}</h5> : null}\n                <h1>{props.header}</h1>\n                <p>{props.message}</p>\n                <Link to=\"/\">Go to Home</Link>\n            </div>\n         </div>\n        </MessageTemplate>\n    )\n}\n\nexport default CommonMessage;","import { useNavigate } from \"react-router-dom\";\nimport { useState } from 'react';\nimport MessageTemplate from \"../messageTemplate/messageTemplate\";\nimport { API_SERVER } from \"../../config/constant\";\n\nimport './forgotPassword.css';\n\nfunction ForgotPassword() {\n    const [email, setEmail] = useState('');\n    const [errorMsg, setErrorMsg] = useState('');\n\n    const navigate = useNavigate();\n\n    // Validation functions\n    const isValidEmail = (email) => {\n        return /\\S+@\\S+\\.\\S+/.test(email);\n        }\n\n    // Save credentials in state\n    const onChange = (e) => {\n        const { value } = e.target;\n        setEmail(value);\n    }\n\n    const requestReset = (email) => {\n        return fetch(`${API_SERVER}/users/reset_password`, {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              email,\n            }),\n          })\n          .then((response) => (response.json()))\n          .then((data) => {\n            if (data.error) {\n              throw new Error(\"Not 2xx response\", {cause: data});\n            }\n            return data;\n          });\n    }\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n        requestReset(email)\n        .then(() => {\n            navigate(`/reset_email_sent/${email}`);\n        })\n        .catch((error) => {\n            const message = (error.cause && error.cause.msg) ?\n                error.cause.msg : '';\n            setErrorMsg(message);\n            setEmail('');\n        });\n    }\n    let submitClass = 'buttonLogin button-login--primary full-width';\n    if (!isValidEmail(email)) submitClass += ' button-login-disabled';\n\n    return (\n        <MessageTemplate>\n            <section className={`form-block form-block--is-login`}>\n                <form onSubmit={onSubmit}>\n                    <h3 className=\"form-block__header\" >Forgot your password?</h3>\n                    <div className=\"form-group form-group--login\">                        \n                        <input className=\"form-group__input\" type=\"text\" id=\"email\" label=\"email\" value={email} onChange={onChange} placeholder='name@domain.com'/>\n                    </div>\n                    <button className={submitClass} type=\"submit\">Reset Password</button>\n                </form>\n            </section>\n            {errorMsg ? <h5 className=\"login-message\" >{errorMsg}</h5> : null}\n        </MessageTemplate>\n    )\n}\n\n\nexport default ForgotPassword;\n","import { useParams, useNavigate } from 'react-router-dom';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { logoutAction } from \"../../store/actions/auth\";\n\nimport MessageTemplate from \"../messageTemplate/messageTemplate\";\nimport { API_SERVER } from '../../config/constant';\n\nimport './resetPasswordForm.css';\n\nfunction ResetPasswordForm() {\n    const params = useParams();\n    const [errorMsg, setErrorMsg] = useState('');\n    const [pass1, setPass1] = useState('');\n    const [pass2, setPass2] = useState('');\n\n    const navigate = useNavigate();\n    const dispatch = useDispatch();\n\n    // Save credentials in state\n    const onChange1 = (e) => {\n        const { value } = e.target;\n        setPass1(value);\n    }\n    // Save credentials in state\n    const onChange2 = (e) => {\n        const { value } = e.target;\n        setPass2(value);\n    }\n\n    const requestSetPassword = () => {\n        return fetch(`${API_SERVER}/users/reset_password/${params.token}`, {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              id: params.id,\n              password: pass1,\n            }),\n          })\n          .then((response) => (response.json()))\n          .then((data) => {\n            if (data.error) {\n              throw new Error(\"Not 2xx response\", {cause: data});\n            }\n            return data;\n          });\n    }\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n        requestSetPassword()\n        .then(() => {\n            dispatch(logoutAction());\n            navigate(`/reset_password_successfull`);\n        })\n        .catch((error) => {\n            const message = (error.cause && error.cause.msg) ?\n                error.cause.msg : '';\n            console.log(message)\n            if (message === '') setErrorMsg('something goes wrong');\n            setErrorMsg(message);\n            setPass1('');\n            setPass2('');\n        });\n    }\n\n    const isPassIdentical = () =>  {\n        return pass1 === pass2;\n    }\n\n    const repeatClass = isPassIdentical() ? 'form-group__input' : 'form-group__input error__input';\n\n    return (\n        <MessageTemplate>\n            <section className={`form-block form-block--is-login`}>\n                <form onSubmit={onSubmit}>\n                    <h3 className=\"form-block__header\" >Set new password</h3>\n                    <div className=\"form-group form-group--login\">                        \n                        <input className=\"form-group__input\" type=\"password\" id=\"password\" label=\"password\" value={pass1} onChange={onChange1} placeholder='password' />\n                        <input className={repeatClass} type=\"password\" id=\"repeatpassword\" label=\"repeat password\" value={pass2} onChange={onChange2} placeholder='repeat password' />\n                    </div>\n                    <button className=\"buttonLogin button-login--primary\" type=\"submit\">Set Password</button>\n                </form>\n            </section>\n            {errorMsg ? <h5 className=\"login-message\" >{errorMsg}</h5> : null}\n        </MessageTemplate>\n    )\n}\n\nexport default ResetPasswordForm;\n","import { useState, useEffect } from \"react\";\nimport { NavLink as Link, useParams } from \"react-router-dom\";\nimport MessageTemplate from \"../messageTemplate/messageTemplate\";\nimport { API_SERVER } from '../../config/constant';\n\nfunction ConfirmationPage(props) {\n    const params = useParams();\n    const [error, setError] = useState('');\n\n    useEffect(() => {\n        fetch(`${API_SERVER}/users/email/confirm/${params.id}`, {})\n        .then((res) => res.json())\n        .then((data) => {\n            console.log(data)\n            if (data.error) {\n                setError(data.msg);\n            } else {\n                setError('');\n            }\n        })\n        .catch((err) => {\n            setError('Network error');\n        })\n    });\n\n\n    return (\n         <MessageTemplate>\n            <div className=\"message_container\">\n                <div className=\"message_header\" >\n                    <div className=\"message_check\"><i className=\"fa fa-check\" aria-hidden=\"true\"></i></div>\n                </div>\n                <div className=\"message_content\">\n                    <h1>{params.email}</h1>\n                    {!error ? <p><p>Your email successfully confirmed!</p></p> : null}\n                    {error ? <p>{error}</p> : null}\n                    <Link to=\"/\">Go to Home</Link>\n                </div>\n            </div> \n         </MessageTemplate>\n    )\n}\n\nexport default ConfirmationPage;\n","import { useState, useEffect } from 'react';\nimport ReactGA from 'react-ga4';\n\nimport './examplesComponent.css';\n\nfunction ExamplesComponent() {\n    \n    return (\n        <>\n            <h3>Examples</h3>\n        </>\n    )\n}\n\nexport default ExamplesComponent;\n","import Navbar from '../navBar/navBar';\nimport ExamplesComponent from '../examplesComponent/examplesComponent';\nimport Footer from '../footer/footer';\n\n\nfunction ExamplesPage() {\n    \n    return (\n        <>\n            <Navbar />\n            <ExamplesComponent />\n            <Footer />\n        </>\n    )\n}\n\nexport default ExamplesPage;\n","import { Routes, Route } from 'react-router-dom';\n\nimport useGaTracker from '../../hooks/useGaTracker';\n\nimport Main from '../pages/main';\nimport Login from '../pages/login';\nimport ProfilePage from '../pages/profile';\nimport PaymentResult from '../paymentResult/paymentResult';\nimport NotFoundPage from '../notFoundPage/notFoundPage';\nimport PricingTable from '../pricingTable/pricingTable';\nimport CommonMessage from '../commonMessage/commonMessage';\nimport ForgotPassword from '../forgotPassword/forgotPassword';\nimport ResetPasswordForm from '../resetPasswordForm/resetPasswordForm';\nimport ConfirmationPage from '../pages/confirmationPage';\nimport ExamplesPage from '../pages/examplesPage';\n\nimport './app.css';\n\n\nfunction App() {\n    useGaTracker();\n\n    return (\n        <div className=\"app\">\n            <Routes>\n                <Route exact path=\"/\" element={<Main />} />\n                <Route exact path=\"/login\" element={<Login mode=\"login\" />} />\n                <Route exact path=\"/signup\" element={<Login mode=\"signup\" />} />\n                <Route exact path=\"/profile\" element={<ProfilePage />} />\n                <Route exact path=\"/success_purchase\" element={<PaymentResult type=\"success\" />} />\n                <Route exact path=\"/failed_purchase\" element={<PaymentResult type=\"fail\" />} />\n                <Route exact path=\"/test\" element={<PricingTable />} />\n                <Route exact path=\"/forgot_password\" element={<ForgotPassword />} />\n                <Route exact path=\"/reset_password/:token/:id\" element={<ResetPasswordForm />} />\n                <Route exact path=\"/email_sent\" element={<CommonMessage header=\"We sent you confirmation email.\" \n                    message=\"Please follow the instraction in email\"/>} />\n                <Route exact path=\"/signup_confirm/:email/:id\" element={<ConfirmationPage />} />\n                <Route exact path=\"/reset_email_sent/:email\" element={<CommonMessage header=\"We sent you reset link.\" \n                    message=\"Please follow the instraction in email\"/>} />\n                <Route exact path=\"/reset_password_successfull\" element={<CommonMessage header=\"You set new password!\" \n                    message=\"Great, you set new password, and can continue use our service\"/>} />\n                <Route exact path=\"/examples\" element={<ExamplesPage/>} />\n                <Route path=\"*\" element={<NotFoundPage />} />\n            </Routes>\n        </div>\n    );\n}\n\nexport default App;\n","import {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n} from \"../actions/types\";\n\nconst name = JSON.parse(localStorage.getItem('name'));\nconst user_id = JSON.parse(localStorage.getItem('user_id'));\nconst email = JSON.parse(localStorage.getItem('email'));\nconst token = JSON.parse(localStorage.getItem('token'));\nconst expires_in = JSON.parse(localStorage.getItem('expires_in'));\nconst level = JSON.parse(localStorage.getItem('level'));\n\nconst initialState = token\n  ? { isLoggedIn: true, name, email, token, expires_in, level, user_id }\n  : { isLoggedIn: false, name: null, email: null, token: null, expires_in: null, level: null, user_id: null };\n\nexport default function auth(state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case REGISTER_SUCCESS:\n      return {\n        ...state,\n        isLoggedIn: false,\n      };\n    case REGISTER_FAIL:\n      return {\n        ...state,\n        isLoggedIn: false,\n      };\n    case LOGIN_SUCCESS:\n      return {\n        ...state,\n        isLoggedIn: true,\n        name: payload.name,\n        user_id: payload.user_id,\n        email: payload.email,\n        token: payload.token,\n        expires_in: payload.expires_in,\n        level: payload.level,\n      };\n    case LOGIN_FAIL:\n      return {\n        ...state,\n        isLoggedIn: false,\n        name: null,\n        user_id: null,\n        email: null,\n        token: null,\n        expires_in: null,\n        level: null,\n      };\n    case LOGOUT:\n      return {\n        ...state,\n        isLoggedIn: false,\n        name: null,\n        user_id: null,\n        email: null,\n        token: null,\n        expires_in: null,\n        level: null,\n      };\n    default:\n      return state;\n  }\n}\n","import { SET_MESSAGE, CLEAR_MESSAGE } from \"../actions/types\";\n\nconst initialState = {\n  message: '',\n};\n\nexport default function message(state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case SET_MESSAGE:\n      return { message: payload };\n\n    case CLEAR_MESSAGE:\n      return { message: \"\" };\n\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport auth from \"../reducers/auth\";\nimport message from \"../reducers/message\";\n\nexport default combineReducers({\n  auth,\n  message,\n});\n","import { createStore, applyMiddleware } from 'redux'\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst middleware = [thunk];\n\nconst store = createStore(rootReducer, applyMiddleware(...middleware));\n\nexport { store };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './components/app/app';\n// import { BrowserRouter as Router } from 'react-router-dom';\nimport { HashRouter as Router } from 'react-router-dom';\nimport { BASE_TITLE } from './config/constant';\nimport './index.css';\nimport { store } from './store';\n\n\n\ndocument.title = `${BASE_TITLE} | Tool for creating dynamic WinCC Unified widgets`;\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router>\n        <App />\n      </Router>\n    </Provider>\n  </React.StrictMode >,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}